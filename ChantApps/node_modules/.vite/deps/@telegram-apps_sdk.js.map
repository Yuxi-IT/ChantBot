{
  "version": 3,
  "sources": ["../../@telegram-apps/transformers/dist/index.js", "../../@telegram-apps/sdk/src/classnames/classNames.ts", "../../@telegram-apps/sdk/src/classnames/mergeClassNames.ts", "../../@telegram-apps/bridge/dist/index.js", "../../@telegram-apps/navigation/dist/index.js", "../../@telegram-apps/signals/dist/index.js", "../../@telegram-apps/sdk/src/scopes/globals.ts", "../../@telegram-apps/sdk/src/scopes/toolkit/createIsSupported.ts", "../../@telegram-apps/sdk/src/errors.ts", "../../@telegram-apps/sdk/src/utils/isSSR.ts", "../../@telegram-apps/sdk/src/scopes/toolkit/wrapSafe.ts", "../../@telegram-apps/sdk/src/scopes/toolkit/createWrapSafe.ts", "../../@telegram-apps/sdk/src/scopes/toolkit/createWrapComplete.ts", "../../@telegram-apps/sdk/src/scopes/toolkit/createWrapSupported.ts", "../../@telegram-apps/sdk/src/scopes/components/back-button/back-button.ts", "../../@telegram-apps/sdk/src/scopes/signalifyAsyncFn.ts", "../../@telegram-apps/sdk/src/scopes/createMountFn.ts", "../../@telegram-apps/sdk/src/scopes/toolkit/createWrapBasic.ts", "../../@telegram-apps/sdk/src/scopes/components/biometry/signals.ts", "../../@telegram-apps/sdk/src/scopes/components/biometry/eventToState.ts", "../../@telegram-apps/sdk/src/scopes/components/biometry/requestBiometry.ts", "../../@telegram-apps/sdk/src/scopes/components/biometry/methods.ts", "../../@telegram-apps/sdk/src/scopes/toolkit/createWrapMounted.ts", "../../@telegram-apps/sdk/src/scopes/components/closing-behavior/closing-behavior.ts", "../../@telegram-apps/sdk/src/scopes/components/cloud-storage/cloud-storage.ts", "../../@telegram-apps/sdk/src/scopes/components/haptic-feedback/haptic-feedback.ts", "../../@telegram-apps/sdk/src/scopes/components/init-data/init-data.ts", "../../@telegram-apps/sdk/src/scopes/components/init-data/parseInitData.ts", "../../@telegram-apps/sdk/src/scopes/components/invoice/invoice.ts", "../../@telegram-apps/sdk/src/utils/removeUndefined.ts", "../../@telegram-apps/sdk/src/utils/isColorDark.ts", "../../@telegram-apps/sdk/src/scopes/components/theme-params/signals.ts", "../../@telegram-apps/sdk/src/scopes/components/main-button/signals.ts", "../../@telegram-apps/sdk/src/scopes/components/main-button/methods.ts", "../../@telegram-apps/sdk/src/scopes/toolkit/throwCssVarsBound.ts", "../../@telegram-apps/sdk/src/scopes/components/theme-params/parseThemeParams.ts", "../../@telegram-apps/sdk/src/scopes/components/theme-params/methods.ts", "../../@telegram-apps/sdk/src/scopes/components/mini-app/signals.ts", "../../@telegram-apps/sdk/src/scopes/components/mini-app/methods.ts", "../../@telegram-apps/sdk/src/scopes/components/popup/prepareParams.ts", "../../@telegram-apps/sdk/src/scopes/components/popup/popup.ts", "../../@telegram-apps/sdk/src/scopes/components/qr-scanner/qr-scanner.ts", "../../@telegram-apps/sdk/src/scopes/components/secondary-button/signals.ts", "../../@telegram-apps/sdk/src/scopes/components/secondary-button/methods.ts", "../../@telegram-apps/sdk/src/scopes/components/settings-button/settings-button.ts", "../../@telegram-apps/sdk/src/scopes/components/swipe-behavior/swipe-behavior.ts", "../../@telegram-apps/sdk/src/scopes/components/viewport/const.ts", "../../@telegram-apps/sdk/src/scopes/components/viewport/signals/state.ts", "../../@telegram-apps/sdk/src/scopes/components/viewport/signals/fullscreen.ts", "../../@telegram-apps/sdk/src/scopes/components/viewport/signals/mounting.ts", "../../@telegram-apps/sdk/src/scopes/components/viewport/methods/fullscreen/createFullscreenFn.ts", "../../@telegram-apps/sdk/src/scopes/components/viewport/methods/fullscreen/requestFullscreen.ts", "../../@telegram-apps/sdk/src/scopes/components/viewport/methods/fullscreen/exitFullscreen.ts", "../../@telegram-apps/sdk/src/scopes/components/viewport/methods/wrappers.ts", "../../@telegram-apps/sdk/src/scopes/components/viewport/signals/safe-area-insets.ts", "../../@telegram-apps/sdk/src/scopes/components/viewport/signals/content-safe-area-insets.ts", "../../@telegram-apps/sdk/src/scopes/components/viewport/methods/static/requestContentSafeAreaInsets.ts", "../../@telegram-apps/sdk/src/scopes/components/viewport/methods/static/requestSafeAreaInsets.ts", "../../@telegram-apps/sdk/src/scopes/components/viewport/methods/static/requestViewport.ts", "../../@telegram-apps/sdk/src/scopes/components/viewport/methods/mounting/shared.ts", "../../@telegram-apps/sdk/src/scopes/components/viewport/methods/mounting/mount.ts", "../../@telegram-apps/sdk/src/scopes/components/viewport/methods/mounting/unmount.ts", "../../@telegram-apps/sdk/src/scopes/components/viewport/signals/css-vars.ts", "../../@telegram-apps/sdk/src/scopes/components/viewport/signals/dimensions.ts", "../../@telegram-apps/sdk/src/scopes/components/viewport/methods/bindCssVars.ts", "../../@telegram-apps/sdk/src/scopes/components/viewport/methods/expand.ts", "../../@telegram-apps/sdk/src/scopes/components/viewport/signals/flags.ts", "../../@telegram-apps/sdk/src/scopes/utilities/emoji-status/requestEmojiStatusAccess.ts", "../../@telegram-apps/sdk/src/scopes/utilities/emoji-status/setEmojiStatus.ts", "../../@telegram-apps/sdk/src/scopes/utilities/links/openLink.ts", "../../@telegram-apps/sdk/src/scopes/utilities/links/openTelegramLink.ts", "../../@telegram-apps/sdk/src/scopes/utilities/links/shareURL.ts", "../../@telegram-apps/sdk/src/scopes/utilities/privacy/requestPhoneAccess.ts", "../../@telegram-apps/sdk/src/scopes/utilities/privacy/requestContact.ts", "../../@telegram-apps/sdk/src/scopes/utilities/privacy/requestWriteAccess.ts", "../../@telegram-apps/sdk/src/scopes/utilities/uncategorized/getCurrentTime.ts", "../../@telegram-apps/sdk/src/scopes/utilities/uncategorized/readTextFromClipboard.ts", "../../@telegram-apps/sdk/src/scopes/utilities/uncategorized/sendData.ts", "../../@telegram-apps/sdk/src/scopes/utilities/uncategorized/shareStory.ts", "../../@telegram-apps/sdk/src/scopes/utilities/uncategorized/switchInlineQuery.ts", "../../@telegram-apps/sdk/src/utils/safeCall.ts", "../../@telegram-apps/sdk/src/init.ts"],
  "sourcesContent": ["class u extends Error {\n  constructor(e, r, n) {\n    super(\n      typeof r == \"object\" ? r.message : r || e,\n      {\n        cause: typeof r == \"object\" ? r.cause : n\n      }\n    ), this.type = e, Object.setPrototypeOf(this, u.prototype);\n  }\n}\nfunction h(t) {\n  return t.replace(/[A-Z]/g, (e) => `_${e.toLowerCase()}`);\n}\nfunction S(t) {\n  return t.replace(/_[a-z]/g, (e) => e[1].toUpperCase());\n}\nconst w = \"ERR_INVALID_VALUE\", D = \"ERR_UNEXPECTED_VALUE\", W = \"ERR_UNEXPECTED_TYPE\", d = \"ERR_PARSE\";\nfunction A(t, e) {\n  const r = {};\n  for (const n in t) {\n    const o = t[n];\n    if (!o)\n      continue;\n    let a, c;\n    typeof o == \"function\" ? (a = n, c = o) : [a, c] = o;\n    try {\n      const s = c(e(a));\n      s !== void 0 && (r[n] = s);\n    } catch (s) {\n      throw new u(\n        d,\n        `Parser for \"${n}\" property failed${a === n ? \"\" : `. Source field: \"${a}\"`}`,\n        s\n      );\n    }\n  }\n  return r;\n}\nfunction P(t) {\n  let e = t;\n  if (typeof e == \"string\")\n    try {\n      e = JSON.parse(e);\n    } catch (r) {\n      throw new u(w, { cause: r });\n    }\n  if (typeof e != \"object\" || !e || Array.isArray(e))\n    throw new u(D);\n  return e;\n}\nfunction i(t, e) {\n  return (r) => {\n    const n = (o) => {\n      if (!(r && o === void 0))\n        try {\n          return e(o);\n        } catch (a) {\n          throw new u(d, {\n            message: `\"${t}\" transformer failed to parse the value`,\n            cause: a\n          });\n        }\n    };\n    return /* @__PURE__ */ Object.assign(\n      n,\n      {\n        isValid(o) {\n          try {\n            return n(o), !0;\n          } catch {\n            return !1;\n          }\n        }\n      }\n    );\n  };\n}\nfunction m(t, e) {\n  return i(e || \"object\", (r) => {\n    const n = P(r);\n    return A(t, (o) => n[o]);\n  });\n}\nfunction p(t) {\n  throw new u(W, `Unexpected value received: ${JSON.stringify(t)}`);\n}\nconst E = i(\"boolean\", (t) => {\n  if (typeof t == \"boolean\")\n    return t;\n  const e = String(t);\n  if (e === \"1\" || e === \"true\")\n    return !0;\n  if (e === \"0\" || e === \"false\")\n    return !1;\n  p(t);\n}), f = i(\"string\", (t) => {\n  if (typeof t == \"string\" || typeof t == \"number\")\n    return t.toString();\n  p(t);\n}), g = i(\"number\", (t) => {\n  if (typeof t == \"number\")\n    return t;\n  if (typeof t == \"string\") {\n    const e = Number(t);\n    if (!Number.isNaN(e))\n      return e;\n  }\n  p(t);\n}), U = i(\"date\", (t) => t instanceof Date ? t : new Date(g()(t) * 1e3));\nfunction R(t, e) {\n  return i(e || \"searchParams\", (r) => {\n    typeof r != \"string\" && !(r instanceof URLSearchParams) && p(r);\n    const n = typeof r == \"string\" ? new URLSearchParams(r) : r;\n    return A(t, (o) => {\n      const a = n.get(o);\n      return a === null ? void 0 : a;\n    });\n  });\n}\nfunction l(t) {\n  for (const e in t)\n    t[e] = [h(e), t[e]];\n  return t;\n}\nconst N = (t) => {\n  const e = g(), r = g(!0), n = f(), o = f(!0), a = E(!0), c = m(l({\n    addedToAttachmentMenu: a,\n    allowsWriteToPm: a,\n    firstName: n,\n    id: e,\n    isBot: a,\n    isPremium: a,\n    languageCode: o,\n    lastName: o,\n    photoUrl: o,\n    username: o\n  }), \"User\")(!0);\n  return R(\n    l({\n      authDate: U(),\n      canSendAfter: r,\n      chat: m(\n        l({\n          id: e,\n          type: n,\n          title: n,\n          photoUrl: o,\n          username: o\n        }),\n        \"Chat\"\n      )(!0),\n      chatInstance: o,\n      chatType: o,\n      hash: n,\n      queryId: o,\n      receiver: c,\n      startParam: o,\n      signature: n,\n      user: c\n    }),\n    \"initData\"\n  )(t);\n};\nfunction O(t) {\n  return /^#[\\da-f]{6}$/i.test(t);\n}\nfunction _(t) {\n  return /^#[\\da-f]{3}$/i.test(t);\n}\nfunction C(t) {\n  const e = t.replace(/\\s/g, \"\").toLowerCase();\n  if (O(e))\n    return e;\n  if (_(e)) {\n    let n = \"#\";\n    for (let o = 0; o < 3; o += 1)\n      n += e[1 + o].repeat(2);\n    return n;\n  }\n  const r = e.match(/^rgb\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3})\\)$/) || e.match(/^rgba\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3}),\\d{1,3}\\)$/);\n  if (!r)\n    throw new Error(`Value \"${t}\" does not satisfy any of known RGB formats.`);\n  return r.slice(1).reduce((n, o) => {\n    const a = parseInt(o, 10).toString(16);\n    return n + (a.length === 1 ? \"0\" : \"\") + a;\n  }, \"#\");\n}\nconst T = i(\"rgb\", (t) => C(f()(t))), b = i(\n  \"themeParams\",\n  (t) => {\n    const e = T(!0);\n    return Object.entries(P(t)).reduce((r, [n, o]) => (r[S(n)] = e(o), r), {});\n  }\n);\n// @__NO_SIDE_EFFECTS__\nfunction y(t) {\n  return JSON.stringify(\n    Object.fromEntries(\n      Object.entries(t).map(([e, r]) => [h(e), r])\n    )\n  );\n}\nconst V = (t) => {\n  const e = f(), r = f(!0), n = E(!0);\n  return R({\n    botInline: [\"tgWebAppBotInline\", n],\n    defaultColors: [\"tgWebAppDefaultColors\", b(!0)],\n    fullscreen: [\"tgWebAppFullscreen\", n],\n    initData: [\"tgWebAppData\", N(!0)],\n    initDataRaw: [\"tgWebAppData\", r],\n    platform: [\"tgWebAppPlatform\", e],\n    showSettings: [\"tgWebAppShowSettings\", n],\n    startParam: [\"tgWebAppStartParam\", r],\n    themeParams: [\"tgWebAppThemeParams\", b()],\n    version: [\"tgWebAppVersion\", e]\n  }, \"launchParams\")(t);\n};\n// @__NO_SIDE_EFFECTS__\nfunction $(t) {\n  const {\n    initDataRaw: e,\n    startParam: r,\n    showSettings: n,\n    botInline: o,\n    fullscreen: a,\n    defaultColors: c\n  } = t, s = new URLSearchParams();\n  return s.set(\"tgWebAppPlatform\", t.platform), s.set(\"tgWebAppThemeParams\", /* @__PURE__ */ y(t.themeParams)), s.set(\"tgWebAppVersion\", t.version), e && s.set(\"tgWebAppData\", e), r && s.set(\"tgWebAppStartParam\", r), typeof n == \"boolean\" && s.set(\"tgWebAppShowSettings\", n ? \"1\" : \"0\"), typeof o == \"boolean\" && s.set(\"tgWebAppBotInline\", o ? \"1\" : \"0\"), typeof a == \"boolean\" && s.set(\"tgWebAppFullscreen\", a ? \"1\" : \"0\"), c && s.set(\"tgWebAppDefaultColors\", /* @__PURE__ */ y(c)), s.toString();\n}\nconst j = m({\n  eventType: f(),\n  eventData: (t) => t\n}, \"miniAppsMessage\");\nfunction L(t, e) {\n  return i(e || \"array\", (r) => {\n    let n;\n    if (Array.isArray(r))\n      n = r;\n    else if (typeof r == \"string\")\n      try {\n        const o = JSON.parse(r);\n        Array.isArray(o) && (n = o);\n      } catch {\n      }\n    return n || p(r), n.map(t);\n  });\n}\nconst I = i(\"fn\", (t) => {\n  if (typeof t == \"function\")\n    return t;\n  p(t);\n});\nfunction B(t) {\n  return !!t && typeof t == \"object\" && !Array.isArray(t);\n}\nexport {\n  w as ERR_INVALID_VALUE,\n  d as ERR_PARSE,\n  W as ERR_UNEXPECTED_TYPE,\n  D as ERR_UNEXPECTED_VALUE,\n  L as array,\n  E as boolean,\n  i as createTransformerGen,\n  U as date,\n  I as fn,\n  N as initData,\n  O as isRGB,\n  _ as isRGBShort,\n  B as isRecord,\n  V as launchParams,\n  j as miniAppsMessage,\n  g as number,\n  m as object,\n  T as rgb,\n  R as searchParams,\n  $ as serializeLaunchParams,\n  y as serializeThemeParams,\n  f as string,\n  b as themeParams,\n  C as toRGB,\n  P as toRecord\n};\n//# sourceMappingURL=index.js.map\n", "import { isRecord } from '@telegram-apps/transformers';\n\n/**\n * Function which joins passed values with space following these rules:\n * 1. If value is non-empty string, it will be added to output.\n * 2. If value is object, only those keys will be added, which values are truthy.\n * 3. If value is array, classNames will be called with this value spread.\n * 4. All other values are ignored.\n *\n * You can find this function to similar one from the package {@link https://www.npmjs.com/package/classnames|classnames}.\n * @param values - values array.\n * @returns Final class name.\n */\nexport function classNames(...values: any[]): string {\n  return values\n    .map((value) => {\n      if (typeof value === 'string') {\n        return value;\n      }\n\n      if (isRecord(value)) {\n        return classNames(Object.entries(value).map((entry) => entry[1] && entry[0]));\n      }\n\n      if (Array.isArray(value)) {\n        return classNames(...value);\n      }\n    })\n    .filter(Boolean)\n    .join(' ');\n}\n", "import { isRecord } from '@telegram-apps/transformers';\nimport type {\n  UnionRequiredKeys,\n  UnionOptionalKeys,\n} from '@telegram-apps/toolkit';\n\nimport { classNames } from './classNames.js';\n\nexport type MergeClassNames<Tuple extends any[]> =\n// Removes all types from union that will be ignored by the mergeClassNames\n// function.\n  Exclude<Tuple[number], number | string | null | undefined | any[] | boolean> extends infer Union\n    ?\n    & { [K in UnionRequiredKeys<Union>]: string; }\n    & { [K in UnionOptionalKeys<Union>]?: string; }\n    : never;\n\n/**\n * Merges two sets of classnames.\n *\n * The function expects to pass an array of objects with values that could be\n * passed to the `classNames` function.\n * @returns An object with keys from all objects with merged values.\n * @see classNames\n */\nexport function mergeClassNames<T extends any[]>(...partials: T): MergeClassNames<T> {\n  return partials.reduce<MergeClassNames<T>>((acc, partial) => {\n    if (isRecord(partial)) {\n      Object.entries(partial).forEach(([key, value]) => {\n        const className = classNames((acc as any)[key], value);\n        if (className) {\n          (acc as any)[key] = className;\n        }\n      });\n    }\n    return acc;\n  }, {} as MergeClassNames<T>);\n}\n", "class d extends Error {\n  constructor(t, n, r) {\n    super(\n      typeof n == \"object\" ? n.message : n || t,\n      {\n        cause: typeof n == \"object\" ? n.cause : r\n      }\n    ), this.type = t, Object.setPrototypeOf(this, d.prototype);\n  }\n}\nfunction G(e) {\n  return e.replace(/[A-Z]/g, (t) => `_${t.toLowerCase()}`);\n}\nfunction we(e) {\n  return e.replace(/_[a-z]/g, (t) => t[1].toUpperCase());\n}\nconst he = \"ERR_INVALID_VALUE\", me = \"ERR_UNEXPECTED_VALUE\", de = \"ERR_UNEXPECTED_TYPE\", K = \"ERR_PARSE\";\nfunction V(e, t) {\n  const n = {};\n  for (const r in e) {\n    const o = e[r];\n    if (!o)\n      continue;\n    let s, a;\n    typeof o == \"function\" ? (s = r, a = o) : [s, a] = o;\n    try {\n      const c = a(t(s));\n      c !== void 0 && (n[r] = c);\n    } catch (c) {\n      throw new d(\n        K,\n        `Parser for \"${r}\" property failed${s === r ? \"\" : `. Source field: \"${s}\"`}`,\n        c\n      );\n    }\n  }\n  return n;\n}\nfunction Z(e) {\n  let t = e;\n  if (typeof t == \"string\")\n    try {\n      t = JSON.parse(t);\n    } catch (n) {\n      throw new d(he, { cause: n });\n    }\n  if (typeof t != \"object\" || !t || Array.isArray(t))\n    throw new d(me);\n  return t;\n}\nfunction g(e, t) {\n  return (n) => {\n    const r = (o) => {\n      if (!(n && o === void 0))\n        try {\n          return t(o);\n        } catch (s) {\n          throw new d(K, {\n            message: `\"${e}\" transformer failed to parse the value`,\n            cause: s\n          });\n        }\n    };\n    return /* @__PURE__ */ Object.assign(\n      r,\n      {\n        isValid(o) {\n          try {\n            return r(o), !0;\n          } catch {\n            return !1;\n          }\n        }\n      }\n    );\n  };\n}\nfunction l(e, t) {\n  return g(t || \"object\", (n) => {\n    const r = Z(n);\n    return V(e, (o) => r[o]);\n  });\n}\nfunction R(e) {\n  throw new d(de, `Unexpected value received: ${JSON.stringify(e)}`);\n}\nconst $ = g(\"boolean\", (e) => {\n  if (typeof e == \"boolean\")\n    return e;\n  const t = String(e);\n  if (t === \"1\" || t === \"true\")\n    return !0;\n  if (t === \"0\" || t === \"false\")\n    return !1;\n  R(e);\n}), _ = g(\"string\", (e) => {\n  if (typeof e == \"string\" || typeof e == \"number\")\n    return e.toString();\n  R(e);\n}), P = g(\"number\", (e) => {\n  if (typeof e == \"number\")\n    return e;\n  if (typeof e == \"string\") {\n    const t = Number(e);\n    if (!Number.isNaN(t))\n      return t;\n  }\n  R(e);\n}), Ee = g(\"date\", (e) => e instanceof Date ? e : new Date(P()(e) * 1e3));\nfunction z(e, t) {\n  return g(t || \"searchParams\", (n) => {\n    typeof n != \"string\" && !(n instanceof URLSearchParams) && R(n);\n    const r = typeof n == \"string\" ? new URLSearchParams(n) : n;\n    return V(e, (o) => {\n      const s = r.get(o);\n      return s === null ? void 0 : s;\n    });\n  });\n}\nfunction j(e) {\n  for (const t in e)\n    e[t] = [G(t), e[t]];\n  return e;\n}\nconst ye = (e) => {\n  const t = P(), n = P(!0), r = _(), o = _(!0), s = $(!0), a = l(j({\n    addedToAttachmentMenu: s,\n    allowsWriteToPm: s,\n    firstName: r,\n    id: t,\n    isBot: s,\n    isPremium: s,\n    languageCode: o,\n    lastName: o,\n    photoUrl: o,\n    username: o\n  }), \"User\")(!0);\n  return z(\n    j({\n      authDate: Ee(),\n      canSendAfter: n,\n      chat: l(\n        j({\n          id: t,\n          type: r,\n          title: r,\n          photoUrl: o,\n          username: o\n        }),\n        \"Chat\"\n      )(!0),\n      chatInstance: o,\n      chatType: o,\n      hash: r,\n      queryId: o,\n      receiver: a,\n      startParam: o,\n      signature: r,\n      user: a\n    }),\n    \"initData\"\n  )(e);\n};\nfunction ve(e) {\n  return /^#[\\da-f]{6}$/i.test(e);\n}\nfunction Pe(e) {\n  return /^#[\\da-f]{3}$/i.test(e);\n}\nfunction Re(e) {\n  const t = e.replace(/\\s/g, \"\").toLowerCase();\n  if (ve(t))\n    return t;\n  if (Pe(t)) {\n    let r = \"#\";\n    for (let o = 0; o < 3; o += 1)\n      r += t[1 + o].repeat(2);\n    return r;\n  }\n  const n = t.match(/^rgb\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3})\\)$/) || t.match(/^rgba\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3}),\\d{1,3}\\)$/);\n  if (!n)\n    throw new Error(`Value \"${e}\" does not satisfy any of known RGB formats.`);\n  return n.slice(1).reduce((r, o) => {\n    const s = parseInt(o, 10).toString(16);\n    return r + (s.length === 1 ? \"0\" : \"\") + s;\n  }, \"#\");\n}\nconst Te = g(\"rgb\", (e) => Re(_()(e))), I = g(\n  \"themeParams\",\n  (e) => {\n    const t = Te(!0);\n    return Object.entries(Z(e)).reduce((n, [r, o]) => (n[we(r)] = t(o), n), {});\n  }\n);\n// @__NO_SIDE_EFFECTS__\nfunction W(e) {\n  return JSON.stringify(\n    Object.fromEntries(\n      Object.entries(e).map(([t, n]) => [G(t), n])\n    )\n  );\n}\nconst Ae = (e) => {\n  const t = _(), n = _(!0), r = $(!0);\n  return z({\n    botInline: [\"tgWebAppBotInline\", r],\n    defaultColors: [\"tgWebAppDefaultColors\", I(!0)],\n    fullscreen: [\"tgWebAppFullscreen\", r],\n    initData: [\"tgWebAppData\", ye(!0)],\n    initDataRaw: [\"tgWebAppData\", n],\n    platform: [\"tgWebAppPlatform\", t],\n    showSettings: [\"tgWebAppShowSettings\", r],\n    startParam: [\"tgWebAppStartParam\", n],\n    themeParams: [\"tgWebAppThemeParams\", I()],\n    version: [\"tgWebAppVersion\", t]\n  }, \"launchParams\")(e);\n};\n// @__NO_SIDE_EFFECTS__\nfunction Se(e) {\n  const {\n    initDataRaw: t,\n    startParam: n,\n    showSettings: r,\n    botInline: o,\n    fullscreen: s,\n    defaultColors: a\n  } = e, c = new URLSearchParams();\n  return c.set(\"tgWebAppPlatform\", e.platform), c.set(\"tgWebAppThemeParams\", /* @__PURE__ */ W(e.themeParams)), c.set(\"tgWebAppVersion\", e.version), t && c.set(\"tgWebAppData\", t), n && c.set(\"tgWebAppStartParam\", n), typeof r == \"boolean\" && c.set(\"tgWebAppShowSettings\", r ? \"1\" : \"0\"), typeof o == \"boolean\" && c.set(\"tgWebAppBotInline\", o ? \"1\" : \"0\"), typeof s == \"boolean\" && c.set(\"tgWebAppFullscreen\", s ? \"1\" : \"0\"), a && c.set(\"tgWebAppDefaultColors\", /* @__PURE__ */ W(a)), c.toString();\n}\nconst X = l({\n  eventType: _(),\n  eventData: (e) => e\n}, \"miniAppsMessage\"), Y = g(\"fn\", (e) => {\n  if (typeof e == \"function\")\n    return e;\n  R(e);\n});\nfunction $e(e) {\n  return !!e && typeof e == \"object\" && !Array.isArray(e);\n}\nconst Ce = l({\n  TelegramWebviewProxy: l({ postEvent: Y() })()\n});\nfunction Q(e) {\n  return Ce().isValid(e);\n}\nfunction Ne() {\n  try {\n    return window.self !== window.top;\n  } catch {\n    return !0;\n  }\n}\nvar De = Object.defineProperty, je = (e, t, n) => t in e ? De(e, t, { enumerable: !0, configurable: !0, writable: !0, value: n }) : e[t] = n, ee = (e, t, n) => je(e, typeof t != \"symbol\" ? t + \"\" : t, n);\nclass b extends Error {\n  constructor(t, n, r) {\n    super(\n      typeof n == \"object\" ? n.message : n || t,\n      {\n        cause: typeof n == \"object\" ? n.cause : r\n      }\n    ), this.type = t, Object.setPrototypeOf(this, b.prototype);\n  }\n}\nfunction te(e, t, n) {\n  return e.addEventListener(t, n), () => e.removeEventListener(t, n);\n}\nfunction k(...e) {\n  const t = e.flat(1);\n  return [\n    t.push.bind(t),\n    () => {\n      t.forEach((n) => {\n        n();\n      });\n    }\n  ];\n}\nfunction Ue(e, t) {\n  return e instanceof b && e.type === t;\n}\nfunction L(e) {\n  return (t) => Ue(t, e);\n}\nconst ne = \"ERR_ABORTED\", re = \"ERR_CANCELED\", oe = \"ERR_TIMED_OUT\";\nfunction M(e) {\n  return new b(ne, { cause: e });\n}\nconst rt = L(oe), ot = L(ne), st = L(re);\nfunction F(e, t) {\n  return e.reject = t.reject, e;\n}\nclass w extends Promise {\n  constructor(t, n) {\n    let r, o;\n    typeof t == \"function\" ? (r = t, o = n) : o = t;\n    let s, a;\n    super((c, i) => {\n      o || (o = {});\n      const { abortSignal: u } = o;\n      if (u && u.aborted)\n        return i(M(u.reason));\n      const [f, h] = k(), m = (E) => (...ge) => (h(), E(...ge)), T = new AbortController(), { signal: A } = T;\n      a = m((E) => {\n        T.abort(E), i(E);\n      }), s = m(c), u && f(\n        te(u, \"abort\", () => {\n          a(M(u.reason));\n        })\n      );\n      const { timeout: D } = o;\n      if (D) {\n        const E = setTimeout(() => {\n          a(new b(oe, `Timeout reached: ${D}ms`));\n        }, D);\n        f(() => {\n          clearTimeout(E);\n        });\n      }\n      r && r(s, a, A);\n    }), ee(this, \"reject\"), this.reject = a;\n  }\n  /**\n   * Creates a new BetterPromise instance using executor, resolving promise when a result\n   * was returned.\n   * @param fn - function returning promise result.\n   * @param options - additional options.\n   */\n  static withFn(t, n) {\n    return new w((r, o, s) => {\n      try {\n        const a = t(s);\n        return a instanceof Promise ? a.then(r, o) : r(a);\n      } catch (a) {\n        o(a);\n      }\n    }, n);\n  }\n  /**\n   * @see Promise.resolve\n   */\n  static resolve(t) {\n    return new w((n) => {\n      n(t);\n    });\n  }\n  /**\n   * @see Promise.reject\n   */\n  static reject(t) {\n    return new w((n, r) => {\n      r(t);\n    });\n  }\n  /**\n   * Cancels the promise execution.\n   */\n  cancel() {\n    this.reject(new b(re));\n  }\n  /**\n   * @see Promise.catch\n   */\n  catch(t) {\n    return this.then(void 0, t);\n  }\n  /**\n   * @see Promise.finally\n   */\n  finally(t) {\n    return F(super.finally(t), this);\n  }\n  /**\n   * @see Promise.then\n   */\n  then(t, n) {\n    return F(super.then(t, n), this);\n  }\n}\nfunction J(e, t) {\n  return e.resolve = t.resolve, e;\n}\nclass S extends w {\n  constructor(t, n) {\n    let r, o;\n    typeof t == \"function\" ? (r = t, o = n) : o = t;\n    let s;\n    super((a, c, i) => {\n      s = a, r && r(a, c, i);\n    }, o), ee(this, \"resolve\"), this.resolve = s;\n  }\n  /**\n   * Creates a new EnhancedPromise instance using executor, resolving promise when a result\n   * was returned.\n   * @param fn - function returning promise result.\n   * @param options - additional options.\n   */\n  static withFn(t, n) {\n    return new S(\n      (r, o, s) => w.withFn(t, { abortSignal: s }).then(r, o),\n      n\n    );\n  }\n  /**\n   * @see Promise.resolve\n   */\n  static resolve(t) {\n    return new S((n) => {\n      n(t);\n    });\n  }\n  /**\n   * @see Promise.reject\n   */\n  static reject(t) {\n    return new S((n, r) => {\n      r(t);\n    });\n  }\n  /**\n   * @see Promise.catch\n   */\n  catch(t) {\n    return this.then(void 0, t);\n  }\n  /**\n   * @see Promise.finally\n   */\n  finally(t) {\n    return J(super.finally(t), this);\n  }\n  /**\n   * @see Promise.then\n   */\n  then(t, n) {\n    return J(super.then(t, n), this);\n  }\n}\nfunction at(e, t) {\n  return new w((n) => {\n    setTimeout(n, e);\n  }, { abortSignal: t });\n}\nfunction se(e) {\n  return `tapps/${e}`;\n}\nfunction We(e, t) {\n  sessionStorage.setItem(se(e), JSON.stringify(t));\n}\nfunction xe(e) {\n  const t = sessionStorage.getItem(se(e));\n  try {\n    return t ? JSON.parse(t) : void 0;\n  } catch {\n  }\n}\nfunction ct(e) {\n  return e.replace(/[A-Z]/g, (t) => `-${t.toLowerCase()}`);\n}\nfunction it(e) {\n  return e.replace(/[A-Z]/g, (t) => `_${t.toLowerCase()}`);\n}\nfunction ut(e) {\n  return e.replace(/_[a-z]/g, (t) => t[1].toUpperCase());\n}\n// @__NO_SIDE_EFFECTS__\nfunction ke(e, t) {\n  t || (t = {});\n  const {\n    textColor: n,\n    bgColor: r,\n    shouldLog: o = !0\n  } = t;\n  function s(a, ...c) {\n    if (!o || typeof o == \"function\" && !o())\n      return;\n    const i = \"font-weight:bold;padding:0 5px;border-radius:5px\";\n    console[a](\n      `%c${Intl.DateTimeFormat(\"en-GB\", {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        second: \"2-digit\",\n        fractionalSecondDigits: 3,\n        timeZone: \"UTC\"\n      }).format(/* @__PURE__ */ new Date())}%c / %c${e}`,\n      `${i};background-color: lightblue;color:black`,\n      \"\",\n      `${i};${n ? `color:${n};` : \"\"}${r ? `background-color:${r}` : \"\"}`,\n      ...c\n    );\n  }\n  return [\n    function(...a) {\n      s(\"log\", ...a);\n    },\n    function(...a) {\n      s(\"error\", ...a);\n    }\n  ];\n}\nfunction pt(e, t) {\n  document.documentElement.style.setProperty(e, t);\n}\nfunction ft(e) {\n  document.documentElement.style.removeProperty(e);\n}\nfunction Le(e, t) {\n  t();\n}\n// @__NO_SIDE_EFFECTS__\nfunction y(e, t) {\n  t || (t = {});\n  const n = t.equals || Object.is;\n  let r = [], o = e;\n  const s = (u) => {\n    if (!n(o, u)) {\n      const f = o;\n      o = u, Le(i, () => {\n        [...r].forEach(([h, m]) => {\n          h(u, f), m && c(h, !0);\n        });\n      });\n    }\n  };\n  function a(u) {\n    const f = typeof u != \"object\" ? { once: u } : u;\n    return {\n      once: f.once || !1,\n      signal: f.signal || !1\n    };\n  }\n  const c = (u, f) => {\n    const h = a(f), m = r.findIndex(([T, A]) => T === u && A.once === h.once && A.signal === h.signal);\n    m >= 0 && r.splice(m, 1);\n  }, i = Object.assign(\n    function() {\n      return Oe(i), o;\n    },\n    {\n      destroy() {\n        r = [];\n      },\n      set: s,\n      reset() {\n        s(e);\n      },\n      sub(u, f) {\n        return r.push([u, a(f)]), () => c(u, f);\n      },\n      unsub: c,\n      unsubAll() {\n        r = r.filter((u) => u[1].signal);\n      }\n    }\n  );\n  return i;\n}\nconst U = [];\nfunction Oe(e) {\n  U.length && U[U.length - 1].add(e);\n}\nconst ae = /* @__PURE__ */ y(!1), [O, qe] = /* @__PURE__ */ ke(\"Bridge\", {\n  bgColor: \"#9147ff\",\n  textColor: \"white\",\n  shouldLog: ae\n}), Ie = {\n  clipboard_text_received: l({\n    req_id: _(),\n    data: (e) => e === null ? e : _(!0)(e)\n  }, \"clipboard_text_received\"),\n  custom_method_invoked: l({\n    req_id: _(),\n    result: (e) => e,\n    error: _(!0)\n  }, \"custom_method_invoked\"),\n  popup_closed: g(\"popup_closed\", (e) => e ? l({\n    button_id: (t) => t == null ? void 0 : _()(t)\n  })()(e) : {}),\n  viewport_changed: l({\n    height: P(),\n    width: (e) => e == null ? window.innerWidth : P()(e),\n    is_state_stable: $(),\n    is_expanded: $()\n  }, \"viewport_changed\")\n};\nfunction Me(e) {\n  const t = window, [, n] = k(\n    // Add listener, which handles events sent from the Telegram web application and also events\n    // generated by the local emitEvent function.\n    te(t, \"message\", (r) => {\n      if (r.source !== t.parent)\n        return;\n      let o;\n      try {\n        o = X()(r.data);\n      } catch {\n        return;\n      }\n      const { eventType: s, eventData: a } = o, c = Ie[s];\n      try {\n        const i = c ? c()(a) : a;\n        O(\"Event received:\", i ? { eventType: s, eventData: i } : { eventType: s }), e([s, i]);\n      } catch (i) {\n        qe(\n          [\n            `An error occurred processing the \"${s}\" event from the Telegram application.`,\n            \"Please, file an issue here:\",\n            \"https://github.com/Telegram-Mini-Apps/telegram-apps/issues/new/choose\"\n          ].join(`\n`),\n          o,\n          i\n        );\n      }\n    })\n  );\n  return n;\n}\nconst C = /* @__PURE__ */ y(), N = /* @__PURE__ */ y();\nfunction ce() {\n  return N() || N.set(Me(C.set)), C;\n}\nconst v = /* @__PURE__ */ y({});\nfunction ie(e) {\n  let t = v()[e];\n  return t || (t = /* @__PURE__ */ y(void 0, {\n    equals() {\n      return !1;\n    }\n  }), ce().sub((n) => {\n    n && n[0] === e && t.set(n[1]);\n  }), v.set({ ...v(), [e]: t })), t;\n}\nfunction Fe(e, t, n) {\n  return ie(e).sub(t, n);\n}\nconst Je = \"ERR_METHOD_UNSUPPORTED\", Be = \"ERR_RETRIEVE_LP_FAILED\", He = \"ERR_METHOD_PARAMETER_UNSUPPORTED\", Ge = \"ERR_UNKNOWN_ENV\", Ke = \"ERR_INVOKE_CUSTOM_METHOD_RESPONSE\", ue = /* @__PURE__ */ y(\"https://web.telegram.org\");\nfunction pe(e, t) {\n  O(\"Posting event:\", t ? { eventType: e, eventData: t } : { eventType: e });\n  const n = window;\n  if (Q(n)) {\n    n.TelegramWebviewProxy.postEvent(e, JSON.stringify(t));\n    return;\n  }\n  const r = JSON.stringify({ eventType: e, eventData: t });\n  if (Ne())\n    return n.parent.postMessage(r, ue());\n  const { external: o } = n;\n  if (l({ notify: Y() })().isValid(o)) {\n    o.notify(r);\n    return;\n  }\n  throw new b(Ge);\n}\nfunction fe(e, t, n) {\n  n || (n = {});\n  const { capture: r } = n, [o, s] = k();\n  return new w((a) => {\n    (Array.isArray(t) ? t : [t]).forEach((c) => {\n      o(\n        Fe(c, (i) => {\n          (!r || (Array.isArray(t) ? r({\n            event: c,\n            payload: i\n          }) : r(i))) && a(i);\n        })\n      );\n    }), (n.postEvent || pe)(e, n.params);\n  }, n).finally(s);\n}\nfunction q(e) {\n  return Ae()(e);\n}\nfunction _e(e) {\n  return q(\n    e.replace(/^[^?#]*[?#]/, \"\").replace(/[?#]/g, \"&\")\n  );\n}\nfunction Ve() {\n  return _e(window.location.href);\n}\nfunction Ze() {\n  const e = performance.getEntriesByType(\"navigation\")[0];\n  if (!e)\n    throw new Error(\"Unable to get first navigation entry.\");\n  return _e(e.name);\n}\nconst ze = \"launchParams\";\nfunction Xe() {\n  return q(xe(ze) || \"\");\n}\nfunction le(e) {\n  We(\"launchParams\", /* @__PURE__ */ Se(e));\n}\nfunction be(e) {\n  return e instanceof Error ? e.message + (e.cause ? `\n  ${be(e.cause)}` : \"\") : JSON.stringify(e);\n}\nfunction Ye() {\n  const e = [];\n  for (const t of [\n    // Try to retrieve launch parameters from the current location. This method can return\n    // nothing in case, location was changed, and then the page was reloaded.\n    Ve,\n    // Then, try using the lower level API - window.performance.\n    Ze,\n    // Finally, try to extract launch parameters from the session storage.\n    Xe\n  ])\n    try {\n      const n = t();\n      return le(n), n;\n    } catch (n) {\n      e.push(n);\n    }\n  throw new b(Be, [\n    \"Unable to retrieve launch parameters from any known source. Perhaps, you have opened your app outside Telegram?\",\n    \"📖 Refer to docs for more information:\",\n    \"https://docs.telegram-mini-apps.com/packages/telegram-apps-sdk/environment\",\n    \"Collected errors:\",\n    ...e.map((t) => `— ${be(t)}`)\n  ].join(`\n`));\n}\nfunction _t(e) {\n  if (e === \"simple\")\n    try {\n      return Ye(), !0;\n    } catch {\n      return !1;\n    }\n  return w.withFn(async () => {\n    if (Q(window))\n      return !0;\n    try {\n      return await fe(\"web_app_request_theme\", \"theme_changed\", { timeout: 100 }), !0;\n    } catch {\n      return !1;\n    }\n  }, e);\n}\nfunction x(e, t) {\n  window.dispatchEvent(new MessageEvent(\"message\", {\n    data: JSON.stringify({ eventType: e, eventData: t }),\n    // We specify window.parent to imitate the case, the parent iframe sent us this event.\n    source: window.parent\n  }));\n}\nfunction Qe(e, t) {\n  if (typeof t == \"string\")\n    try {\n      const { eventType: n } = X()(t);\n      n === \"web_app_request_theme\" && x(\"theme_changed\", {\n        theme_params: JSON.parse(/* @__PURE__ */ W(e))\n      }), n === \"web_app_request_viewport\" && x(\"viewport_changed\", {\n        width: window.innerWidth,\n        height: window.innerHeight,\n        is_state_stable: !0,\n        is_expanded: !0\n      });\n    } catch {\n    }\n}\nfunction lt(e) {\n  var r;\n  const t = typeof e == \"string\" ? q(e) : e;\n  le(t);\n  const n = (r = window.TelegramWebviewProxy) == null ? void 0 : r.postEvent;\n  window.TelegramWebviewProxy = {\n    postEvent(o, s) {\n      Qe(t.themeParams, JSON.stringify({ eventType: o, eventData: s })), n == null || n(o, s);\n    }\n  }, O(\"Environment was mocked by the mockTelegramEnv function\");\n}\nfunction bt() {\n  [\n    [\"TelegramGameProxy_receiveEvent\"],\n    // Windows Phone.\n    [\"TelegramGameProxy\", \"receiveEvent\"],\n    // Desktop.\n    [\"Telegram\", \"WebView\", \"receiveEvent\"]\n    // Android and iOS.\n  ].forEach((e) => {\n    let t = window;\n    e.forEach((n, r, o) => {\n      if (r === o.length - 1) {\n        t[n] = x;\n        return;\n      }\n      n in t || (t[n] = {}), t = t[n];\n    });\n  });\n}\nfunction gt() {\n  [\"TelegramGameProxy_receiveEvent\", \"TelegramGameProxy\", \"Telegram\"].forEach((e) => {\n    delete window[e];\n  });\n}\nfunction wt(e, t, n) {\n  ie(e).unsub(t, n);\n}\nfunction ht(e, t) {\n  return ce().sub(e, t);\n}\nfunction mt(e, t) {\n  C.unsub(e, t);\n}\nfunction et(e) {\n  return ({ req_id: t }) => t === e;\n}\nfunction B(e) {\n  return e.split(\".\").map(Number);\n}\nfunction tt(e, t) {\n  const n = B(e), r = B(t), o = Math.max(n.length, r.length);\n  for (let s = 0; s < o; s += 1) {\n    const a = n[s] || 0, c = r[s] || 0;\n    if (a !== c)\n      return a > c ? 1 : -1;\n  }\n  return 0;\n}\nfunction p(e, t) {\n  return tt(e, t) <= 0;\n}\nfunction H(e, t, n) {\n  if (typeof n == \"string\") {\n    if (e === \"web_app_open_link\") {\n      if (t === \"try_instant_view\")\n        return p(\"6.4\", n);\n      if (t === \"try_browser\")\n        return p(\"7.6\", n);\n    }\n    if (e === \"web_app_set_header_color\" && t === \"color\")\n      return p(\"6.9\", n);\n    if (e === \"web_app_close\" && t === \"return_back\")\n      return p(\"7.6\", n);\n    if (e === \"web_app_setup_main_button\" && t === \"has_shine_effect\")\n      return p(\"7.10\", n);\n  }\n  switch (e) {\n    case \"web_app_open_tg_link\":\n    case \"web_app_open_invoice\":\n    case \"web_app_setup_back_button\":\n    case \"web_app_set_background_color\":\n    case \"web_app_set_header_color\":\n    case \"web_app_trigger_haptic_feedback\":\n      return p(\"6.1\", t);\n    case \"web_app_open_popup\":\n      return p(\"6.2\", t);\n    case \"web_app_close_scan_qr_popup\":\n    case \"web_app_open_scan_qr_popup\":\n    case \"web_app_read_text_from_clipboard\":\n      return p(\"6.4\", t);\n    case \"web_app_switch_inline_query\":\n      return p(\"6.7\", t);\n    case \"web_app_invoke_custom_method\":\n    case \"web_app_request_write_access\":\n    case \"web_app_request_phone\":\n      return p(\"6.9\", t);\n    case \"web_app_setup_settings_button\":\n      return p(\"6.10\", t);\n    case \"web_app_biometry_get_info\":\n    case \"web_app_biometry_open_settings\":\n    case \"web_app_biometry_request_access\":\n    case \"web_app_biometry_request_auth\":\n    case \"web_app_biometry_update_token\":\n      return p(\"7.2\", t);\n    case \"web_app_setup_swipe_behavior\":\n      return p(\"7.7\", t);\n    case \"web_app_share_to_story\":\n      return p(\"7.8\", t);\n    case \"web_app_setup_secondary_button\":\n    case \"web_app_set_bottom_bar_color\":\n      return p(\"7.10\", t);\n    case \"web_app_request_safe_area\":\n    case \"web_app_request_content_safe_area\":\n    case \"web_app_request_fullscreen\":\n    case \"web_app_exit_fullscreen\":\n    case \"web_app_set_emoji_status\":\n    case \"web_app_request_emoji_status_access\":\n      return p(\"8.0\", t);\n    default:\n      return [\n        \"iframe_ready\",\n        \"iframe_will_reload\",\n        \"web_app_close\",\n        \"web_app_data_send\",\n        \"web_app_expand\",\n        \"web_app_open_link\",\n        \"web_app_ready\",\n        \"web_app_request_theme\",\n        \"web_app_request_viewport\",\n        \"web_app_setup_main_button\",\n        \"web_app_setup_closing_behavior\"\n      ].includes(e);\n  }\n}\nfunction dt(e, t) {\n  t || (t = \"strict\");\n  const n = typeof t == \"function\" ? t : (r) => {\n    const { method: o, version: s } = r;\n    let a, c;\n    if (\"param\" in r ? (a = `Parameter \"${r.param}\" of \"${o}\" method is unsupported in Mini Apps version ${s}`, c = He) : (a = `Method \"${o}\" is unsupported in Mini Apps version ${s}`, c = Je), t === \"strict\")\n      throw new b(c, a);\n    return console.warn(a);\n  };\n  return (r, o) => H(r, e) ? $e(o) && r === \"web_app_set_header_color\" && \"color\" in o && !H(r, \"color\", e) ? n({ version: e, method: r, param: \"color\" }) : pe(r, o) : n({ version: e, method: r });\n}\nfunction Et(e, t, n, r) {\n  return fe(\"web_app_invoke_custom_method\", \"custom_method_invoked\", {\n    ...r || {},\n    params: { method: e, params: t, req_id: n },\n    capture: et(n)\n  }).then(({ result: o, error: s }) => {\n    if (s)\n      throw new b(Ke, s);\n    return o;\n  });\n}\nfunction nt(e) {\n  e.unsubAll(), e.reset();\n}\nfunction yt() {\n  var e;\n  (e = N()) == null || e(), [\n    ...Object.values(v()),\n    v,\n    C,\n    N,\n    ue,\n    ae\n  ].forEach(nt);\n}\nexport {\n  ae as $debug,\n  ue as $targetOrigin,\n  w as CancelablePromise,\n  ne as ERR_ABORTED,\n  re as ERR_CANCELED,\n  Ke as ERR_CUSTOM_METHOD_ERR_RESPONSE,\n  He as ERR_METHOD_PARAMETER_UNSUPPORTED,\n  Je as ERR_METHOD_UNSUPPORTED,\n  Be as ERR_RETRIEVE_LP_FAILED,\n  oe as ERR_TIMED_OUT,\n  Ge as ERR_UNKNOWN_ENV,\n  S as EnhancedPromise,\n  b as TypedError,\n  te as addEventListener,\n  ct as camelToKebab,\n  it as camelToSnake,\n  et as captureSameReq,\n  tt as compareVersions,\n  M as createAbortError,\n  k as createCbCollector,\n  ke as createLogger,\n  dt as createPostEvent,\n  L as createTypedErrorPredicate,\n  bt as defineEventHandlers,\n  ft as deleteCssVar,\n  x as emitMiniAppsEvent,\n  xe as getStorageValue,\n  Q as hasWebviewProxy,\n  Et as invokeCustomMethod,\n  ot as isAbortError,\n  st as isCanceledError,\n  Ne as isIframe,\n  _t as isTMA,\n  rt as isTimeoutError,\n  lt as mockTelegramEnv,\n  wt as off,\n  Fe as on,\n  pe as postEvent,\n  gt as removeEventHandlers,\n  fe as request,\n  yt as resetPackageState,\n  Ye as retrieveLaunchParams,\n  pt as setCssVar,\n  We as setStorageValue,\n  at as sleep,\n  ut as snakeToCamel,\n  ht as subscribe,\n  H as supports,\n  mt as unsubscribe\n};\n//# sourceMappingURL=index.js.map\n", "function i() {\n  return performance.getEntriesByType(\"navigation\")[0];\n}\nfunction c() {\n  const t = i();\n  return !!t && t.type === \"reload\";\n}\nfunction o(t, n) {\n  return t.startsWith(n) ? t : `${n}${t}`;\n}\nfunction R(t) {\n  return new URL(\n    typeof t == \"string\" ? t : [\n      t.pathname || \"\",\n      o(t.search || \"\", \"?\"),\n      o(t.hash || \"\", \"#\")\n    ].join(\"\"),\n    \"http://a\"\n  );\n}\nfunction a(t) {\n  const n = (typeof t == \"string\" ? t : t.pathname || \"\").startsWith(\"/\"), e = R(t), { pathname: s } = e;\n  return `${n ? s : s.slice(1)}${e.search}${e.hash}`;\n}\nconst r = \"ERR_NAVIGATION_HISTORY_EMPTY\", I = \"ERR_NAVIGATION_CURSOR_INVALID\";\nexport {\n  I as ERR_CURSOR_INVALID,\n  r as ERR_HISTORY_EMPTY,\n  R as createSafeURL,\n  o as ensurePrefix,\n  i as getFirstNavigationEntry,\n  c as isPageReload,\n  a as urlToPath\n};\n//# sourceMappingURL=index.js.map\n", "let r;\nfunction y(e, c) {\n  r && r.set(e, c) || c();\n}\nfunction m(e) {\n  if (r)\n    return e();\n  r = /* @__PURE__ */ new Map();\n  try {\n    e();\n  } finally {\n    r.forEach((c) => c()), r = void 0;\n  }\n}\n// @__NO_SIDE_EFFECTS__\nfunction S(e, c) {\n  c || (c = {});\n  const g = c.equals || Object.is;\n  let u = [], s = e;\n  const i = (t) => {\n    if (!g(s, t)) {\n      const l = s;\n      s = t, y(o, () => {\n        [...u].forEach(([f, d]) => {\n          f(t, l), d && n(f, !0);\n        });\n      });\n    }\n  };\n  function a(t) {\n    const l = typeof t != \"object\" ? { once: t } : t;\n    return {\n      once: l.once || !1,\n      signal: l.signal || !1\n    };\n  }\n  const n = (t, l) => {\n    const f = a(l), d = u.findIndex(([h, p]) => h === t && p.once === f.once && p.signal === f.signal);\n    d >= 0 && u.splice(d, 1);\n  }, o = Object.assign(\n    function() {\n      return j(o), s;\n    },\n    {\n      destroy() {\n        u = [];\n      },\n      set: i,\n      reset() {\n        i(e);\n      },\n      sub(t, l) {\n        return u.push([t, a(l)]), () => n(t, l);\n      },\n      unsub: n,\n      unsubAll() {\n        u = u.filter((t) => t[1].signal);\n      }\n    }\n  );\n  return o;\n}\nconst b = [];\nfunction j(e) {\n  b.length && b[b.length - 1].add(e);\n}\n// @__NO_SIDE_EFFECTS__\nfunction x(e, c) {\n  let g = /* @__PURE__ */ new Set(), u;\n  function s() {\n    return u || (u = /* @__PURE__ */ S(a(), c));\n  }\n  function i() {\n    s().set(a());\n  }\n  function a() {\n    g.forEach((t) => {\n      t.unsub(i, { signal: !0 });\n    });\n    const n = /* @__PURE__ */ new Set();\n    let o;\n    b.push(n);\n    try {\n      o = e();\n    } finally {\n      b.pop();\n    }\n    return n.forEach((t) => {\n      t.sub(i, { signal: !0 });\n    }), g = n, o;\n  }\n  return Object.assign(function() {\n    return s()();\n  }, {\n    destroy() {\n      s().destroy();\n    },\n    sub(...n) {\n      return s().sub(...n);\n    },\n    unsub(...n) {\n      s().unsub(...n);\n    },\n    unsubAll(...n) {\n      s().unsubAll(...n);\n    }\n  });\n}\nexport {\n  m as batch,\n  x as computed,\n  S as signal\n};\n//# sourceMappingURL=index.js.map\n", "import {\n  retrieveLaunchParams,\n  postEvent as _postEvent,\n  request as _request,\n  invokeCustomMethod as _invokeCustomMethod,\n  createPostEvent,\n  type PostEventFn,\n  type Version,\n  type RequestFn,\n  type CancelablePromise,\n  type ExecuteWithOptions,\n  type CustomMethodParams,\n  type CustomMethodName,\n} from '@telegram-apps/bridge';\nimport { signal } from '@telegram-apps/signals';\n\nexport interface ConfigureOptions {\n  /**\n   * A maximum supported Mini Apps version.\n   * @default Being extracted using the `retrieveLaunchParams` function.\n   * @see retrieveLaunchParams\n   */\n  version?: Version;\n  /**\n   * Custom postEvent function.\n   *\n   * Passing the \"strict\" value creates a function, which always checks if specified call supported\n   * by currently supported Mini Apps version. If the method is unsupported, an error will be\n   * thrown.\n   *\n   * Passing the \"non-strict\" value creates a postEvent function not throwing any errors, but\n   * warning about a missing method support.\n   *\n   * @default 'strict'\n   * @see createPostEvent\n   */\n  postEvent?: PostEventFn;\n}\n\n/**\n * Signal with a request identifier generator. Usually, you don't need to set this value manually.\n */\nexport const $createRequestId = signal((() => {\n  let requestId = 0;\n  return () => (requestId += 1).toString();\n})());\n\n/**\n * Signal with a currently used postEvent function across the package.\n */\nexport const $postEvent = signal<PostEventFn>(_postEvent);\n\n/**\n * Signal with a currently supported maximum Mini Apps version. This value is usually set via\n */\nexport const $version = signal<Version>('0.0');\n\n/**\n * Configures package global dependencies.\n * @param options - configuration additional options.\n */\nexport function configure(options?: ConfigureOptions): void {\n  options ||= {};\n  const { postEvent: optionsPostEvent } = options;\n  const v = options.version || retrieveLaunchParams().version;\n  $version.set(v);\n  $postEvent.set(\n    typeof optionsPostEvent === 'function'\n      ? optionsPostEvent\n      : createPostEvent(v),\n  );\n}\n\n/**\n * Creates a new request id.\n */\nexport function createRequestId(): string {\n  return $createRequestId()();\n}\n\n/**\n * Invokes known custom method. Returns method execution result.\n * @param method - method name.\n * @param params - method parameters.\n * @param options - additional options.\n * @throws {TypedError} ERR_CUSTOM_METHOD_ERR_RESPONSE\n */\nexport function invokeCustomMethod<M extends CustomMethodName>(\n  method: M,\n  params: CustomMethodParams<M>,\n  options?: ExecuteWithOptions,\n): CancelablePromise<unknown>;\n\n/**\n * Invokes unknown custom method. Returns method execution result.\n * @param method - method name.\n * @param params - method parameters.\n * @param options - additional options.\n * @throws {TypedError} ERR_CUSTOM_METHOD_ERR_RESPONSE\n */\nexport function invokeCustomMethod(\n  method: string,\n  params: object,\n  options?: ExecuteWithOptions,\n): CancelablePromise<unknown>;\n\nexport function invokeCustomMethod(\n  method: string,\n  params: object,\n  options?: ExecuteWithOptions,\n): CancelablePromise<unknown> {\n  return _invokeCustomMethod(method, params, createRequestId(), {\n    ...options || {},\n    postEvent: postEvent,\n  });\n}\n\n/**\n * `request` function from the bridge with applied global `postEvent` option.\n */\nexport const request = ((method: any, eventOrEvents: any, options: any) => {\n  options ||= {};\n  options.postEvent ||= postEvent;\n  return _request(method, eventOrEvents, options);\n}) as RequestFn;\n\n/**\n * Shortcut for $postEvent call.\n */\nexport const postEvent = ((method: any, params: any) => {\n  return $postEvent()(method, params);\n}) as PostEventFn;\n", "import { type Computed, computed } from '@telegram-apps/signals';\nimport { type MethodName, supports } from '@telegram-apps/bridge';\n\nimport { $version } from '@/scopes/globals.js';\n\n/**\n * @returns A signal indicating if the specified Mini Apps method is supported.\n * @param method - Mini Apps method name\n */\nexport function createIsSupported(method: MethodName): Computed<boolean> {\n  return computed(() => supports(method, $version()));\n}", "export const ERR_POPUP_INVALID_PARAMS = 'ERR_POPUP_INVALID_PARAMS';\nexport const ERR_INVALID_URL = 'ERR_INVALID_URL';\nexport const ERR_INVALID_SLUG = 'ERR_INVALID_SLUG';\nexport const ERR_DATA_INVALID_SIZE = 'ERR_DATA_INVALID_SIZE';\nexport const ERR_ACCESS_DENIED = 'ERR_ACCESS_DENIED';\nexport const ERR_ALREADY_REQUESTING = 'ERR_ALREADY_REQUESTING';\nexport const ERR_ALREADY_OPENED = 'ERR_ALREADY_OPENED';\nexport const ERR_ALREADY_MOUNTING = 'ERR_ALREADY_MOUNTING';\nexport const ERR_CSS_VARS_ALREADY_BOUND = 'ERR_VARS_ALREADY_BOUND';\nexport const ERR_NOT_AVAILABLE = 'ERR_NOT_AVAILABLE';\nexport const ERR_NOT_INITIALIZED = 'ERR_NOT_INITIALIZED';\nexport const ERR_NOT_SUPPORTED = 'ERR_NOT_SUPPORTED';\nexport const ERR_NOT_MOUNTED = 'ERR_NOT_MOUNTED';\nexport const ERR_FULLSCREEN_FAILED = 'ERR_FULLSCREEN_FAILED';\nexport const ERR_EMOJI_STATUS_SET_FAILED = 'ERR_EMOJI_STATUS_SET_FAILED';\n", "/**\n * @returns True, if current environment is server.\n */\nexport function isSSR(): boolean {\n  return typeof window === 'undefined';\n}\n", "import {\n  ERR_UNKNOWN_ENV,\n  type If,\n  type MethodName,\n  supports,\n  isTMA,\n  TypedError,\n  type MethodNameWithVersionedParams,\n  type MethodVersionedParams, IsNever,\n} from '@telegram-apps/bridge';\nimport { type Computed, computed } from '@telegram-apps/signals';\n\nimport { $version } from '@/scopes/globals.js';\nimport {\n  ERR_NOT_INITIALIZED,\n  ERR_NOT_MOUNTED,\n  ERR_NOT_SUPPORTED,\n} from '@/errors.js';\nimport { isSSR } from '@/utils/isSSR.js';\nimport type { AnyFn } from '@/types.js';\n\ntype HasCheckSupportMethodTuple<FnArgs extends any[]> = {\n  [M in MethodNameWithVersionedParams]: [\n    method: M,\n    parameter: MethodVersionedParams<M>,\n    shouldCheck: (...args: FnArgs) => boolean,\n  ]\n}[MethodNameWithVersionedParams];\n\ninterface CustomSupportValidator {\n  fn: () => boolean;\n  error: string;\n}\n\nexport type IsSupported =\n  | MethodName\n  | CustomSupportValidator\n  | (MethodName | CustomSupportValidator)[]\n  | { any: (MethodName | CustomSupportValidator)[] };\n\nexport type Supports<Fn extends AnyFn> = Record<string, HasCheckSupportMethodTuple<Parameters<Fn>>>\n\nexport type SafeWrapped<\n  Fn extends AnyFn,\n  Supported extends boolean,\n  SupportsSchema extends Record<string, any>\n> =\n  & Fn\n  & {\n  /**\n   * The signal returning `true` if the function is available in the\n   * current environment.\n   *\n   * To be more accurate, the method checks the following:\n   * 1. The current environment is not TMA or server.\n   * 2. The SDK package is initialized.\n   * 3. If passed, the `isSupported` signal returns true.\n   * 4. If passed, the `isMounted` signal returns true.\n   *\n   * *You should use this function when possible because it provides\n   * must-have code security mechanisms and makes a developer sure that\n   * he is using the package properly.*\n   *\n   * @returns True if the function is available in the current environment.\n   * @example\n   * if (showBackButton.isAvailable()) {\n   *   showBackButton();\n   * }\n   */\n  isAvailable: Computed<boolean>;\n  /**\n   * Calls the function only in case it is available.\n   * @example\n   * showBackButton.ifAvailable();\n   */\n  ifAvailable(...args: Parameters<Fn>): ReturnType<Fn> | undefined;\n}\n  & If<Supported, {\n  /**\n   * The signal returning `true` if the function is supported by\n   * the current Mini Apps version including some possible additional\n   * conditions.\n   *\n   * It is highly recommended to use this signal only in certain narrow cases\n   * when only the function support check is required.\n   *\n   * This signal is not applying additional operations like checking if the\n   * current environment is Mini Apps and the SDK is initialized.\n   *\n   * To check if the function is available for use, use the `isAvailable`\n   * signal.\n   *\n   * @returns True if this function is supported.\n   * @see isAvailable\n   * @example\n   * if (setMiniAppBottomBarColor.isSupported()) {\n   *   console.log('Mini App bottom bar is supported, but the function is still probably unavailable');\n   * }\n   */\n  isSupported: Computed<boolean>;\n}, {}>\n  & If<IsNever<SupportsSchema>, {}, {\n  /**\n   * A map where the key is the function-specific option name and value is a signal indicating\n   * if it is supported by the current environment.\n   * @example\n   * if (setHeaderColor.isAvailable()) {\n   *   if (setHeaderColor.supports.rgb()) {\n   *     setHeaderColor('#ffaabb');\n   *   } else {\n   *     setHeaderColor('bg_color');\n   *   }\n   * }\n   */\n  supports: Record<keyof SupportsSchema, Computed<boolean>>\n}>\n\ninterface Options<Fn extends AnyFn> {\n  component?: string;\n  isMounted?: () => boolean;\n  isSupported?: IsSupported;\n  supports?: Supports<Fn>,\n}\n\nexport function wrapSafe<Fn extends AnyFn>(\n  method: string,\n  fn: Fn,\n): SafeWrapped<Fn, false, never>;\n\nexport function wrapSafe<Fn extends AnyFn, O extends Options<Fn>>(\n  method: string,\n  fn: Fn,\n  options: O,\n): SafeWrapped<\n  Fn,\n  O extends { isSupported: any } ? true : false,\n  O extends { supports: infer S extends Record<string, any> } ? S : never\n>\n\n/*@__NO_SIDE_EFFECTS__*/\nexport function wrapSafe<Fn extends AnyFn>(\n  method: string,\n  fn: Fn,\n  { isSupported, isMounted, component, supports: supportsOption }: Options<Fn> = {},\n): SafeWrapped<Fn, boolean, Record<string, any> | never> {\n  // Full function identifier.\n  const fullName = `${component ? `${component}.` : ''}${method}()`;\n\n  // Simplify the isSupported value to work with an array of validators or a single object.\n  isSupported = isSupported\n    ? Array.isArray(isSupported)\n      // (MethodName | CustomSupportValidator)[]\n      ? isSupported\n      : typeof isSupported === 'object' && 'any' in isSupported\n        // { any: (MethodName | CustomSupportValidator)[] }\n        ? isSupported\n        // MethodName | CustomSupportValidator\n        : [isSupported]\n    : undefined;\n\n  /**\n   * @returns True if the specified option is supported.\n   * @param option - option name.\n   */\n  function isOptionSupported(option: string): boolean {\n    if (supportsOption) {\n      const tuple = supportsOption[option];\n      return supports(tuple[0], tuple[1], $version());\n    }\n    return true;\n  }\n\n  /**\n   * @returns An error related to isSupported() check.\n   */\n  const supportError = (): string | undefined => {\n    // isSupported was not specified. In this case we assume that the function has no dependencies\n    // and is always supported.\n    if (!isSupported) {\n      return;\n    }\n\n    const defaultErr = `it is unsupported in Mini Apps version ${$version()}`;\n\n    function getError(item: MethodName | CustomSupportValidator): string | undefined {\n      return typeof item === 'string'\n        ? supports(item, $version())\n          ? undefined\n          : defaultErr\n        : item.fn()\n          ? undefined\n          : item.error;\n    }\n\n    // Should check each array item.\n    // (MethodName | CustomSupportValidator)[]\n    if (Array.isArray(isSupported)) {\n      for (const item of isSupported) {\n        const err = getError(item);\n        if (err) {\n          return err;\n        }\n      }\n      return;\n    }\n\n    // Should check if any item didn't return an error.\n    let lastErr: string | undefined;\n    for (const item of isSupported.any) {\n      lastErr = getError(item);\n      if (!lastErr) {\n        return;\n      }\n    }\n    return defaultErr;\n  };\n\n  /**\n   * @returns An error related to supports.<name> check.\n   */\n  const supportsOptionError = (...args: Parameters<Fn>): string | undefined => {\n    if (supportsOption) {\n      for (const k in supportsOption) {\n        if (supportsOption[k][2](...args) && !isOptionSupported(k)) {\n          return `option ${k} is not supported in Mini Apps version ${$version()}`;\n        }\n      }\n    }\n  };\n\n  const $isSupported = computed(() => !supportError());\n  const $isInitialized = computed(() => $version() !== '0.0');\n  const $isMounted = computed(() => !isMounted || isMounted());\n  const $isAvailable = computed(\n    () => isTMA('simple')\n      && !isSSR()\n      && $isInitialized()\n      && $isSupported()\n      && $isMounted(),\n  );\n\n  let supportsMap: Record<string, Computed<boolean>> | undefined;\n  if (supportsOption) {\n    supportsMap = {};\n    for (const option in supportsOption) {\n      supportsMap[option] = computed(() => isOptionSupported(option));\n    }\n  }\n\n  return Object.assign(\n    (...args: Parameters<Fn>): ReturnType<Fn> => {\n      const errMessagePrefix = `Unable to call the ${fullName} ${component ? 'method' : 'function'}:`;\n\n      if (isSSR() || !isTMA('simple')) {\n        throw new TypedError(\n          ERR_UNKNOWN_ENV,\n          `${errMessagePrefix} it can't be called outside Mini Apps`,\n        );\n      }\n      if (!$isInitialized()) {\n        throw new TypedError(\n          ERR_NOT_INITIALIZED,\n          `${errMessagePrefix} the SDK was not initialized. Use the SDK init() function`,\n        );\n      }\n      const supportErr = supportError();\n      if (supportErr) {\n        throw new TypedError(ERR_NOT_SUPPORTED, `${errMessagePrefix} ${supportErr}`);\n      }\n      const supportsOptionErr = supportsOptionError(...args);\n      if (supportsOptionErr) {\n        throw new TypedError(ERR_NOT_SUPPORTED, `${errMessagePrefix} ${supportsOptionErr}`);\n      }\n      if (!$isMounted()) {\n        throw new TypedError(\n          ERR_NOT_MOUNTED,\n          `${errMessagePrefix} the component is not mounted. Use the ${component}.mount() method`,\n        );\n      }\n      return fn(...args);\n    },\n    fn,\n    {\n      isAvailable: $isAvailable,\n      ifAvailable(...args: Parameters<Fn>): ReturnType<Fn> | undefined {\n        return $isAvailable()\n          ? fn(...args)\n          : undefined;\n      },\n    },\n    isSupported ? {\n      isSupported: $isSupported,\n    } : {},\n    supportsMap ? {\n      supports: supportsMap,\n    } : {},\n  );\n}\n", "import type { AnyFn } from '@/types.js';\nimport {\n  wrapSafe,\n  type IsSupported,\n  type SafeWrapped,\n  type Supports,\n} from '@/scopes/toolkit/wrapSafe.js';\n\nexport interface SafeWrapFn<S extends boolean> {\n  <Fn extends AnyFn>(method: string, fn: Fn): SafeWrapped<Fn, S, never>;\n  <Fn extends AnyFn>(method: string, fn: Fn, isSupported: IsSupported): SafeWrapped<Fn, true, never>;\n  <Fn extends AnyFn, S extends Supports<Fn>>(\n    method: string,\n    fn: Fn,\n    isSupported: IsSupported,\n    supports: S,\n  ): SafeWrapped<Fn, true, S>;\n}\n\ninterface Options {\n  isMounted?: () => boolean;\n  isSupported?: IsSupported;\n}\n\nexport function createWrapSafe(component?: string): SafeWrapFn<false>;\n\nexport function createWrapSafe<O extends Options>(\n  component: string,\n  options: O,\n): SafeWrapFn<O extends { isSupported: any } ? true : false>;\n\nexport function createWrapSafe(\n  component?: string,\n  options?: Options,\n): SafeWrapFn<boolean> {\n  options ||= {};\n  return ((method, fn, overrideIsSupported, supports) => wrapSafe(method, fn, {\n    ...options,\n    isSupported: overrideIsSupported || options.isSupported,\n    supports,\n    component,\n  })) as SafeWrapFn<boolean>;\n}\n", "import type { IsSupported } from '@/scopes/toolkit/wrapSafe.js';\nimport { createWrapSafe, type SafeWrapFn } from '@/scopes/toolkit/createWrapSafe.js';\n\nexport function createWrapComplete(\n  component: string,\n  isMounted: () => boolean,\n  isSupported: IsSupported,\n): SafeWrapFn<true> {\n  return createWrapSafe(component, { isSupported, isMounted });\n}\n", "import {\n  createWrapSafe,\n  type SafeWrapFn,\n} from '@/scopes/toolkit/createWrapSafe.js';\nimport type { IsSupported } from '@/scopes/toolkit/wrapSafe.js';\n\nexport function createWrapSupported(\n  component: string,\n  isSupported: IsSupported,\n): SafeWrapFn<true> {\n  return createWrapSafe(component, { isSupported });\n}", "import {\n  off,\n  on,\n  getStorageValue,\n  setStorageValue,\n  type EventListener,\n} from '@telegram-apps/bridge';\nimport { isPageReload } from '@telegram-apps/navigation';\nimport { signal } from '@telegram-apps/signals';\n\nimport { postEvent } from '@/scopes/globals.js';\nimport { createIsSupported } from '@/scopes/toolkit/createIsSupported.js';\nimport { createWrapComplete } from '@/scopes/toolkit/createWrapComplete.js';\nimport { createWrapSupported } from '@/scopes/toolkit/createWrapSupported.js';\n\ntype StorageValue = boolean;\n\nconst SETUP_METHOD_NAME = 'web_app_setup_back_button';\nconst CLICK_EVENT_NAME = 'back_button_pressed';\nconst COMPONENT_NAME = 'backButton';\n\n/**\n * Signal indicating if the Back Button is currently visible.\n */\nexport const isVisible = signal(false);\n\n/**\n * Signal indicating if the Back Button is currently mounted.\n */\nexport const isMounted = signal(false);\n\n/**\n * Signal indicating if the Back Button is supported.\n */\nexport const isSupported = createIsSupported(SETUP_METHOD_NAME);\n\nconst wrapComplete = createWrapComplete(COMPONENT_NAME, isMounted, SETUP_METHOD_NAME);\nconst wrapSupported = createWrapSupported(COMPONENT_NAME, SETUP_METHOD_NAME);\n\n/**\n * Hides the Back Button.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @throws {TypedError} ERR_NOT_MOUNTED\n * @since Mini Apps v6.1\n * @example\n * if (hide.isAvailable()) {\n *   hide();\n * }\n */\nexport const hide = wrapComplete('hide', (): void => {\n  setVisibility(false);\n});\n\n/**\n * Mounts the Back Button restoring its state.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @since Mini Apps v6.1\n * @example\n * if (mount.isAvailable()) {\n *   mount();\n * }\n */\nexport const mount = wrapSupported('mount', (): void => {\n  if (!isMounted()) {\n    setVisibility(isPageReload() && getStorageValue<StorageValue>(COMPONENT_NAME) || false);\n    isMounted.set(true);\n  }\n});\n\nfunction setVisibility(value: boolean): void {\n  if (value !== isVisible()) {\n    postEvent(SETUP_METHOD_NAME, { is_visible: value });\n    setStorageValue<StorageValue>(COMPONENT_NAME, value);\n    isVisible.set(value);\n  }\n}\n\n/**\n * Adds a new Back Button click listener.\n * @param fn - event listener.\n * @returns A function to remove bound listener.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @since Mini Apps v6.1\n * @example\n * if (onClick.isAvailable()) {\n *   const off = onClick(() => {\n *     console.log('User clicked the Back Button');\n *     off();\n *   });\n * }\n */\nexport const onClick = wrapSupported(\n  'onClick',\n  (fn: EventListener<'back_button_pressed'>): VoidFunction => on(CLICK_EVENT_NAME, fn),\n);\n\n/**\n * Removes the Back Button click listener.\n * @param fn - an event listener.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @since Mini Apps v6.1\n * @example\n * if (offClick.isAvailable()) {\n *   function listener() {\n *     console.log('User clicked the Back Button');\n *     offClick(listener);\n *   }\n *   onClick(listener);\n * }\n */\nexport const offClick = wrapSupported(\n  'offClick',\n  (fn: EventListener<'back_button_pressed'>): void => {\n    off(CLICK_EVENT_NAME, fn);\n  },\n);\n\n/**\n * Shows the Back Button.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @throws {TypedError} ERR_NOT_MOUNTED\n * @since Mini Apps v6.1\n * @example\n * if (show.isAvailable()) {\n *   show();\n * }\n */\nexport const show = wrapComplete('show', (): void => {\n  setVisibility(true);\n});\n\n/**\n * Unmounts the Back Button.\n *\n * Note that this function does not remove listeners added via the `onClick`\n * function, so you have to remove them on your own.\n * @see onClick\n */\nexport function unmount(): void {\n  isMounted.set(false);\n}\n", "import { batch, type Signal } from '@telegram-apps/signals';\nimport { CancelablePromise, If, type TypedError } from '@telegram-apps/bridge';\nimport { AnyFn } from '@/types.js';\n\ntype Signalified<Fn extends AnyFn, Cancelable extends boolean> = (...args: Parameters<Fn>) => If<\n  Cancelable,\n  CancelablePromise<ReturnType<Fn>>,\n  PromiseLike<ReturnType<Fn>>\n>;\n\n/**\n * Function doing the following:\n * 1. Prevents the wrapped function from being called concurrently.\n * 2. Being called, updates the passed promise and error signals.\n *\n * As a result, the function returns a new one, returning a cancelable promise.\n * @param fn - function to wrap.\n * @param createPendingError - function that creates error in case of concurrent call\n * @param promise - signal containing the execution promise\n * @param error - signal containing the last call error.\n * @param cancelable - is result cancelable. True by default.\n */\nexport function signalifyAsyncFn<Fn extends AnyFn>(\n  fn: Fn,\n  createPendingError: () => TypedError<any>,\n  promise: Signal<CancelablePromise<Awaited<ReturnType<Fn>>> | undefined>,\n  error: Signal<Error | undefined>,\n  cancelable?: true,\n): Signalified<Fn, true>;\n\n/**\n * Function doing the following:\n * 1. Prevents the wrapped function from being called concurrently.\n * 2. Being called, updates the passed promise and error signals.\n *\n * As a result, the function returns a new one, returning a non-cancelable promise.\n * @param fn - function to wrap.\n * @param createPendingError - function that creates error in case of concurrent call\n * @param promise - signal containing the execution promise\n * @param error - signal containing the last call error.\n * @param cancelable - is result cancelable. True by default.\n */\nexport function signalifyAsyncFn<Fn extends AnyFn>(\n  fn: Fn,\n  createPendingError: () => TypedError<any>,\n  promise: Signal<Promise<Awaited<ReturnType<Fn>>> | undefined>,\n  error: Signal<Error | undefined>,\n  cancelable: false,\n): Signalified<Fn, false>;\n\n// #__NO_SIDE_EFFECTS__\nexport function signalifyAsyncFn<Fn extends AnyFn>(\n  fn: Fn,\n  createPendingError: () => TypedError<any>,\n  promise:\n    | Signal<CancelablePromise<Awaited<ReturnType<Fn>>> | undefined>\n    | Signal<Promise<Awaited<ReturnType<Fn>>> | undefined>,\n  error: Signal<Error | undefined>,\n  cancelable?: boolean,\n): Signalified<Fn, boolean> {\n  const PromiseConstructor = cancelable === undefined || cancelable\n    ? CancelablePromise\n    : Promise;\n\n  return Object.assign((...args: Parameters<Fn>): PromiseLike<ReturnType<Fn>> => {\n    return PromiseConstructor\n      .resolve()\n      .then(async () => {\n        // Check if the operation is currently not in progress.\n        if (promise()) {\n          const err = createPendingError();\n          error.set(err);\n          throw err;\n        }\n\n        // Start performing the wrapped function.\n        batch(() => {\n          promise.set(\n            (PromiseConstructor as typeof Promise).resolve(fn(...args)) as unknown as any,\n          );\n          error.set(undefined);\n        });\n        let result: [completed: true, result: ReturnType<Fn>] | [completed: false, err: Error];\n        try {\n          result = [true, await promise()!];\n        } catch (e) {\n          result = [false, e as Error];\n        }\n\n        // Actualize the state.\n        batch(() => {\n          promise.set(undefined);\n          error.set(result[0] ? undefined : result[1]);\n        });\n\n        // Throw an error or return result.\n        if (!result[0]) {\n          throw result[1];\n        }\n        return result[1];\n      });\n  }, fn);\n}\n", "import { batch, type Signal } from '@telegram-apps/signals';\nimport {\n  type AsyncOptions,\n  CancelablePromise,\n  TypedError,\n} from '@telegram-apps/bridge';\n\nimport { ERR_ALREADY_MOUNTING } from '@/errors.js';\nimport { signalifyAsyncFn } from '@/scopes/signalifyAsyncFn.js';\n\n/**\n * Creates a mount function for a component.\n * @param component - the component name\n * @param mount - function mounting the component\n * @param onMounted - function that will be called whenever mount was completed.\n * @param isMounted - signal containing the current mount completion state\n * @param promise - signal containing the mount promise\n * @param error - signal containing the mount error\n */\n// #__NO_SIDE_EFFECTS__\nexport function createMountFn<R>(\n  component: string,\n  mount: (options?: AsyncOptions) => R | CancelablePromise<R>,\n  onMounted: (result: R) => void,\n  isMounted: Signal<boolean>,\n  promise: Signal<CancelablePromise<Awaited<R>> | undefined>,\n  error: Signal<Error | undefined>,\n): (options?: AsyncOptions) => CancelablePromise<void> {\n  const noConcurrent = signalifyAsyncFn(\n    mount,\n    () => new TypedError(\n      ERR_ALREADY_MOUNTING,\n      `The ${component} component is already mounting`,\n    ),\n    promise,\n    error,\n  );\n\n  return (options?) => {\n    return CancelablePromise.resolve().then(async () => {\n      if (!isMounted()) {\n        const result = await noConcurrent(options);\n        batch(() => {\n          isMounted.set(true);\n          onMounted(result);\n        });\n      }\n    });\n  };\n}\n", "import { createWrapSafe } from '@/scopes/toolkit/createWrapSafe.js';\n\nexport const createWrapBasic = createWrapSafe;", "import { computed, signal } from '@telegram-apps/signals';\nimport type { CancelablePromise } from '@telegram-apps/toolkit';\n\nimport type { State } from './types.js';\n\n/**\n * Complete biometry manager state.\n */\nexport const state = signal<State>({ available: false});\n\n/**\n * True if the manager is currently authenticating.\n */\nexport const isAuthenticating = signal<boolean>(false);\n\n/**\n * True if the manager is currently requesting access.\n */\nexport const isRequestingAccess = signal<boolean>(false);\n\n//#region Mount.\n\n/**\n * Signal indicating if the component is currently mounted.\n */\nexport const isMounted = signal(false);\n\n/**\n * Signal indicating if the component is currently mounting.\n */\nexport const isMounting = computed(() => !!mountPromise());\n\n/**\n * Signal containing the error occurred during mount.\n */\nexport const mountError = signal<Error | undefined>();\n\n/**\n * Signal containing the mount process promise.\n */\nexport const mountPromise = signal<CancelablePromise<State> | undefined>();\n\n//#endregion\n\n/**\n * Signal indicating biometry is available.\n */\nexport const isAvailable = computed(() => {\n  const s = state();\n  return s && s.available;\n});\n", "import type { EventPayload } from '@telegram-apps/bridge';\n\nimport type { State } from './types.js';\n\n/**\n * Converts `biometry_info_received` to some common shape.\n * @param event - event payload.\n * @see biometry_info_received\n */\nexport function eventToState(event: EventPayload<'biometry_info_received'>): State {\n  return event.available ? {\n    available: true,\n    tokenSaved: event.token_saved,\n    deviceId: event.device_id,\n    accessRequested: event.access_requested,\n    type: event.type,\n    accessGranted: event.access_granted,\n  } : {\n    available: false,\n  };\n}\n", "import type { ExecuteWithOptions, CancelablePromise } from '@telegram-apps/bridge';\n\nimport { request } from '@/scopes/globals.js';\nimport { wrapSafe } from '@/scopes/toolkit/wrapSafe.js';\n\nimport { eventToState } from './eventToState.js';\nimport type { State } from './types.js';\n\nconst GET_INFO_METHOD = 'web_app_biometry_get_info';\n\n/**\n * Requests biometry information.\n * @since Mini Apps v7.2\n * @param options - additional execution options.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example\n * if (requestBiometry.isAvailable()) {\n *   const biometryState = await requestBiometry();\n * }\n */\nexport const requestBiometry = wrapSafe(\n  'requestBiometry',\n  (options?: ExecuteWithOptions): CancelablePromise<State> => {\n    return request(GET_INFO_METHOD, 'biometry_info_received', options).then(eventToState);\n  },\n  {\n    isSupported: GET_INFO_METHOD,\n  },\n);\n", "import {\n  on,\n  off,\n  TypedError,\n  CancelablePromise,\n  getStorageValue,\n  setStorageValue,\n  type BiometryTokenUpdateStatus,\n  type BiometryAuthRequestStatus,\n  type EventListener,\n} from '@telegram-apps/bridge';\nimport { isPageReload } from '@telegram-apps/navigation';\n\nimport { postEvent, request } from '@/scopes/globals.js';\nimport { createMountFn } from '@/scopes/createMountFn.js';\nimport { createIsSupported } from '@/scopes/toolkit/createIsSupported.js';\nimport { createWrapComplete } from '@/scopes/toolkit/createWrapComplete.js';\nimport { createWrapSupported } from '@/scopes/toolkit/createWrapSupported.js';\nimport { createWrapBasic } from '@/scopes/toolkit/createWrapBasic.js';\nimport { ERR_ALREADY_REQUESTING, ERR_NOT_AVAILABLE } from '@/errors.js';\n\nimport {\n  state,\n  isMounted,\n  isRequestingAccess,\n  isAuthenticating,\n  mountError,\n  mountPromise,\n} from './signals.js';\nimport { requestBiometry } from './requestBiometry.js';\nimport { eventToState } from './eventToState.js';\nimport type {\n  State,\n  AuthenticateOptions,\n  RequestAccessOptions,\n  UpdateTokenOptions,\n} from './types.js';\n\ntype StorageValue = State;\n\nconst REQUEST_AUTH_METHOD = 'web_app_biometry_request_auth';\nconst REQUEST_ACCESS_METHOD = 'web_app_biometry_request_access';\nconst OPEN_SETTINGS_METHOD = 'web_app_biometry_open_settings';\nconst UPDATE_TOKEN_METHOD = 'web_app_biometry_update_token';\nconst INFO_RECEIVED_EVENT = 'biometry_info_received';\nconst COMPONENT_NAME = 'biometry';\n\n/**\n * @returns True if the biometry manager is supported.\n */\nexport const isSupported = createIsSupported(REQUEST_AUTH_METHOD);\n\nconst wrapBasic = createWrapBasic(COMPONENT_NAME);\nconst wrapSupported = createWrapSupported(COMPONENT_NAME, REQUEST_AUTH_METHOD);\nconst wrapComplete = createWrapComplete(COMPONENT_NAME, isMounted, REQUEST_AUTH_METHOD);\n\nfunction throwNotAvailable(): never {\n  throw new TypedError(ERR_NOT_AVAILABLE, 'Biometry is not available');\n}\n\n/**\n * Attempts to authenticate a user using biometrics and fetch a previously stored secure token.\n * @param options - method options.\n * @since Mini Apps v7.2\n * @returns Token from the local secure storage saved previously or undefined.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @throws {TypedError} ERR_NOT_MOUNTED\n * @throws {TypedError} ERR_ALREADY_REQUESTING\n * @throws {TypedError} ERR_NOT_AVAILABLE\n * @example\n * if (authenticate.isAvailable()) {\n *   const { status, token } = await authenticate({\n *     reason: 'Authenticate to open wallet',\n *   });\n * }\n */\nexport const authenticate = wrapComplete(\n  'authenticate',\n  (options?: AuthenticateOptions): CancelablePromise<{\n    /**\n     * Authentication status.\n     */\n    status: BiometryAuthRequestStatus;\n    /**\n     * Token from the local secure storage saved previously.\n     */\n    token?: string;\n  }> => {\n    return CancelablePromise.withFn(async abortSignal => {\n      if (isAuthenticating()) {\n        throw new TypedError(ERR_ALREADY_REQUESTING, 'Authentication is already in progress');\n      }\n\n      const s = state();\n      if (!s || !s.available) {\n        throwNotAvailable();\n      }\n\n      isAuthenticating.set(true);\n\n      try {\n        const response = await request(\n          REQUEST_AUTH_METHOD,\n          'biometry_auth_requested',\n          {\n            abortSignal,\n            params: {\n              reason: ((options || {}).reason || '').trim(),\n            },\n          },\n        );\n\n        const { token } = response;\n        if (typeof token === 'string') {\n          setState({ ...s, token });\n        }\n        return response;\n      } finally {\n        isAuthenticating.set(false);\n      }\n    }, options);\n  },\n);\n\n/**\n * Opens the biometric access settings for bots. Useful when you need to request biometrics\n * access to users who haven't granted it yet.\n *\n * _Note that this method can be called only in response to user interaction with the Mini App\n * interface (e.g. a click inside the Mini App or on the main button)_.\n * @since Mini Apps v7.2\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example\n * if (openSettings.isAvailable()) {\n *   openSettings();\n * }\n */\nexport const openSettings = wrapSupported('openSettings', (): void => {\n  postEvent(OPEN_SETTINGS_METHOD);\n});\n\n/**\n * Requests permission to use biometrics.\n * @since Mini Apps v7.2\n * @returns Promise with true, if access was granted.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @throws {TypedError} ERR_NOT_MOUNTED\n * @throws {TypedError} ERR_ALREADY_REQUESTING\n * @throws {TypedError} ERR_NOT_AVAILABLE\n * @example\n * if (requestAccess.isAvailable()) {\n *   const accessGranted = await requestAccess({\n *     reason: 'Authenticate to open wallet',\n *   });\n * }\n */\nexport const requestAccess = wrapComplete(\n  'requestAccess',\n  (options?: RequestAccessOptions): CancelablePromise<boolean> => {\n    return CancelablePromise.withFn(async abortSignal => {\n      if (isRequestingAccess()) {\n        throw new TypedError(ERR_ALREADY_REQUESTING, 'Access request is already in progress');\n      }\n      isRequestingAccess.set(true);\n\n      try {\n        const info = await request(REQUEST_ACCESS_METHOD, INFO_RECEIVED_EVENT, {\n          abortSignal,\n          params: { reason: (options || {}).reason || '' },\n        }).then(eventToState);\n\n        if (!info.available) {\n          throwNotAvailable();\n        }\n        setState(info);\n\n        return info.accessGranted;\n      } finally {\n        isRequestingAccess.set(false);\n      }\n    }, options);\n  },\n);\n\n/**\n * Mounts the Biometry component.\n * @since Mini Apps v7.2\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example\n * if (mount.isAvailable()) {\n *   await mount();\n * }\n */\nexport const mount = wrapBasic('mount', createMountFn<State>(\n  COMPONENT_NAME,\n  (options) => {\n    const s = isPageReload() && getStorageValue<StorageValue>(COMPONENT_NAME);\n    return s ? s : requestBiometry(options);\n  },\n  result => {\n    on(INFO_RECEIVED_EVENT, onBiometryInfoReceived);\n    setState(result);\n  },\n  isMounted,\n  mountPromise,\n  mountError,\n));\n\nconst onBiometryInfoReceived: EventListener<'biometry_info_received'> = e => {\n  setState(eventToState(e));\n};\n\nfunction setState(s: State): void {\n  state.set(s);\n  setStorageValue<StorageValue>(COMPONENT_NAME, s);\n}\n\n/**\n * Unmounts the component.\n */\nexport function unmount() {\n  off(INFO_RECEIVED_EVENT, onBiometryInfoReceived);\n  isMounted.set(false);\n}\n\n/**\n * Updates the biometric token in a secure storage on the device.\n * @since Mini Apps v7.2\n * @returns Promise with `true`, if token was updated.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @throws {TypedError} ERR_NOT_MOUNTED\n * @example Setting a new token\n * if (updateToken.isAvailable()) {\n *   updateToken({\n *     token: 'abcdef',\n *   })\n * }\n * @example Deleting the token\n * if (updateToken.isAvailable()) {\n *   updateToken();\n * }\n */\nexport const updateToken = wrapComplete(\n  'updateToken',\n  (options?: UpdateTokenOptions): CancelablePromise<BiometryTokenUpdateStatus> => {\n    options ||= {};\n    return request(UPDATE_TOKEN_METHOD, 'biometry_token_updated', {\n      ...options,\n      params: {\n        token: options.token || '',\n        reason: options.reason,\n      },\n    }).then(r => r.status);\n  },\n);\n", "import { createWrapSafe, type SafeWrapFn } from '@/scopes/toolkit/createWrapSafe.js';\n\nexport function createWrapMounted(\n  component: string,\n  isMounted: () => boolean,\n): SafeWrapFn<false> {\n  return createWrapSafe(component, { isMounted });\n}", "import { isPageReload } from '@telegram-apps/navigation';\nimport { getStorageValue, setStorageValue } from '@telegram-apps/bridge';\nimport { signal } from '@telegram-apps/signals';\n\nimport { postEvent } from '@/scopes/globals.js';\nimport { createWrapMounted } from '@/scopes/toolkit/createWrapMounted.js';\nimport { createWrapBasic } from '@/scopes/toolkit/createWrapBasic.js';\n\ntype StorageValue = boolean;\n\nconst COMPONENT_NAME = 'closingBehavior';\n\n/**\n * Signal indicating if the confirmation dialog should be shown, while the user\n * is trying to close the Mini App.\n */\nexport const isConfirmationEnabled = signal(false);\n\n/**\n * Signal indicating if the Closing Behavior component is currently mounted.\n */\nexport const isMounted = signal(false);\n\nconst wrapMounted = createWrapMounted(COMPONENT_NAME, isMounted);\nconst wrapBasic = createWrapBasic(COMPONENT_NAME);\n\n/**\n * Disables the closing confirmation dialog.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_MOUNTED\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @example\n * if (disableConfirmation.isAvailable()) {\n *   disableConfirmation();\n * }\n */\nexport const disableConfirmation = wrapMounted('disableConfirmation', (): void => {\n  setClosingConfirmation(false);\n});\n\n/**\n * Enables the closing confirmation dialog.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_MOUNTED\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @example\n * if (enableConfirmation.isAvailable()) {\n *   enableConfirmation();\n * }\n */\nexport const enableConfirmation = wrapMounted('enableConfirmation', (): void => {\n  setClosingConfirmation(true);\n});\n\n/**\n * Mounts the Closing Behavior component restoring its state.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @example\n * if (mount.isAvailable()) {\n *   mount();\n * }\n */\nexport const mount = wrapBasic('mount', (): void => {\n  if (!isMounted()) {\n    setClosingConfirmation(\n      isPageReload() && getStorageValue<StorageValue>(COMPONENT_NAME) || false,\n    );\n    isMounted.set(true);\n  }\n});\n\nfunction setClosingConfirmation(value: boolean): void {\n  if (value !== isConfirmationEnabled()) {\n    postEvent('web_app_setup_closing_behavior', { need_confirmation: value });\n    setStorageValue<StorageValue>(COMPONENT_NAME, value);\n    isConfirmationEnabled.set(value);\n  }\n}\n\n/**\n * Unmounts the Closing Behavior component.\n */\nexport function unmount(): void {\n  isMounted.set(false);\n}\n", "import {\n  CancelablePromise,\n  type ExecuteWithOptions,\n} from '@telegram-apps/bridge';\nimport { array, object, string } from '@telegram-apps/transformers';\n\nimport { invokeCustomMethod } from '@/scopes/globals.js';\nimport { createIsSupported } from '@/scopes/toolkit/createIsSupported.js';\nimport { createWrapSupported } from '@/scopes/toolkit/createWrapSupported.js';\n\nconst INVOKE_METHOD_NAME = 'web_app_invoke_custom_method';\nconst wrapSupported = createWrapSupported('cloudStorage', INVOKE_METHOD_NAME);\n\n/**\n * Signal indicating if the Cloud Storage is supported.\n */\nexport const isSupported = createIsSupported(INVOKE_METHOD_NAME);\n\n/**\n * Deletes specified key or keys from the cloud storage.\n * @param keyOrKeys - key or keys to delete.\n * @param options - request execution options.\n * @since Mini Apps v6.9\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example Deleting a single key\n * if (deleteItem.isAvailable()) {\n *   await deleteItem('my-key');\n * }\n * @example Deleting multiple keys\n * if (deleteItem.isAvailable()) {\n *   await deleteItem(['key1', 'key2']);\n * }\n */\nexport const deleteItem = wrapSupported('deleteItem', (\n  keyOrKeys: string | string[],\n  options?: ExecuteWithOptions,\n): CancelablePromise<void> => {\n  const keys = Array.isArray(keyOrKeys) ? keyOrKeys : [keyOrKeys];\n  return keys.length\n    ? invokeCustomMethod('deleteStorageValues', { keys }, options).then()\n    : CancelablePromise.resolve();\n});\n\n/**\n * Gets multiple keys' values from the cloud storage.\n * @param keys - keys list.\n * @param options - request execution options.\n * @returns Map, where a key is one of the specified in the `keys` argument,\n * and a value is a corresponding storage value.\n * @since Mini Apps v6.9\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example\n * if (deleteItem.isAvailable()) {\n *   const { key1, key2 } = await getItem(['key1', 'key2']);\n * }\n */\nfunction _getItem<K extends string>(\n  keys: K[],\n  options?: ExecuteWithOptions,\n): CancelablePromise<Record<K, string>>;\n\n/**\n * Gets a single key value from the cloud storage.\n * @param key - cloud storage key.\n * @param options - request execution options.\n * @return Value of the specified key. If the key was not created previously,\n * the function will return an empty string.\n * @since Mini Apps v6.9\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example\n * if (getItem.isAvailable()) {\n *   const keyValue = await getItem('my-key');\n * }\n */\nfunction _getItem(key: string, options?: ExecuteWithOptions): CancelablePromise<string>;\n\nfunction _getItem(\n  keyOrKeys: string | string[],\n  options?: ExecuteWithOptions,\n): CancelablePromise<string | Record<string, string>> {\n  const keys = Array.isArray(keyOrKeys) ? keyOrKeys : [keyOrKeys];\n\n  return keys.length\n    ? invokeCustomMethod('getStorageValues', { keys }, options).then(data => {\n      const result = object(\n        Object.fromEntries(keys.map((k) => [k, string()])),\n      )()(data);\n\n      return Array.isArray(keyOrKeys) ? result : result[keyOrKeys];\n    })\n    : CancelablePromise.resolve(typeof keyOrKeys === 'string' ? '' : {});\n}\n\nexport const getItem = wrapSupported('getItem', _getItem);\n\n/**\n * Returns a list of all keys presented in the cloud storage.\n * @param options - request execution options.\n * @since Mini Apps v6.9\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example\n * if (getKeys.isAvailable()) {\n *   const keysArray = await getKeys();\n * }\n */\nexport const getKeys = wrapSupported('getKeys', (\n  options?: ExecuteWithOptions,\n): CancelablePromise<string[]> => {\n  return invokeCustomMethod('getStorageKeys', {}, options)\n    .then(array(string())());\n});\n\n/**\n * Saves the specified value by a key.\n * @param key - storage key.\n * @param value - storage value.\n * @param options - request execution options.\n * @since Mini Apps v6.9\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example\n * if (setItem.isAvailable()) {\n *   await setItem('key', 'value');\n * }\n */\nexport const setItem = wrapSupported('setItem', (\n  key: string,\n  value: string,\n  options?: ExecuteWithOptions,\n): CancelablePromise<void> => {\n  return invokeCustomMethod('saveStorageValue', {\n    key,\n    value,\n  }, options).then();\n});\n", "import type {\n  ImpactHapticFeedbackStyle,\n  NotificationHapticFeedbackType,\n} from '@telegram-apps/bridge';\n\nimport { postEvent } from '@/scopes/globals.js';\nimport { createIsSupported } from '@/scopes/toolkit/createIsSupported.js';\nimport { createWrapSupported } from '@/scopes/toolkit/createWrapSupported.js';\n\nconst HAPTIC_METHOD_NAME = 'web_app_trigger_haptic_feedback';\nconst wrapSupported = createWrapSupported('hapticFeedback', HAPTIC_METHOD_NAME);\n\n/**\n * Signal indicating if the Haptic Feedback is supported.\n */\nexport const isSupported = createIsSupported(HAPTIC_METHOD_NAME);\n\n/**\n * A method that tells if an impact occurred. The Telegram app may play the\n * appropriate haptics based on style value passed.\n * @param style - impact style.\n * @since Mini Apps v6.1\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example\n * if (impactOccurred.isAvailable()) {\n *   impactOccurred('medium');\n * }\n */\nexport const impactOccurred = wrapSupported(\n  'impactOccurred',\n  (style: ImpactHapticFeedbackStyle): void => {\n    postEvent(HAPTIC_METHOD_NAME, {\n      type: 'impact',\n      impact_style: style,\n    });\n  },\n);\n\n/**\n * A method tells that a task or action has succeeded, failed, or produced\n * a warning. The Telegram app may play the appropriate haptics based on type\n * value passed.\n * @param type - notification type.\n * @since Mini Apps v6.1\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example\n * if (notificationOccurred.isAvailable()) {\n *   notificationOccurred('success');\n * }\n */\nexport const notificationOccurred = wrapSupported(\n  'notificationOccurred',\n  (type: NotificationHapticFeedbackType): void => {\n    postEvent(HAPTIC_METHOD_NAME, {\n      type: 'notification',\n      notification_type: type,\n    });\n  },\n);\n\n/**\n * A method tells that the user has changed a selection. The Telegram app may\n * play the appropriate haptics.\n *\n * Do not use this feedback when the user makes or confirms a selection; use\n * it only when the selection changes.\n * @since Mini Apps v6.1\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example\n * if (selectionChanged.isAvailable()) {\n *   selectionChanged();\n * }\n */\nexport const selectionChanged = wrapSupported(\n  'selectionChanged',\n  (): void => {\n    postEvent(HAPTIC_METHOD_NAME, { type: 'selection_change' });\n  },\n);\n", "import { computed, type Computed, signal } from '@telegram-apps/signals';\nimport { type InitData, retrieveLaunchParams } from '@telegram-apps/bridge';\n\n/* USUAL */\n\n/**\n * Complete component state.\n */\nexport const state = signal<InitData | undefined>(undefined);\n\n/* COMPUTED */\n\nfunction fromState<K extends keyof InitData>(key: K): Computed<InitData[K] | undefined> {\n  return computed(() => {\n    const s = state();\n    return s ? s[key] : undefined;\n  });\n}\n\n/**\n * @see InitData.authDate\n */\nexport const authDate = fromState('authDate');\n\n/**\n * @see InitData.canSendAfter\n */\nexport const canSendAfter = fromState('canSendAfter');\n\n/**\n * Date after which it is allowed to call\n * the [answerWebAppQuery](https://core.telegram.org/bots/api#answerwebappquery) method.\n */\nexport const canSendAfterDate = computed(() => {\n  const authDateValue = authDate();\n  const canSendAfterValue = canSendAfter();\n\n  return canSendAfterValue && authDateValue\n    ? new Date(authDateValue.getTime() + canSendAfterValue * 1000)\n    : undefined\n});\n\n/**\n * @see InitData.chat\n */\nexport const chat = fromState('chat');\n\n/**\n * @see InitData.chatType\n */\nexport const chatType = fromState('chatType');\n\n/**\n * @see InitData.chatInstance\n */\nexport const chatInstance = fromState('chatInstance');\n\n/**\n * @see InitData.hash\n */\nexport const hash = fromState('hash');\n\n/**\n * @see InitData.queryId\n */\nexport const queryId = fromState('queryId');\n\n/**\n * Raw representation of init data.\n */\nexport const raw = signal<string | undefined>();\n\n/**\n * @see InitData.receiver\n */\nexport const receiver = fromState('receiver');\n\n/**\n * Restores the component state.\n */\nexport function restore(): void {\n  const lp = retrieveLaunchParams();\n  state.set(lp.initData);\n  raw.set(lp.initDataRaw);\n}\n\n/**\n * @see InitData.startParam\n */\nexport const startParam = fromState('startParam');\n\n/**\n * @see InitData.user\n */\nexport const user = fromState('user');", "import { initData } from '@telegram-apps/transformers';\nimport type { InitData } from '@telegram-apps/bridge';\n\n/**\n * Parses an incoming value as init data.\n * @param value - value to check.\n * @throws {} Parsing errors.\n */\nexport function parseInitData(value: unknown): InitData {\n  return initData()(value);\n}", "import {\n  TypedError,\n  type InvoiceStatus,\n  type ExecuteWithPostEvent,\n} from '@telegram-apps/bridge';\nimport { signal } from '@telegram-apps/signals';\n\nimport { request } from '@/scopes/globals.js';\nimport { createIsSupported } from '@/scopes/toolkit/createIsSupported.js';\nimport { createWrapSupported } from '@/scopes/toolkit/createWrapSupported.js';\nimport {\n  ERR_INVALID_URL,\n  ERR_INVALID_SLUG,\n  ERR_ALREADY_OPENED,\n} from '@/errors.js';\n\nconst OPEN_METHOD = 'web_app_open_invoice';\nconst wrapSupported = createWrapSupported('invoice', OPEN_METHOD);\n\n/**\n * Signal indicating if an invoice is opened.\n */\nexport const isOpened = signal(false);\n\n/**\n * Signal indicating if invoices are supported.\n */\nexport const isSupported = createIsSupported(OPEN_METHOD);\n\n/**\n * Opens an invoice using its slug.\n * @param slug - invoice slug.\n * @param options - additional options.\n * @since Mini Apps v6.1\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @throws {TypedError} ERR_ALREADY_OPENED\n * @example\n * if (open.isAvailable()) {\n *   const status = await open('kJNFS331');\n * }\n */\nexport function _open(\n  slug: string,\n  options?: ExecuteWithPostEvent,\n): Promise<InvoiceStatus>;\n\n/**\n * Opens an invoice using its url.\n * @param url - invoice URL.\n * @param type - value type.\n * @param options - additional options.\n * @since Mini Apps v6.1\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @throws {TypedError} ERR_ALREADY_OPENED\n * @throws {TypedError} ERR_INVALID_URL\n * @throws {TypedError} ERR_INVALID_SLUG\n * @example\n * if (open.isAvailable()) {\n *   const status = await open('https://t.me/$kJNFS331', 'url');\n * }\n * @example\n * if (open.isAvailable()) {\n *   const status = await open('https://t.me/invoice/kJNFS331', 'url');\n * }\n */\nexport function _open(\n  url: string,\n  type: 'url',\n  options?: ExecuteWithPostEvent,\n): Promise<InvoiceStatus>;\n\nexport async function _open(\n  urlOrSlug: string,\n  optionsOrType?: 'url' | ExecuteWithPostEvent,\n  options?: ExecuteWithPostEvent,\n): Promise<InvoiceStatus> {\n  if (isOpened()) {\n    throw new TypedError(ERR_ALREADY_OPENED, 'An invoice is already opened');\n  }\n\n  let slug: string;\n\n  if (optionsOrType === 'url') {\n    const { hostname, pathname } = new URL(urlOrSlug, window.location.href);\n    if (hostname !== 't.me') {\n      throw new TypedError(ERR_INVALID_URL, `Link has unexpected hostname: ${hostname}`);\n    }\n\n    // Valid examples:\n    // \"/invoice/my-slug\"\n    // \"/$my-slug\"\n    const match = pathname.match(/^\\/(\\$|invoice\\/)([A-Za-z0-9\\-_=]+)$/);\n    if (!match) {\n      throw new TypedError(\n        ERR_INVALID_SLUG,\n        `Expected to receive a link with a pathname in format \"/invoice/{slug}\" or \"/\\${slug}\"`,\n      );\n    }\n    [, , slug] = match;\n  } else {\n    // todo: validate slug?\n    slug = urlOrSlug;\n    options = optionsOrType;\n  }\n\n  isOpened.set(true);\n\n  return request(OPEN_METHOD, 'invoice_closed', {\n    ...options,\n    params: { slug },\n    capture: (data) => slug === data.slug,\n  })\n    .then(r => r.status)\n    .finally(() => {\n      isOpened.set(false);\n    });\n}\n\nexport const open = wrapSupported('open', _open);\n", "import type { UnionRequiredKeys } from '@telegram-apps/toolkit';\n\ntype RemoveUndefined<T> = {\n  [K in UnionRequiredKeys<T>]-?: T[K]\n};\n\n/**\n * @returns Object with keys having undefined values.\n * @param value - an object to remove undefined values from.\n */\nexport function removeUndefined<T extends {}>(value: T): RemoveUndefined<T> {\n  // TODO: Check via caniuse: Object.fromEntries\n  return Object.fromEntries(\n    Object.entries(value).filter((tuple) => tuple[1] !== undefined),\n  ) as RemoveUndefined<T>;\n}", "import { toRGB } from '@telegram-apps/transformers';\n\n/**\n * @param color - color in any format acceptable by the `toRGB` function.\n * @returns True if the color is recognized as dark.\n * @see toRGB\n */\nexport function isColorDark(color: string): boolean {\n  const rgb = toRGB(color);\n\n  // Real formula: hsp = Math.sqrt(0.299 * r * r + 0.587 * g * g + 0.114 * b * b)\n  // See: https://stackoverflow.com/a/596243\n  return Math.sqrt(\n    [0.299, 0.587, 0.114].reduce<number>((acc, modifier, idx) => {\n      // Extract part of #RRGGBB pattern and convert it to DEC.\n      const dec = parseInt(rgb.slice(1 + idx * 2, 1 + (idx + 1) * 2), 16);\n      return acc + dec * dec * modifier;\n    }, 0),\n  ) < 120;\n}\n", "import type { ThemeParams } from '@telegram-apps/bridge';\nimport { computed, type Computed, signal } from '@telegram-apps/signals';\n\nimport { isColorDark } from '@/utils/isColorDark.js';\n\n/**\n * True if the component is currently mounted.\n */\nexport const isMounted = signal(false);\n\n/**\n * True if CSS variables are currently bound.\n */\nexport const isCssVarsBound = signal(false);\n\n/**\n * Complete component state.\n */\nexport const state = signal<ThemeParams>({});\n\nfunction fromState<K extends keyof ThemeParams>(key: K): Computed<ThemeParams[K] | undefined> {\n  return computed(() => state()[key]);\n}\n\n/**\n * @since v6.10\n */\nexport const accentTextColor = fromState('accentTextColor');\n\nexport const backgroundColor = fromState('bgColor');\n\nexport const buttonColor = fromState('buttonColor');\n\nexport const buttonTextColor = fromState('buttonTextColor');\n\n/**\n * @since v7.10\n */\nexport const bottomBarBgColor = fromState('bottomBarBgColor');\n\nexport const destructiveTextColor = fromState('destructiveTextColor');\n\n/**\n * @since v6.10\n */\nexport const headerBackgroundColor = fromState('headerBgColor');\n\nexport const hintColor = fromState('hintColor');\n\n/**\n * @returns True if the current color scheme is recognized as dark.\n * This value is calculated based on the current theme's background color.\n */\nexport const isDark = computed(() => {\n  const { bgColor } = state();\n  return !bgColor || isColorDark(bgColor);\n});\n\nexport const linkColor = fromState('linkColor');\n\nexport const secondaryBackgroundColor = fromState('secondaryBgColor');\n\n/**\n * @since v6.10\n */\nexport const sectionBackgroundColor = fromState('sectionBgColor');\n\n/**\n * @since v6.10\n */\nexport const sectionHeaderTextColor = fromState('sectionHeaderTextColor');\n\n/**\n * @since v7.6\n */\nexport const sectionSeparatorColor = fromState('sectionSeparatorColor');\n\n/**\n * @since v6.10\n */\nexport const subtitleTextColor = fromState('subtitleTextColor');\n\nexport const textColor = fromState('textColor');\n", "import { computed, type Computed, signal } from '@telegram-apps/signals';\n\nimport {\n  buttonColor,\n  buttonTextColor,\n} from '@/scopes/components/theme-params/signals.js';\n\nimport type { State } from './types.js';\n\nfunction fromState<K extends keyof Required<State>>(\n  key: K,\n): Computed<Required<State>[K]> {\n  return computed(() => state()[key]);\n}\n\nexport const internalState = signal<State>({\n  hasShineEffect: false,\n  isEnabled: true,\n  isLoaderVisible: false,\n  isVisible: false,\n  text: 'Continue',\n});\n\n/**\n * Complete component state.\n */\nexport const state = computed<Required<State>>(() => {\n  const s = internalState();\n  return {\n    ...s,\n    backgroundColor: s.backgroundColor || buttonColor() || '#2481cc',\n    textColor: s.textColor || buttonTextColor() || '#ffffff',\n  };\n});\n\n/**\n * Signal indicating if the Main Button is currently mounted.\n */\nexport const isMounted = signal(false);\n\n/**\n * Signal containing the current Main Button background color.\n */\nexport const backgroundColor = fromState('backgroundColor');\n\n/**\n * Signal indicating if the Main Button has a shining effect.\n */\nexport const hasShineEffect = fromState('hasShineEffect');\n\n/**\n * Signal indicating if the Main Button is currently active and can be clicked.\n */\nexport const isEnabled = fromState('isEnabled');\n\n/**\n * Signal indicating if the Main Button displays a loader inside it.\n */\nexport const isLoaderVisible = fromState('isLoaderVisible');\n\n/**\n * Signal indicating if the Main Button is currently visible.\n */\nexport const isVisible = fromState('isVisible');\n\n/**\n * Signal containing the Main Button text.\n */\nexport const text = fromState('text');\n\n/**\n * Signal containing the current Main Button text color.\n */\nexport const textColor = fromState('textColor');\n", "import {\n  off,\n  on,\n  getStorageValue,\n  setStorageValue,\n  type EventListener,\n} from '@telegram-apps/bridge';\nimport { isPageReload } from '@telegram-apps/navigation';\n\nimport { postEvent } from '@/scopes/globals.js';\nimport { createWrapBasic } from '@/scopes/toolkit/createWrapBasic.js';\nimport { createWrapMounted } from '@/scopes/toolkit/createWrapMounted.js';\nimport { removeUndefined } from '@/utils/removeUndefined.js';\n\nimport { internalState, isMounted, state } from './signals.js';\nimport type { State } from './types.js';\n\ntype StorageValue = State;\n\nconst SETUP_METHOD_NAME = 'web_app_setup_main_button';\nconst CLICK_EVENT_NAME = 'main_button_pressed';\nconst COMPONENT_NAME = 'mainButton';\n\nconst wrapBasic = createWrapBasic(COMPONENT_NAME);\nconst wrapMounted = createWrapMounted(COMPONENT_NAME, isMounted);\n\n/**\n * Mounts the Main Button restoring its state.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @example\n * if (mount.isAvailable()) {\n *   mount();\n * }\n */\nexport const mount = wrapBasic('mount', (): void => {\n  if (!isMounted()) {\n    const prev = isPageReload() && getStorageValue<StorageValue>(COMPONENT_NAME);\n    prev && internalState.set(prev);\n    isMounted.set(true);\n  }\n});\n\n/**\n * Adds a new Main Button click listener.\n * @param fn - event listener.\n * @returns A function to remove bound listener.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @example\n * if (onClick.isAvailable()) {\n *   const off = onClick(() => {\n *     console.log('User clicked the Main Button');\n *     off();\n *   });\n * }\n */\nexport const onClick = wrapBasic(\n  'onClick',\n  (fn: EventListener<'main_button_pressed'>): VoidFunction => {\n    return on(CLICK_EVENT_NAME, fn);\n  },\n);\n\n/**\n * Removes the Main Button click listener.\n * @param fn - an event listener.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @example\n * if (offClick.isAvailable()) {\n *   function listener() {\n *     console.log('User clicked the Main Button');\n *     offClick(listener);\n *   }\n *   onClick(listener);\n * }\n */\nexport const offClick = wrapBasic(\n  'offClick',\n  (fn: EventListener<'main_button_pressed'>): void => {\n    off(CLICK_EVENT_NAME, fn);\n  },\n);\n\n/**\n * Updates the Main Button state.\n * @param updates - state changes to perform.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_MOUNTED\n * @example\n * if (setParams.isAvailable()) {\n *   setParams({\n *     text: 'Submit',\n *     isEnabled: true,\n *     hasShineEffect: true,\n *   });\n * }\n */\nexport const setParams = wrapMounted(\n  'setParams',\n  (updates: Partial<State>): void => {\n    internalState.set({ ...internalState(), ...removeUndefined(updates) });\n    setStorageValue<StorageValue>(COMPONENT_NAME, internalState());\n\n    // We should not commit changes until the payload is correct.\n    // Some version of Telegram will crash due to the empty value of the text.\n    const s = state();\n    s.text && postEvent(SETUP_METHOD_NAME, {\n      color: s.backgroundColor,\n      has_shine_effect: s.hasShineEffect,\n      is_active: s.isEnabled,\n      is_progress_visible: s.isLoaderVisible,\n      is_visible: s.isVisible,\n      text: s.text,\n      text_color: s.textColor,\n    });\n  },\n);\n\n/**\n * Unmounts the Main Button.\n *\n * Note that this function does not remove listeners added via the `onClick`\n * function, so you have to remove them on your own.\n * @see onClick\n */\nexport function unmount(): void {\n  isMounted.set(false);\n}\n", "import { TypedError } from '@telegram-apps/bridge';\n\nimport { ERR_CSS_VARS_ALREADY_BOUND } from '@/errors.js';\n\n/**\n * @throws {TypedError} ERR_CSS_VARS_ALREADY_BOUND\n */\nexport function throwCssVarsBound(): never {\n  throw new TypedError(\n    ERR_CSS_VARS_ALREADY_BOUND,\n    'CSS variables are already bound',\n  );\n}", "import { themeParams } from '@telegram-apps/transformers';\nimport type { ThemeParams } from '@telegram-apps/bridge';\n\n/**\n * Parses incoming value as theme parameters.\n * @param value - value to parse.\n */\nexport function parseThemeParams(value: unknown): ThemeParams {\n  return themeParams()(value);\n}\n", "import {\n  off,\n  on,\n  camelToKebab,\n  getStorageValue,\n  setStorageValue,\n  retrieveLaunchParams,\n  deleteCssVar,\n  setCssVar,\n  type EventListener,\n  type RGB,\n  type ThemeParams,\n} from '@telegram-apps/bridge';\nimport { isPageReload } from '@telegram-apps/navigation';\n\nimport { throwCssVarsBound } from '@/scopes/toolkit/throwCssVarsBound.js';\nimport { createWrapMounted } from '@/scopes/toolkit/createWrapMounted.js';\nimport { createWrapBasic } from '@/scopes/toolkit/createWrapBasic.js';\n\nimport { isCssVarsBound, state, isMounted } from './signals.js';\nimport { parseThemeParams } from './parseThemeParams.js';\nimport type { GetCssVarNameFn } from './types.js';\n\ntype StorageValue = ThemeParams;\n\nconst COMPONENT_NAME = 'themeParams';\nconst THEME_CHANGED_EVENT = 'theme_changed';\n\nconst wrapBasic = createWrapBasic(COMPONENT_NAME);\nconst wrapMounted = createWrapMounted(COMPONENT_NAME, isMounted);\n\n/**\n * Creates CSS variables connected with the current theme parameters.\n *\n * By default, created CSS variables names are following the pattern \"--tg-theme-{name}\", where\n * {name} is a theme parameters key name converted from camel case to kebab case.\n *\n * Default variables:\n * - `--tg-theme-bg-color`\n * - `--tg-theme-secondary-text-color`\n *\n * Variables are being automatically updated if theme parameters were changed.\n *\n * @param getCSSVarName - function, returning complete CSS variable name for the specified\n * theme parameters key.\n * @returns Function to stop updating variables.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_CSS_VARS_ALREADY_BOUND\n * @throws {TypedError} ERR_NOT_MOUNTED\n * @example Using no arguments\n * if (bindCssVars.isAvailable()) {\n *   bindCssVars();\n * }\n * @example Using custom CSS vars generator\n * if (bindCssVars.isAvailable()) {\n *   bindCssVars(key => `--my-prefix-${key}`);\n * }\n */\nexport const bindCssVars = wrapMounted(\n  'bindCssVars',\n  (getCSSVarName?: GetCssVarNameFn): VoidFunction => {\n    isCssVarsBound() && throwCssVarsBound();\n\n    getCSSVarName ||= (prop) => `--tg-theme-${camelToKebab(prop)}`;\n\n    function forEachEntry(fn: (key: string, value: RGB) => void): void {\n      Object.entries(state()).forEach(([k, v]) => {\n        v && fn(k, v);\n      });\n    }\n\n    function actualize(): void {\n      forEachEntry((k, v) => {\n        setCssVar(getCSSVarName!(k), v);\n      });\n    }\n\n    actualize();\n    state.sub(actualize);\n    isCssVarsBound.set(true);\n\n    return () => {\n      forEachEntry(deleteCssVar);\n      state.unsub(actualize);\n      isCssVarsBound.set(false);\n    };\n  },\n);\n\n/**\n * Mounts the Theme Params component restoring its state.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example\n * if (mount.isAvailable()) {\n *   mount();\n * }\n */\nexport const mount = wrapBasic('mount', (): void => {\n  if (!isMounted()) {\n    on(THEME_CHANGED_EVENT, onThemeChanged);\n    state.set(\n      isPageReload()\n      && getStorageValue<StorageValue>(COMPONENT_NAME)\n      || retrieveLaunchParams().themeParams,\n    );\n    isMounted.set(true);\n  }\n});\n\nconst onThemeChanged: EventListener<'theme_changed'> = (e) => {\n  const value = parseThemeParams(e.theme_params);\n  state.set(value);\n  setStorageValue<StorageValue>(COMPONENT_NAME, value);\n};\n\n/**\n * Unmounts the Theme Params component.\n */\nexport function unmount(): void {\n  off(THEME_CHANGED_EVENT, onThemeChanged);\n  isMounted.set(false);\n}\n", "import { Computed, computed, signal } from '@telegram-apps/signals';\nimport { isRGB } from '@telegram-apps/transformers';\nimport type { BackgroundColor, BottomBarColor, RGB } from '@telegram-apps/bridge';\n\nimport { isColorDark } from '@/utils/isColorDark.js';\nimport {\n  backgroundColor as themeBgColor,\n  secondaryBackgroundColor as themeSecondaryBgColor,\n  bottomBarBgColor as themeBottomBarBgColor,\n} from '@/scopes/components/theme-params/signals.js';\n\nimport type { HeaderColor, State } from './types.js';\n\n// #__NO_SIDE_EFFECTS__\nfunction rgbBasedOn(signal: Computed<'bg_color' | 'secondary_bg_color' | RGB>) {\n  return computed<RGB | undefined>(() => {\n    const color = signal();\n\n    return isRGB(color) ? color : color === 'bg_color'\n      ? themeBgColor()\n      : themeSecondaryBgColor();\n  });\n}\n\n/**\n * The Mini App background color.\n */\nexport const backgroundColor = signal<BackgroundColor>('bg_color');\n\n/**\n * RGB representation of the background color.\n *\n * This value requires the Theme Params component to be mounted to extract a valid RGB value\n * of the color key.\n */\nexport const backgroundColorRGB = rgbBasedOn(backgroundColor);\n\n\n/**\n * The Mini App bottom bar background color.\n */\nexport const bottomBarColor = signal<BottomBarColor>('bottom_bar_bg_color');\n\n/**\n * RGB representation of the bottom bar background color.\n *\n * This value requires the Theme Params component to be mounted to extract a valid RGB value\n * of the color key.\n */\nexport const bottomBarColorRGB = computed<RGB | undefined>(() => {\n  const color = bottomBarColor();\n  return isRGB(color)\n    ? color\n    : color === 'bottom_bar_bg_color'\n      // Following the logic from the Telegram SDK.\n      // I removed \"|| '#ffffff'\" because this seems too strange to me. This is just not right.\n      ? themeBottomBarBgColor() || themeSecondaryBgColor()\n      : color === 'secondary_bg_color'\n        ? themeSecondaryBgColor()\n        : themeBgColor();\n});\n\n/**\n * The Mini App header color.\n */\nexport const headerColor = signal<HeaderColor>('bg_color');\n\n/**\n * RGB representation of the header color.\n *\n * This value requires the Theme Params component to be mounted to extract a valid RGB value\n * of the color key.\n */\nexport const headerColorRGB = rgbBasedOn(headerColor);\n\n/**\n * True if the component is currently mounted.\n */\nexport const isMounted = signal(false);\n\n/**\n * True if CSS variables are currently bound.\n */\nexport const isCssVarsBound = signal(false);\n\n/**\n * True if the current Mini App background color is recognized as dark.\n */\nexport const isDark = computed(() => {\n  const color = backgroundColorRGB();\n  return color ? isColorDark(color) : false;\n});\n\n/**\n * Complete component state.\n */\nexport const state = computed<State>(() => ({\n  backgroundColor: backgroundColor(),\n  bottomBarColor: bottomBarColor(),\n  headerColor: headerColor(),\n}));\n", "import {\n  getStorageValue,\n  setStorageValue,\n  createCbCollector,\n  camelToKebab,\n  deleteCssVar,\n  setCssVar,\n  supports,\n  type RGB,\n  type BottomBarColor,\n  type BackgroundColor, MethodName,\n} from '@telegram-apps/bridge';\nimport { isRGB } from '@telegram-apps/transformers';\nimport { isPageReload } from '@telegram-apps/navigation';\nimport { computed, type Computed } from '@telegram-apps/signals';\n\nimport { $version, postEvent } from '@/scopes/globals.js';\nimport { mount as tpMount } from '@/scopes/components/theme-params/methods.js';\nimport { throwCssVarsBound } from '@/scopes/toolkit/throwCssVarsBound.js';\nimport { createWrapComplete } from '@/scopes/toolkit/createWrapComplete.js';\nimport { createWrapSupported } from '@/scopes/toolkit/createWrapSupported.js';\nimport { createWrapBasic } from '@/scopes/toolkit/createWrapBasic.js';\n\nimport {\n  headerColor,\n  backgroundColor,\n  isCssVarsBound,\n  state,\n  isMounted,\n  bottomBarColor,\n  headerColorRGB,\n  bottomBarColorRGB,\n  backgroundColorRGB,\n} from './signals.js';\nimport type { GetCssVarNameFn, HeaderColor, State } from './types.js';\n\ntype StorageValue = State;\n\nconst SET_BG_COLOR_METHOD = 'web_app_set_background_color';\nconst SET_BOTTOM_BAR_COLOR_METHOD = 'web_app_set_bottom_bar_color';\nconst SET_HEADER_COLOR_METHOD = 'web_app_set_header_color';\nconst COMPONENT_NAME = 'miniApp';\n\nconst isSupportedSchema = {\n  any: [\n    SET_BG_COLOR_METHOD,\n    SET_BOTTOM_BAR_COLOR_METHOD,\n    SET_HEADER_COLOR_METHOD,\n  ] as MethodName[],\n};\n\n/**\n * True if the Mini App component is supported.\n */\nexport const isSupported = computed(() => {\n  return isSupportedSchema.any.some(method => supports(method, $version()));\n});\n\nconst wrapBasic = createWrapBasic(COMPONENT_NAME);\nconst wrapSupported = createWrapSupported(COMPONENT_NAME, isSupportedSchema);\nconst wrapComplete = createWrapComplete(COMPONENT_NAME, isMounted, isSupportedSchema);\n\n/**\n * Creates CSS variables connected with the mini app.\n *\n * Default variables:\n * - `--tg-bg-color`\n * - `--tg-header-color`\n * - `--tg-bottom-bar-color`\n *\n * Variables are being automatically updated if theme parameters were changed.\n *\n * @param getCSSVarName - function, returning complete CSS variable name for the specified\n * mini app key.\n * @returns Function to stop updating variables.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_VARS_ALREADY_BOUND\n * @throws {TypedError} ERR_NOT_MOUNTED\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @example Using no arguments\n * if (bindCssVars.isAvailable()) {\n *   bindCssVars();\n * }\n * @example Using custom CSS vars generator\n * if (bindCssVars.isAvailable()) {\n *   bindCssVars(key => `--my-prefix-${key}`);\n * }\n */\nexport const bindCssVars = wrapComplete(\n  'bindCssVars',\n  (getCSSVarName?: GetCssVarNameFn): VoidFunction => {\n    isCssVarsBound() && throwCssVarsBound();\n\n    const [addCleanup, cleanup] = createCbCollector();\n\n    /**\n     * Binds specified CSS variable to a signal.\n     * @param cssVar - CSS variable name.\n     * @param signal - signal to listen changes to.\n     */\n    function bind(cssVar: string, signal: Computed<RGB | undefined>) {\n      function update() {\n        setCssVar(cssVar, signal() || null);\n      }\n\n      // Instantly set CSS variable.\n      update();\n\n      // Remember to clean this relation up.\n      addCleanup(signal.sub(update), deleteCssVar.bind(null, cssVar));\n    }\n\n    getCSSVarName ||= (prop) => `--tg-${camelToKebab(prop)}`;\n    bind(getCSSVarName('bgColor'), backgroundColorRGB);\n    bind(getCSSVarName('bottomBarColor'), bottomBarColorRGB);\n    bind(getCSSVarName('headerColor'), headerColorRGB);\n    addCleanup(() => {\n      isCssVarsBound.set(false);\n    });\n\n    isCssVarsBound.set(true);\n\n    return cleanup;\n  },\n);\n\n/**\n * Closes the Mini App.\n * @param returnBack - should the client return to the previous activity.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @example\n * if (close.isAvailable()) {\n *   close();\n * }\n */\nexport const close = wrapBasic('close', (returnBack?: boolean): void => {\n  postEvent('web_app_close', { return_back: returnBack });\n});\n\n/**\n * Mounts the component.\n *\n * This function restores the component state and is automatically saving it in the local storage\n * if it changed.\n *\n * Internally, the function mounts the Theme Params component to work with correctly extracted\n * theme palette values.\n * @since Mini Apps v6.1\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example\n * if (mount.isAvailable()) {\n *   mount();\n * }\n */\nexport const mount = wrapSupported(\n  'mount',\n  (): void => {\n    if (!isMounted()) {\n      const s = isPageReload() && getStorageValue<StorageValue>(COMPONENT_NAME);\n      tpMount();\n\n      setBackgroundColor.ifAvailable(s ? s.backgroundColor : 'bg_color');\n      setBottomBarColor.ifAvailable(s ? s.bottomBarColor : 'bottom_bar_bg_color');\n      setHeaderColor.ifAvailable(s ? s.headerColor : 'bg_color');\n\n      isMounted.set(true);\n    }\n  },\n);\n\n/**\n * Informs the Telegram app that the Mini App is ready to be displayed.\n *\n * It is recommended to call this method as early as possible, as soon as all\n * essential interface elements loaded.\n *\n * Once this method is called, the loading placeholder is hidden and the Mini\n * App shown.\n *\n * If the method is not called, the placeholder will be hidden only when the\n * page was fully loaded.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @example\n * if (ready.isAvailable()) {\n *   ready();\n * }\n */\nexport const ready = wrapBasic('ready', (): void => {\n  postEvent('web_app_ready');\n});\n\nfunction saveState() {\n  setStorageValue<StorageValue>(COMPONENT_NAME, state());\n}\n\n/**\n * Updates the background color.\n * @since Mini Apps v6.1\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @throws {TypedError} ERR_NOT_MOUNTED\n * @example\n * if (setBackgroundColor.isAvailable()) {\n *   setBackgroundColor('bg_color');\n * }\n */\nexport const setBackgroundColor = wrapComplete(\n  'setBackgroundColor',\n  (color: BackgroundColor): void => {\n    if (color !== backgroundColor()) {\n      postEvent(SET_BG_COLOR_METHOD, { color });\n      backgroundColor.set(color);\n      saveState();\n    }\n  },\n  SET_BG_COLOR_METHOD,\n);\n\n/**\n * Updates the bottom bar background color.\n * @since Mini Apps v7.10\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @throws {TypedError} ERR_NOT_MOUNTED\n * @example\n * if (setBottomBarColor.isAvailable()) {\n *   setBottomBarColor('ff11a3');\n * }\n */\nexport const setBottomBarColor = wrapComplete(\n  'setBottomBarColor',\n  (color: BottomBarColor) => {\n    if (color !== bottomBarColor()) {\n      postEvent(SET_BOTTOM_BAR_COLOR_METHOD, { color });\n      bottomBarColor.set(color);\n      saveState();\n    }\n  },\n  SET_BOTTOM_BAR_COLOR_METHOD,\n);\n\n/**\n * Updates the header color.\n * @since Mini Apps v6.1\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @throws {TypedError} ERR_NOT_MOUNTED\n * @example Using known color key\n * if (setHeaderColor.isAvailable()) {\n *   setHeaderColor('bg_color');\n * }\n * @example Using RGB\n * if (setHeaderColor.isAvailable() && setHeaderColor.supports.rgb()) {\n *   setHeaderColor('#ffaabb');\n * }\n */\nexport const setHeaderColor = wrapComplete(\n  'setHeaderColor',\n  (color: HeaderColor): void => {\n    if (color !== headerColor()) {\n      postEvent(SET_HEADER_COLOR_METHOD, isRGB(color) ? { color } : { color_key: color });\n      headerColor.set(color);\n      saveState();\n    }\n  },\n  SET_HEADER_COLOR_METHOD,\n  {\n    rgb: [SET_HEADER_COLOR_METHOD, 'color', isRGB],\n  },\n);\n\n/**\n * Unmounts the component, removing the listener, saving the component state in the local storage.\n */\nexport function unmount(): void {\n  isMounted.set(false);\n}\n", "import { type PopupParams, TypedError } from '@telegram-apps/bridge';\n\nimport { ERR_POPUP_INVALID_PARAMS } from '@/errors.js';\n\nimport type { OpenOptions } from './types.js';\n\n/**\n * Prepares popup parameters before sending them to native app.\n * @param params - popup parameters.\n * @throws {TypedError} ERR_POPUP_INVALID_PARAMS: Invalid title\n * @throws {TypedError} ERR_POPUP_INVALID_PARAMS: Invalid message\n * @throws {TypedError} ERR_POPUP_INVALID_PARAMS: Invalid buttons count\n * @throws {TypedError} ERR_POPUP_INVALID_PARAMS: Invalid button id length\n * @throws {TypedError} ERR_POPUP_INVALID_PARAMS: Invalid button text length\n */\nexport function prepareParams(params: OpenOptions): PopupParams {\n  const message = params.message.trim();\n  const title = (params.title || '').trim();\n  const buttons = params.buttons || [];\n\n  if (title.length > 64) {\n    throw new TypedError(ERR_POPUP_INVALID_PARAMS, `Invalid title: ${title}`);\n  }\n  if (!message || message.length > 256) {\n    throw new TypedError(ERR_POPUP_INVALID_PARAMS, `Invalid message: ${message}`);\n  }\n  if (buttons.length > 3) {\n    throw new TypedError(ERR_POPUP_INVALID_PARAMS, `Invalid buttons count: ${buttons.length}`);\n  }\n\n  return {\n    title,\n    message,\n    buttons: buttons.length\n      ? buttons.map((b, idx) => {\n        const id = b.id || '';\n        if (id.length > 64) {\n          throw new TypedError(ERR_POPUP_INVALID_PARAMS, `Button with index ${idx} has invalid id: ${id}`);\n        }\n\n        if (!b.type || b.type === 'default' || b.type === 'destructive') {\n          const text = b.text.trim();\n          if (!text || text.length > 64) {\n            throw new TypedError(ERR_POPUP_INVALID_PARAMS, `Button with index ${idx} has invalid text: ${text}`);\n          }\n          return { type: b.type, text, id };\n        }\n        return { type: b.type, id };\n      })\n      : [{ type: 'close', id: '' }],\n  };\n}", "import { TypedError } from '@telegram-apps/bridge';\nimport { signal } from '@telegram-apps/signals';\n\nimport { request } from '@/scopes/globals.js';\nimport { ERR_ALREADY_OPENED } from '@/errors.js';\nimport { createIsSupported } from '@/scopes/toolkit/createIsSupported.js';\nimport { createWrapSupported } from '@/scopes/toolkit/createWrapSupported.js';\n\nimport { prepareParams } from './prepareParams.js';\nimport type { OpenOptions } from './types.js';\n\nconst OPEN_METHOD = 'web_app_open_popup';\nconst wrapSupported = createWrapSupported('popup', OPEN_METHOD);\n\n/**\n * Signal indicating if a popup is opened.\n */\nexport const isOpened = signal(false);\n\n/**\n * Signal indicating if popups are supported.\n */\nexport const isSupported = createIsSupported(OPEN_METHOD);\n\n/**\n * A method that shows a native popup described by the `params` argument.\n * The promise will be resolved when the popup is closed. Resolved value will have\n * an identifier of the pressed button.\n *\n * If a user clicked outside the popup or clicked the top right popup close\n * button, null will be resolved.\n *\n * @param options - popup parameters.\n * @since Mini Apps v6.2\n * @throws {TypedError} ERR_ALREADY_OPENED\n * @throws {TypedError} ERR_POPUP_INVALID_PARAMS: Invalid title\n * @throws {TypedError} ERR_POPUP_INVALID_PARAMS: Invalid message\n * @throws {TypedError} ERR_POPUP_INVALID_PARAMS: Invalid buttons count\n * @throws {TypedError} ERR_POPUP_INVALID_PARAMS: Invalid button id length\n * @throws {TypedError} ERR_POPUP_INVALID_PARAMS: Invalid button text length\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example\n * if (open.isAvailable()) {\n *   const buttonId = await open({\n *     title: 'Confirm action',\n *     message: 'Do you really want to buy this burger?',\n *     buttons: [\n *       { id: 'yes', text: 'Yes' },\n *       { id: 'no', type: 'destructive', text: 'No' },\n *     ],\n *   });\n * }\n */\nexport const open = wrapSupported(\n  'open',\n  async (options: OpenOptions): Promise<string | null> => {\n    if (isOpened()) {\n      throw new TypedError(ERR_ALREADY_OPENED, 'A popup is already opened');\n    }\n    isOpened.set(true);\n\n    try {\n      const { button_id: buttonId = null } = await request(OPEN_METHOD, 'popup_closed', {\n        ...options,\n        params: prepareParams(options),\n      });\n      return buttonId;\n    } finally {\n      isOpened.set(false);\n    }\n  },\n);", "import {\n  CancelablePromise,\n  createCbCollector,\n  TypedError,\n  on,\n  EnhancedPromise,\n  type ExecuteWithOptions,\n} from '@telegram-apps/bridge';\nimport { signal } from '@telegram-apps/signals';\n\nimport { postEvent } from '@/scopes/globals.js';\nimport { ERR_ALREADY_OPENED } from '@/errors.js';\nimport { createIsSupported } from '@/scopes/toolkit/createIsSupported.js';\nimport { createWrapSupported } from '@/scopes/toolkit/createWrapSupported.js';\n\ninterface OpenSharedOptions extends ExecuteWithOptions {\n  /**\n   * Title to be displayed in the scanner.\n   */\n  text?: string;\n}\n\nconst CLOSE_METHOD = 'web_app_close_scan_qr_popup';\nconst OPEN_METHOD = 'web_app_open_scan_qr_popup';\nconst CLOSED_EVENT = 'scan_qr_popup_closed';\nconst TEXT_RECEIVED_EVENT = 'qr_text_received';\n\nconst wrapSupported = createWrapSupported('qrScanner', OPEN_METHOD);\n\n/**\n * Closes the scanner.\n * @since Mini Apps v6.4\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example\n * if (close.isAvailable()) {\n *   close();\n * }\n */\nexport const close = wrapSupported('close', (): void => {\n  isOpened.set(false);\n  postEvent(CLOSE_METHOD);\n});\n\n/**\n * True if the scanner is currently opened.\n */\nexport const isOpened = signal(false);\n\n/**\n * Signal indicating if the QR Scanner is currently opened.\n */\nexport const isSupported = createIsSupported(OPEN_METHOD);\n\n/**\n * Opens the scanner and returns a promise which will be resolved with the QR\n * content if the passed `capture` function returned true.\n *\n * The `capture` option may be ommited. In this case, the first scanned QR\n * will be returned.\n *\n * Promise may also be resolved to undefined if the scanner was closed.\n * @param options - method options.\n * @returns A promise with QR content presented as string or undefined if the\n * scanner was closed.\n * @since Mini Apps v6.4\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @throws {TypedError} ERR_ALREADY_OPENED\n * @example Without `capture` option\n * if (open.isAvailable()) {\n *   const qr = await open({ text: 'Scan any QR' });\n * }\n * @example Using `capture` option\n * if (open.isAvailable()) {\n *   const qr = await open({\n *     text: 'Scan any QR',\n *     capture(scannedQr) {\n *       return scannedQr === 'any expected by me qr';\n *     }\n *   });\n * }\n */\nfunction _open(options?: OpenSharedOptions & {\n  /**\n   * Function, which should return true if the scanned QR should be captured.\n   * @param qr - scanned QR content.\n   */\n  capture?: (qr: string) => boolean;\n}): CancelablePromise<string | undefined>;\n\n/**\n * Opens the scanner and calls the `onCaptured` function each time, a QR was\n * scanned.\n *\n * The function returns a promise which will be resolved when the QR scanner\n * was closed. It expects the scanner to be closed externally by a user or\n * via the `close` method.\n * @param options - method options.\n * @since Mini Apps v6.4\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @throws {TypedError} ERR_ALREADY_OPENED\n * @example\n * if (open.isAvailable()) {\n *   const promise = await open({\n *     text: 'Scan any QR',\n *     onCaptured(scannedQr) {\n *       if (scannedQr === 'any expected by me qr') {\n *         close();\n *       }\n *     }\n *   });\n *   console.log('The scanner was closed');\n * }\n */\nfunction _open(options: OpenSharedOptions & {\n  /**\n   * Function which will be called if a QR code was scanned.\n   * @param qr - scanned QR content.\n   */\n  onCaptured: (qr: string) => void;\n}): CancelablePromise<void>;\n\nfunction _open(options?: OpenSharedOptions & {\n  onCaptured?: (qr: string) => void;\n  capture?: (qr: string) => boolean;\n}): CancelablePromise<string | void> {\n  return CancelablePromise.withFn((abortSignal) => {\n    if (isOpened()) {\n      throw new TypedError(ERR_ALREADY_OPENED, 'The QR Scanner is already opened');\n    }\n    isOpened.set(true);\n\n    options ||= {};\n    const { onCaptured, text, capture } = options;\n    const [, cleanup] = createCbCollector(\n      // Whenever the scanner was closed for some reason (by a developer or a\n      // user), we should resolve the promise with undefined.\n      isOpened.sub(() => {\n        promise.resolve();\n      }),\n      // Whenever user closed the scanner, update the isOpened signal state.\n      on(CLOSED_EVENT, () => {\n        isOpened.set(false);\n      }),\n      // Whenever some QR was scanned, we should check if it must be captured.\n      on(TEXT_RECEIVED_EVENT, (event) => {\n        if (onCaptured) {\n          onCaptured(event.data);\n        } else if (!capture || capture(event.data)) {\n          promise.resolve(event.data);\n          close();\n        }\n      }),\n    );\n\n    const promise = new EnhancedPromise<string | void>({ abortSignal })\n      .catch(close)\n      .finally(cleanup);\n\n    (options.postEvent || postEvent)(OPEN_METHOD, { text });\n\n    return promise;\n  }, options);\n}\n\nexport const open = wrapSupported('open', _open);", "import { computed, type Computed, signal } from '@telegram-apps/signals';\n\nimport { buttonColor } from '@/scopes/components/theme-params/signals.js';\nimport { bottomBarColorRGB } from '@/scopes/components/mini-app/signals.js';\n\nimport type { State } from './types.js';\n\nfunction fromState<K extends keyof Required<State>>(key: K): Computed<Required<State>[K]> {\n  return computed(() => state()[key]);\n}\n\nexport const internalState = signal<State>({\n  hasShineEffect: false,\n  isEnabled: true,\n  isLoaderVisible: false,\n  isVisible: false,\n  position: 'left',\n  text: 'Cancel',\n});\n\n/**\n * Complete component state.\n */\nexport const state = computed<Required<State>>(() => {\n  const s = internalState();\n  return {\n    ...s,\n    backgroundColor: s.backgroundColor || bottomBarColorRGB() || '#000000',\n    textColor: s.textColor || buttonColor() || '#2481cc',\n  };\n});\n\n/**\n * True if the component is currently mounted.\n */\nexport const isMounted = signal(false);\n\n/**\n * @see State.backgroundColor\n */\nexport const backgroundColor = fromState('backgroundColor');\n\n/**\n * @see State.hasShineEffect\n */\nexport const hasShineEffect = fromState('hasShineEffect');\n\n/**\n * @see State.isEnabled\n */\nexport const isEnabled = fromState('isEnabled');\n\n/**\n * @see State.isLoaderVisible\n */\nexport const isLoaderVisible = fromState('isLoaderVisible');\n\n/**\n * @see State.isVisible\n */\nexport const isVisible = fromState('isVisible');\n\n/**\n * @see State.position\n */\nexport const position = fromState('position');\n\n/**\n * @see State.text\n */\nexport const text = fromState('text');\n\n/**\n * @see State.textColor\n */\nexport const textColor = fromState('textColor');\n", "import {\n  off,\n  on,\n  getStorageValue,\n  setStorageValue,\n  type EventListener,\n} from '@telegram-apps/bridge';\nimport { isPageReload } from '@telegram-apps/navigation';\n\nimport { postEvent } from '@/scopes/globals.js';\nimport { createIsSupported } from '@/scopes/toolkit/createIsSupported.js';\nimport { createWrapComplete } from '@/scopes/toolkit/createWrapComplete.js';\nimport { createWrapSupported } from '@/scopes/toolkit/createWrapSupported.js';\n\nimport { internalState, isMounted, state } from './signals.js';\nimport type { State } from './types.js';\n\ntype StorageValue = State;\n\nconst SETUP_METHOD_NAME = 'web_app_setup_secondary_button';\nconst CLICK_EVENT_NAME = 'secondary_button_pressed';\nconst COMPONENT_NAME = 'secondaryButton';\n\nconst wrapSupported = createWrapSupported(COMPONENT_NAME, SETUP_METHOD_NAME);\nconst wrapComplete = createWrapComplete(COMPONENT_NAME, isMounted, SETUP_METHOD_NAME);\n\n/**\n * Signal indicating if the Secondary Button is supported.\n */\nexport const isSupported = createIsSupported(SETUP_METHOD_NAME);\n\n/**\n * Mounts the Secondary Button restoring its state.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example\n * if (mount.isAvailable()) {\n *   mount();\n * }\n */\nexport const mount = wrapSupported('mount', (): void => {\n  if (!isMounted()) {\n    const prev = isPageReload() && getStorageValue<StorageValue>(COMPONENT_NAME);\n    prev && internalState.set(prev);\n    isMounted.set(true);\n  }\n});\n\n/**\n * Adds a new Secondary Button click listener.\n * @param fn - event listener.\n * @returns A function to remove bound listener.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example\n * if (onClick.isAvailable()) {\n *   const off = onClick(() => {\n *     console.log('User clicked the Secondary Button');\n *     off();\n *   });\n * }\n */\nexport const onClick = wrapSupported(\n  'onClick',\n  (fn: EventListener<'secondary_button_pressed'>): VoidFunction => on(CLICK_EVENT_NAME, fn),\n);\n\n/**\n * Removes the Secondary Button click listener.\n * @param fn - an event listener.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example\n * if (offClick.isAvailable()) {\n *   function listener() {\n *     console.log('User clicked the Secondary Button');\n *     offClick(listener);\n *   }\n *   onClick(listener);\n * }\n */\nexport const offClick = wrapSupported(\n  'offClick',\n  (fn: EventListener<'secondary_button_pressed'>): void => {\n    off(CLICK_EVENT_NAME, fn);\n  },\n);\n\n/**\n * Updates the Secondary Button state.\n * @param updates - state changes to perform.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_MOUNTED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example\n * if (setParams.isAvailable()) {\n *   setParams({\n *     text: 'Submit',\n *     isEnabled: true,\n *     isVisible: true,\n *     position: 'left',\n *   });\n * }\n */\nexport const setParams = wrapComplete(\n  'setParams',\n  (updates: Partial<State>): void => {\n    internalState.set({\n      ...internalState(),\n      ...Object.fromEntries(\n        Object.entries(updates).filter(([, v]) => v !== undefined),\n      ),\n    });\n    setStorageValue<StorageValue>(COMPONENT_NAME, internalState());\n\n    // We should not commit changes until the payload is correct. Some version of Telegram will\n    // crash due to the empty value of the text.\n    const s = state();\n    s.text && postEvent(SETUP_METHOD_NAME, {\n      color: s.backgroundColor,\n      has_shine_effect: s.hasShineEffect,\n      is_active: s.isEnabled,\n      is_progress_visible: s.isLoaderVisible,\n      is_visible: s.isVisible,\n      position: s.position,\n      text: s.text,\n      text_color: s.textColor,\n    });\n  },\n);\n\n/**\n * Unmounts the Secondary Button.\n *\n * Note that this function does not remove listeners added via the `onClick`\n * function, so you have to remove them on your own.\n * @see onClick\n */\nexport function unmount(): void {\n  isMounted.set(false);\n}", "import {\n  off,\n  on,\n  getStorageValue,\n  setStorageValue,\n  type EventListener,\n} from '@telegram-apps/bridge';\nimport { signal } from '@telegram-apps/signals';\nimport { isPageReload } from '@telegram-apps/navigation';\n\nimport { postEvent } from '@/scopes/globals.js';\nimport { createIsSupported } from '@/scopes/toolkit/createIsSupported.js';\nimport { createWrapComplete } from '@/scopes/toolkit/createWrapComplete.js';\nimport {\n  createWrapSupported\n} from '@/scopes/toolkit/createWrapSupported.js';\n\ntype StorageValue = boolean;\n\nconst SETUP_METHOD_NAME = 'web_app_setup_settings_button';\nconst CLICK_EVENT_NAME = 'settings_button_pressed';\nconst COMPONENT_NAME = 'settingsButton';\n\n/**\n * Signal indicating if the Settings Button is currently visible.\n */\nexport const isVisible = signal(false);\n\n/**\n * Signal indicating if the Settings Button is currently mounted.\n */\nexport const isMounted = signal(false);\n\n/**\n * Signal indicating if the Settings Button is supported.\n */\nexport const isSupported = createIsSupported(SETUP_METHOD_NAME);\n\nconst wrapSupported = createWrapSupported(COMPONENT_NAME, SETUP_METHOD_NAME);\nconst wrapComplete = createWrapComplete(COMPONENT_NAME, isMounted, SETUP_METHOD_NAME);\n\n/**\n * Hides the Settings Button.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @throws {TypedError} ERR_NOT_MOUNTED\n * @since Mini Apps v6.10\n * @example\n * if (hide.isAvailable()) {\n *   hide();\n * }\n */\nexport const hide = wrapComplete('hide', (): void => {\n  setVisibility(false);\n});\n\n/**\n * Mounts the Settings Button restoring its state.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @since Mini Apps v6.10\n * @example\n * if (mount.isAvailable()) {\n *   mount();\n * }\n */\nexport const mount = wrapSupported('mount', (): void => {\n  if (!isMounted()) {\n    setVisibility(isPageReload() && getStorageValue<StorageValue>(COMPONENT_NAME) || false);\n    isMounted.set(true);\n  }\n});\n\nfunction setVisibility(value: boolean): void {\n  if (value !== isVisible()) {\n    postEvent(SETUP_METHOD_NAME, { is_visible: value });\n    setStorageValue<StorageValue>(COMPONENT_NAME, value);\n    isVisible.set(value);\n  }\n}\n\n/**\n * Adds a new Settings Button click listener.\n * @param fn - event listener.\n * @returns A function to remove bound listener.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @since Mini Apps v6.10\n * @example\n * if (onClick.isAvailable()) {\n *   const off = onClick(() => {\n *     console.log('User clicked the Settings Button');\n *     off();\n *   });\n * }\n */\nexport const onClick = wrapSupported(\n  'onClick',\n  (fn: EventListener<'settings_button_pressed'>): VoidFunction => on(CLICK_EVENT_NAME, fn),\n);\n\n/**\n * Removes the Settings Button click listener.\n * @param fn - an event listener.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @since Mini Apps v6.10\n * @example\n * if (offClick.isAvailable()) {\n *   function listener() {\n *     console.log('User clicked the Settings Button');\n *     offClick(listener);\n *   }\n *   onClick(listener);\n * }\n */\nexport const offClick = wrapSupported(\n  'offClick',\n  (fn: EventListener<'settings_button_pressed'>): void => {\n    off(CLICK_EVENT_NAME, fn);\n  },\n);\n\n/**\n * Shows the Settings Button.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @throws {TypedError} ERR_NOT_MOUNTED\n * @since Mini Apps v6.10\n * @example\n * if (show.isAvailable()) {\n *   show();\n * }\n */\nexport const show = wrapComplete('show', (): void => {\n  setVisibility(true);\n});\n\n/**\n * Unmounts the Settings Button.\n *\n * Note that this function does not remove listeners added via the `onClick`\n * function, so you have to remove them on your own.\n * @see onClick\n */\nexport function unmount(): void {\n  isMounted.set(false);\n}\n", "import { isPageReload } from '@telegram-apps/navigation';\nimport { getStorageValue, setStorageValue } from '@telegram-apps/bridge';\nimport { signal } from '@telegram-apps/signals';\n\nimport { postEvent } from '@/scopes/globals.js';\nimport { createIsSupported } from '@/scopes/toolkit/createIsSupported.js';\nimport { createWrapComplete } from '@/scopes/toolkit/createWrapComplete.js';\nimport {\n  createWrapSupported\n} from '@/scopes/toolkit/createWrapSupported.js';\n\ntype StorageValue = boolean;\n\nconst SETUP_METHOD_NAME = 'web_app_setup_swipe_behavior';\nconst COMPONENT_NAME = 'swipeBehavior';\n\n/**\n * Signal indicating if the Swipe Behavior component is currently mounted.\n */\nexport const isMounted = signal(false);\n\n/**\n * Signal indicating if the Swipe Behavior is supported.\n */\nexport const isSupported = createIsSupported(SETUP_METHOD_NAME);\n\n/**\n * Signal indicating if vertical swipes are enabled.\n */\nexport const isVerticalEnabled = signal(true);\n\nconst wrapSupported = createWrapSupported(COMPONENT_NAME, SETUP_METHOD_NAME);\nconst wrapComplete = createWrapComplete(COMPONENT_NAME, isMounted, SETUP_METHOD_NAME);\n\n/**\n * Disables vertical swipes.\n * @since Mini Apps v7.7\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @throws {TypedError} ERR_NOT_MOUNTED\n * @example\n * if (disableVertical.isAvailable()) {\n *   disableVertical();\n * }\n */\nexport const disableVertical = wrapComplete('disableVertical', (): void => {\n  setVerticalEnabled(false);\n});\n\n/**\n * Enables vertical swipes.\n * @since Mini Apps v7.7\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @throws {TypedError} ERR_NOT_MOUNTED\n * @example\n * if (enableVertical.isAvailable()) {\n *   enableVertical();\n * }\n */\nexport const enableVertical = wrapComplete('enableVertical', (): void => {\n  setVerticalEnabled(true);\n});\n\n/**\n * Mounts the Swipe Behavior component restoring its state.\n * @since Mini Apps v7.7\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example\n * if (mount.isAvailable()) {\n *   mount();\n * }\n */\nexport const mount = wrapSupported('mount', (): void => {\n  if (!isMounted()) {\n    setVerticalEnabled(\n      isPageReload() && getStorageValue<StorageValue>(COMPONENT_NAME) || false,\n      true,\n    );\n    isMounted.set(true);\n  }\n});\n\nfunction setVerticalEnabled(value: boolean, force?: boolean): void {\n  if (value !== isVerticalEnabled() || force) {\n    postEvent(SETUP_METHOD_NAME, { allow_vertical_swipe: value });\n    setStorageValue<StorageValue>(COMPONENT_NAME, value);\n    isVerticalEnabled.set(value);\n  }\n}\n\n/**\n * Unmounts the Swipe Behavior component.\n */\nexport function unmount(): void {\n  isMounted.set(false);\n}\n", "export const COMPONENT_NAME = 'viewport';\nexport const REQUEST_FS_METHOD = 'web_app_request_fullscreen';\nexport const FS_FAILED_EVENT = 'fullscreen_failed';\nexport const FS_CHANGED_EVENT = 'fullscreen_changed';\nexport const SA_CHANGED_EVENT = 'safe_area_changed';\nexport const CSA_CHANGED_EVENT = 'content_safe_area_changed';\nexport const VIEWPORT_CHANGED_EVENT = 'viewport_changed';\nexport const REQUEST_SAFE_AREA_METHOD = 'web_app_request_safe_area';\nexport const REQUEST_CONTENT_SAFE_AREA_METHOD = 'web_app_request_content_safe_area';", "import { computed, type Computed, signal } from '@telegram-apps/signals';\nimport { getStorageValue, type SafeAreaInsets, setStorageValue } from '@telegram-apps/bridge';\n\nimport { removeUndefined } from '@/utils/removeUndefined.js';\n\nimport { COMPONENT_NAME } from '../const.js';\nimport type { State } from '../types.js';\n\nconst initialInsets: SafeAreaInsets = {\n  left: 0,\n  top: 0,\n  bottom: 0,\n  right: 0,\n};\n\nfunction nonNegative(value: number): number {\n  return Math.max(value, 0);\n}\n\n/**\n * Signal containing the component complete state.\n */\nexport const state = signal<State>({\n  contentSafeAreaInsets: initialInsets,\n  height: 0,\n  isExpanded: false,\n  isFullscreen: false,\n  safeAreaInsets: initialInsets,\n  stableHeight: 0,\n  width: 0,\n});\n\nexport function signalFromState<K extends keyof State>(key: K): Computed<State[K]> {\n  return computed(() => state()[key]);\n}\n\nexport function setState(s: Partial<State>) {\n  const { height, stableHeight, width } = s;\n\n  state.set({\n    ...state(),\n    ...removeUndefined({\n      ...s,\n      height: height ? nonNegative(height) : undefined,\n      width: width ? nonNegative(width) : undefined,\n      stableHeight: stableHeight ? nonNegative(stableHeight) : undefined,\n    }),\n  });\n  setStorageValue<State>(COMPONENT_NAME, state());\n}\n\nexport function getStateFromStorage() {\n  return getStorageValue<State>(COMPONENT_NAME);\n}\n", "import { computed, signal } from '@telegram-apps/signals';\nimport type { CancelablePromise } from '@telegram-apps/bridge';\n\nimport { signalFromState } from './state.js';\n\n/**\n * Signal indicating if the viewport is currently in fullscreen mode.\n */\nexport const isFullscreen = signalFromState('isFullscreen');\n\n/**\n * Signal containing fullscreen request or exit promise.\n */\nexport const changeFullscreenPromise = signal<CancelablePromise<void>>();\n\n/**\n * Signal indicating if the fullscreen mode request is currently in progress.\n */\nexport const isChangingFullscreen = computed(() => {\n  return !!changeFullscreenPromise();\n});\n\n/**\n * Signal containing an error received during the last fullscreen mode request.\n */\nexport const changeFullscreenError = signal<Error | undefined>();\n", "import { computed, signal } from '@telegram-apps/signals';\nimport type { CancelablePromise } from '@telegram-apps/bridge';\n\nimport { State } from '../types.js';\n\n/**\n * Signal indicating if the component is currently mounted.\n */\nexport const isMounted = signal(false);\n\n/**\n * Signal indicating if the component is currently mounting.\n */\nexport const isMounting = computed(() => !!mountPromise());\n\n/**\n * Signal containing the error occurred during mount.\n */\nexport const mountError = signal<Error | undefined>(undefined);\n\n/**\n * Signal containing the mount process promise.\n */\nexport const mountPromise = signal<CancelablePromise<State> | undefined>();", "import { signalifyAsyncFn } from '@/scopes/signalifyAsyncFn.js';\nimport { type AsyncOptions, CancelablePromise, TypedError } from '@telegram-apps/bridge';\n\nimport { request } from '@/scopes/globals.js';\nimport { ERR_ALREADY_REQUESTING, ERR_FULLSCREEN_FAILED } from '@/errors.js';\nimport { createWrapComplete } from '@/scopes/toolkit/createWrapComplete.js';\n\nimport {\n  COMPONENT_NAME,\n  FS_CHANGED_EVENT,\n  FS_FAILED_EVENT,\n  REQUEST_FS_METHOD,\n} from '../../const.js';\nimport {\n  changeFullscreenError,\n  changeFullscreenPromise,\n  isFullscreen,\n} from '../../signals/fullscreen.js';\nimport { isMounted } from '../../signals/mounting.js';\nimport { setState } from '@/scopes/components/viewport/signals/state.js';\n\nconst wrapComplete = createWrapComplete(COMPONENT_NAME, isMounted, REQUEST_FS_METHOD);\n\nexport function createFullscreenFn(\n  method: string,\n  requestMethod: 'web_app_exit_fullscreen' | 'web_app_request_fullscreen',\n) {\n  return wrapComplete(method, signalifyAsyncFn(\n    (options?: AsyncOptions): CancelablePromise<void> => {\n      return request(requestMethod, [FS_CHANGED_EVENT, FS_FAILED_EVENT], options)\n        .then(result => {\n          if ('error' in result) {\n            if (result.error === 'ALREADY_FULLSCREEN') {\n              return true;\n            }\n            throw new TypedError(ERR_FULLSCREEN_FAILED, 'Fullscreen request failed', result.error);\n          }\n          return result.is_fullscreen;\n        })\n        .then(value => {\n          value !== isFullscreen() && setState({ isFullscreen: value });\n        });\n    },\n    () => {\n      return new TypedError(ERR_ALREADY_REQUESTING, 'Fullscreen mode change is already being requested');\n    },\n    changeFullscreenPromise,\n    changeFullscreenError,\n  ));\n}\n", "import { createFullscreenFn } from './createFullscreenFn.js';\nimport { REQUEST_FS_METHOD } from '../../const.js';\n\n/**\n * Requests fullscreen mode for the mini application.\n * @since Mini Apps v8.0\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_MOUNTED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @throws {TypedError} ERR_FULLSCREEN_FAILED\n * @example Using `isAvailable()`\n * if (requestFullscreen.isAvailable() && !isChangingFullscreen()) {\n *   await requestFullscreen();\n * }\n * @example Using `ifAvailable()`\n * if (!isChangingFullscreen()) {\n *   await requestFullscreen.ifAvailable();\n * }\n */\nexport const requestFullscreen = createFullscreenFn('requestFullscreen', REQUEST_FS_METHOD);", "import { createFullscreenFn } from './createFullscreenFn.js';\n\n/**\n * Exits mini application fullscreen mode.\n * @since Mini Apps v8.0\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_MOUNTED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @throws {TypedError} ERR_FULLSCREEN_FAILED\n * @example Using `isAvailable()`\n * if (exitFullscreen.isAvailable() && !isChangingFullscreen()) {\n *   await exitFullscreen();\n * }\n * @example Using `ifAvailable()`\n * if (!isChangingFullscreen()) {\n *   await exitFullscreen.ifAvailable();\n * }\n */\nexport const exitFullscreen = createFullscreenFn('exitFullscreen', 'web_app_exit_fullscreen');", "import { createWrapBasic } from '@/scopes/toolkit/createWrapBasic.js';\nimport { createWrapMounted } from '@/scopes/toolkit/createWrapMounted.js';\n\nimport { isMounted } from '../signals/mounting.js';\nimport { COMPONENT_NAME } from '../const.js';\n\nexport const wrapBasic = createWrapBasic(COMPONENT_NAME);\n\nexport const wrapMounted = createWrapMounted(COMPONENT_NAME, isMounted);", "import { type Computed, computed } from '@telegram-apps/signals';\nimport type { SafeAreaInsets } from '@telegram-apps/bridge';\n\nimport { signalFromState } from './state.js';\n\nfunction fromState(key: keyof SafeAreaInsets): Computed<number> {\n  return computed(() => safeAreaInsets()[key]);\n}\n\nexport const safeAreaInsets = signalFromState('safeAreaInsets');\nexport const safeAreaInsetBottom = fromState('bottom');\nexport const safeAreaInsetLeft = fromState('left');\nexport const safeAreaInsetRight = fromState('right');\nexport const safeAreaInsetTop = fromState('top');", "import { type Computed, computed } from '@telegram-apps/signals';\nimport type { SafeAreaInsets } from '@telegram-apps/bridge';\n\nimport { signalFromState } from './state.js';\n\nfunction fromState(key: keyof SafeAreaInsets): Computed<number> {\n  return computed(() => contentSafeAreaInsets()[key]);\n}\n\nexport const contentSafeAreaInsets = signalFromState('contentSafeAreaInsets');\nexport const contentSafeAreaInsetBottom = fromState('bottom');\nexport const contentSafeAreaInsetLeft = fromState('left');\nexport const contentSafeAreaInsetRight = fromState('right');\nexport const contentSafeAreaInsetTop = fromState('top');", "import type { AsyncOptions } from '@telegram-apps/bridge';\n\nimport { wrapSafe } from '@/scopes/toolkit/wrapSafe.js';\nimport { request } from '@/scopes/globals.js';\n\nimport { REQUEST_CONTENT_SAFE_AREA_METHOD } from '../../const.js';\n\n/**\n * Requests the actual viewport content safe area insets information.\n * @param options - request options.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @since Mini Apps v8.0\n * @example\n * if (requestContentSafeAreaInsets.isAvailable()) {\n *   const insets = await requestContentSafeAreaInsets();\n * }\n */\nexport const requestContentSafeAreaInsets = wrapSafe(\n  'requestContentSafeAreaInsets',\n  (options?: AsyncOptions) => request(REQUEST_CONTENT_SAFE_AREA_METHOD, 'content_safe_area_changed', options),\n  { isSupported: REQUEST_CONTENT_SAFE_AREA_METHOD },\n);\n", "import type { AsyncOptions } from '@telegram-apps/bridge';\n\nimport { wrapSafe } from '@/scopes/toolkit/wrapSafe.js';\nimport { request } from '@/scopes/globals.js';\n\nimport { REQUEST_SAFE_AREA_METHOD } from '../../const.js';\n\n/**\n * Requests the actual viewport safe area insets information.\n * @param options - request options.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @since Mini Apps v8.0\n * @example\n * if (requestSafeAreaInsets.isAvailable()) {\n *   const insets = await requestSafeAreaInsets();\n * }\n */\nexport const requestSafeAreaInsets = wrapSafe(\n  'requestSafeAreaInsets',\n  (options?: AsyncOptions) => request(REQUEST_SAFE_AREA_METHOD, 'safe_area_changed', options),\n  { isSupported: REQUEST_SAFE_AREA_METHOD },\n);", "import type { CancelablePromise, AsyncOptions } from '@telegram-apps/bridge';\n\nimport { request as _request } from '@/scopes/globals.js';\n\nexport interface RequestViewportResult {\n  height: number;\n  isExpanded: boolean;\n  isStable: boolean;\n  width: number;\n}\n\n/**\n * Requests viewport actual information from the Telegram application.\n * @param options - request options.\n * @example\n * if (requestViewport.isAvailable()) {\n *   const viewport = await requestViewport();\n * }\n */\nexport function requestViewport(options?: AsyncOptions): CancelablePromise<RequestViewportResult> {\n  return _request('web_app_request_viewport', 'viewport_changed', options).then(r => ({\n    height: r.height,\n    width: r.width,\n    isExpanded: r.is_expanded,\n    isStable: r.is_state_stable,\n  }));\n}\n", "import type { EventListener } from '@telegram-apps/bridge';\n\nimport { setState } from '../../signals/state.js';\n\nexport const onViewportChanged: EventListener<'viewport_changed'> = (data) => {\n  const { height } = data;\n  setState({\n    isExpanded: data.is_expanded,\n    height,\n    width: data.width,\n    stableHeight: data.is_state_stable ? height : undefined,\n  });\n};\n\nexport const onFullscreenChanged: EventListener<'fullscreen_changed'> = (data) => {\n  setState({ isFullscreen: data.is_fullscreen });\n};\n\nexport const onSafeAreaChanged: EventListener<'safe_area_changed'> = (data) => {\n  setState({ safeAreaInsets: data });\n};\n\nexport const onContentSafeAreaChanged: EventListener<'content_safe_area_changed'> = (data) => {\n  setState({ contentSafeAreaInsets: data });\n};\n", "import { isPageReload } from '@telegram-apps/navigation';\nimport { CancelablePromise, on, retrieveLaunchParams } from '@telegram-apps/bridge';\n\nimport { createMountFn } from '@/scopes/createMountFn.js';\n\nimport { wrapBasic } from '../wrappers.js';\nimport {\n  COMPONENT_NAME,\n  CSA_CHANGED_EVENT,\n  FS_CHANGED_EVENT,\n  SA_CHANGED_EVENT,\n  VIEWPORT_CHANGED_EVENT\n} from '../../const.js';\nimport { isMounted, mountPromise, mountError } from '../../signals/mounting.js';\nimport { getStateFromStorage, setState } from '../../signals/state.js';\nimport { safeAreaInsets } from '../../signals/safe-area-insets.js';\nimport { contentSafeAreaInsets } from '../../signals/content-safe-area-insets.js';\nimport { requestContentSafeAreaInsets } from '../static/requestContentSafeAreaInsets.js';\nimport { requestSafeAreaInsets } from '../static/requestSafeAreaInsets.js';\nimport { requestViewport } from '../static/requestViewport.js';\nimport type { State } from '../../types.js';\n\nimport { onContentSafeAreaChanged, onFullscreenChanged, onSafeAreaChanged, onViewportChanged } from './shared.js';\n\n/**\n * Mounts the Viewport component.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_ALREADY_MOUNTING\n * @example\n * if (mount.isAvailable() && !isMounting()) {\n *   await mount();\n * }\n */\nexport const mount = wrapBasic('mount', createMountFn<State>(\n  COMPONENT_NAME,\n  (options) => {\n    return CancelablePromise.resolve().then(async () => {\n      // Try to restore the state using the storage.\n      const s = isPageReload() && getStateFromStorage();\n      if (s) {\n        return s;\n      }\n\n      // Request all insets.\n      const [\n        retrievedSafeAreaInsets,\n        retrievedContentSafeAreaInsets,\n      ] = await CancelablePromise.all([\n        requestSafeAreaInsets.ifAvailable(options) || safeAreaInsets(),\n        requestContentSafeAreaInsets.ifAvailable(options) || contentSafeAreaInsets(),\n      ]);\n\n      // If the platform has a stable viewport, it means we could use the window global object\n      // properties.\n      const lp = retrieveLaunchParams();\n      const shared = {\n        contentSafeAreaInsets: retrievedContentSafeAreaInsets,\n        isFullscreen: !!lp.fullscreen,\n        safeAreaInsets: retrievedSafeAreaInsets,\n      };\n      if (['macos', 'tdesktop', 'unigram', 'webk', 'weba', 'web'].includes(lp.platform)) {\n        const w = window;\n        return {\n          ...shared,\n          height: w.innerHeight,\n          isExpanded: true,\n          stableHeight: w.innerHeight,\n          width: w.innerWidth,\n        };\n      }\n\n      // We were unable to retrieve data locally. In this case, we are\n      // sending a request returning the viewport information.\n      return requestViewport(options).then(data => ({\n        ...shared,\n        height: data.height,\n        isExpanded: data.isExpanded,\n        stableHeight: data.isStable ? data.height : 0,\n        width: data.width,\n      }));\n    });\n  },\n  (result) => {\n    on(VIEWPORT_CHANGED_EVENT, onViewportChanged);\n    on(FS_CHANGED_EVENT, onFullscreenChanged);\n    on(SA_CHANGED_EVENT, onSafeAreaChanged);\n    on(CSA_CHANGED_EVENT, onContentSafeAreaChanged);\n    setState(result);\n  },\n  isMounted,\n  mountPromise,\n  mountError,\n));\n", "import { off } from '@telegram-apps/bridge';\n\nimport { CSA_CHANGED_EVENT, FS_CHANGED_EVENT, SA_CHANGED_EVENT, VIEWPORT_CHANGED_EVENT } from '../../const.js';\nimport { isMounted, mountPromise } from '../../signals/mounting.js';\n\nimport { onContentSafeAreaChanged, onFullscreenChanged, onSafeAreaChanged, onViewportChanged } from './shared.js';\n\n/**\n * Unmounts the Viewport.\n */\nexport function unmount(): void {\n  // Cancel mount promise.\n  const promise = mountPromise();\n  promise && promise.cancel();\n\n  // TODO: Cancel all promises?\n\n  // Remove event listeners.\n  off(VIEWPORT_CHANGED_EVENT, onViewportChanged);\n  off(FS_CHANGED_EVENT, onFullscreenChanged);\n  off(SA_CHANGED_EVENT, onSafeAreaChanged);\n  off(CSA_CHANGED_EVENT, onContentSafeAreaChanged);\n\n  // Drop the mount flag.\n  isMounted.set(false);\n}", "import { signal } from '@telegram-apps/signals';\n\n/**\n * True if CSS variables are currently bound.\n */\nexport const isCssVarsBound = signal(false);", "import { signalFromState } from './state.js';\n\n/**\n * Signal containing the current height of the **visible area** of the Mini App.\n *\n * The application can display just the top part of the Mini App, with its\n * lower part remaining outside the screen area. From this position, the user\n * can \"pull\" the Mini App to its maximum height, while the bot can do the same\n * by calling `expand` method. As the position of the Mini App changes, the\n * current height value of the visible area will be updated  in real time.\n *\n * Please note that the refresh rate of this value is not sufficient to\n * smoothly follow the lower border of the window. It should not be used to pin\n * interface elements to the bottom of the visible area. It's more appropriate\n * to use the value of the `stableHeight` field for this purpose.\n *\n * @see stableHeight\n */\nexport const height = signalFromState('height');\n\n/**\n * Signal containing the height of the visible area of the Mini App in its last stable state.\n *\n * The application can display just the top part of the Mini App, with its\n * lower part remaining outside the screen area. From this position, the user\n * can \"pull\" the Mini App to its maximum height, while the application can do\n * the same by calling `expand` method.\n *\n * Unlike the value of `height`, the value of `stableHeight` does not change as\n * the position of the Mini App changes with user gestures or during\n * animations. The value of `stableHeight` will be updated after all gestures\n * and animations are completed and the Mini App reaches its final size.\n *\n * @see height\n */\nexport const stableHeight = signalFromState('stableHeight');\n\n/**\n * Signal containing the currently visible area width.\n */\nexport const width = signalFromState('width');\n", "import { camelToKebab, deleteCssVar, setCssVar } from '@telegram-apps/bridge';\n\nimport { throwCssVarsBound } from '@/scopes/toolkit/throwCssVarsBound.js';\n\nimport { isCssVarsBound } from '../signals/css-vars.js';\nimport { height, width, stableHeight } from '../signals/dimensions.js';\nimport {\n  safeAreaInsetBottom,\n  safeAreaInsetTop,\n  safeAreaInsetRight,\n  safeAreaInsetLeft,\n} from '../signals/safe-area-insets.js';\nimport {\n  contentSafeAreaInsetBottom,\n  contentSafeAreaInsetTop,\n  contentSafeAreaInsetRight,\n  contentSafeAreaInsetLeft,\n} from '../signals/content-safe-area-insets.js';\n\nimport { wrapMounted } from './wrappers.js';\nimport type { GetCSSVarNameFn } from '../types.js';\n\n/**\n * Creates CSS variables connected with the current viewport.\n *\n * By default, created CSS variables names are following the pattern\n * \"--tg-theme-{name}\", where\n * {name} is a theme parameters key name converted from camel case to kebab\n * case.\n *\n * Default variables:\n * - `--tg-viewport-height`\n * - `--tg-viewport-width`\n * - `--tg-viewport-stable-height`\n * - `--tg-viewport-content-safe-area-inset-top`\n * - `--tg-viewport-content-safe-area-inset-bottom`\n * - `--tg-viewport-content-safe-area-inset-left`\n * - `--tg-viewport-content-safe-area-inset-right`\n * - `--tg-viewport-safe-area-inset-top`\n * - `--tg-viewport-safe-area-inset-bottom`\n * - `--tg-viewport-safe-area-inset-left`\n * - `--tg-viewport-safe-area-inset-right`\n *\n * Variables are being automatically updated if the viewport was changed.\n *\n * @param getCSSVarName - function, returning computed complete CSS variable name. The CSS\n * variable will only be defined if the function returned non-empty string value.\n * @returns Function to stop updating variables.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_VARS_ALREADY_BOUND\n * @throws {TypedError} ERR_NOT_MOUNTED\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @example Using no arguments\n * if (bindCssVars.isAvailable()) {\n *   bindCssVars();\n * }\n * @example Using custom CSS vars generator\n * if (bindCssVars.isAvailable()) {\n *   bindCssVars(key => `--my-prefix-${key}`);\n * }\n */\nexport const bindCssVars = wrapMounted(\n  'bindCssVars',\n  (getCSSVarName?: GetCSSVarNameFn): VoidFunction => {\n    isCssVarsBound() && throwCssVarsBound();\n\n    getCSSVarName ||= (prop) => `--tg-viewport-${camelToKebab(prop)}`;\n\n    const settings = ([\n      ['height', height],\n      ['stableHeight', stableHeight],\n      ['width', width],\n      ['safeAreaInsetTop', safeAreaInsetTop],\n      ['safeAreaInsetBottom', safeAreaInsetBottom],\n      ['safeAreaInsetLeft', safeAreaInsetLeft],\n      ['safeAreaInsetRight', safeAreaInsetRight],\n      ['contentSafeAreaInsetTop', contentSafeAreaInsetTop],\n      ['contentSafeAreaInsetBottom', contentSafeAreaInsetBottom],\n      ['contentSafeAreaInsetLeft', contentSafeAreaInsetLeft],\n      ['contentSafeAreaInsetRight', contentSafeAreaInsetRight],\n    ] as const).reduce<[\n      update: VoidFunction,\n      removeListener: VoidFunction,\n      cssVar: string\n    ][]>((acc, [key, signal]) => {\n      const cssVar = getCSSVarName(key);\n      if (cssVar) {\n        const update = () => {\n          setCssVar(cssVar, `${signal()}px`);\n        };\n        acc.push([update, signal.sub(update), cssVar]);\n      }\n      return acc;\n    }, []);\n\n    // Instantly set CSS variables.\n    settings.forEach(setting => {\n      setting[0]();\n    });\n    isCssVarsBound.set(true);\n\n    return () => {\n      settings.forEach(s => {\n        // Remove update listener.\n        s[1]();\n        // Remove CSS variable.\n        deleteCssVar(s[2]);\n      });\n      isCssVarsBound.set(false);\n    };\n  },\n);", "import { postEvent } from '@/scopes/globals.js';\n\nimport { wrapBasic } from './wrappers.js';\n\n/**\n * A method that expands the Mini App to the maximum available height. To find\n * out if the Mini App is expanded to the maximum height, refer to the value of\n * the `isExpanded`.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @see isExpanded\n * @example\n * if (expand.isAvailable()) {\n *   expand();\n * }\n */\nexport const expand = wrapBasic('expand', (): void => {\n  postEvent('web_app_expand');\n});\n", "import { computed } from '@telegram-apps/signals';\n\nimport { signalFromState } from './state.js';\nimport { height, stableHeight } from './dimensions.js';\n\n/**\n * Signal indicating if the Mini App is expanded to the maximum available height. Otherwise,\n * if the Mini App occupies part of the screen and can be expanded to the full\n * height using `expand` method.\n * @see expand\n */\nexport const isExpanded = signalFromState('isExpanded');\n\n/**\n * Signal indicating if the current viewport height is stable and is not going to change in\n * the next moment.\n */\nexport const isStable = computed(() => height() === stableHeight());", "import { computed, signal } from '@telegram-apps/signals';\nimport { type EmojiStatusAccessRequestedStatus, TypedError } from '@telegram-apps/bridge';\n\nimport { ERR_ALREADY_REQUESTING } from '@/errors.js';\nimport { request } from '@/scopes/globals.js';\nimport { wrapSafe } from '@/scopes/toolkit/wrapSafe.js';\nimport { signalifyAsyncFn } from '@/scopes/signalifyAsyncFn.js';\n\nconst METHOD = 'web_app_request_emoji_status_access';\n\n/**\n * Signal containing the emoji status access request promise.\n */\nexport const requestEmojiStatusAccessPromise = signal<Promise<EmojiStatusAccessRequestedStatus> | undefined>();\n\n/**\n * Signal containing the last emoji status access request error.\n */\nexport const requestEmojiStatusAccessError = signal<Error | undefined>();\n\n/**\n * Signal indicating if the emoji status access is currently being requested.\n */\nexport const isRequestingEmojiStatusAccess = computed(() => !!requestEmojiStatusAccessPromise());\n\n/**\n * Shows a native popup requesting permission for the bot to manage user's emoji status.\n * @param options - additional options.\n * @since Mini Apps v8.0\n * @throws {TypedError} ERR_ALREADY_REQUESTING\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example\n * if (requestEmojiStatusAccess.isAvailable()) {\n *   const status = await requestEmojiStatusAccess();\n * }\n */\nexport const requestEmojiStatusAccess = wrapSafe(\n  'requestEmojiStatusAccess',\n  signalifyAsyncFn(\n    (): Promise<EmojiStatusAccessRequestedStatus> => {\n      return request(METHOD, 'emoji_status_access_requested')\n        .then(r => r.status);\n    },\n    () => new TypedError(\n      ERR_ALREADY_REQUESTING,\n      'Emoji status access request is currently in progress',\n    ),\n    requestEmojiStatusAccessPromise,\n    requestEmojiStatusAccessError,\n    false,\n  ),\n  { isSupported: METHOD },\n);", "import { computed, signal } from '@telegram-apps/signals';\nimport { TypedError } from '@telegram-apps/bridge';\n\nimport { ERR_ALREADY_REQUESTING, ERR_EMOJI_STATUS_SET_FAILED } from '@/errors.js';\nimport { request } from '@/scopes/globals.js';\nimport { wrapSafe } from '@/scopes/toolkit/wrapSafe.js';\nimport { signalifyAsyncFn } from '@/scopes/signalifyAsyncFn.js';\n\nconst METHOD = 'web_app_set_emoji_status';\n\n/**\n * Signal containing the emoji status access request promise.\n */\nexport const setEmojiStatusPromise = signal<Promise<void> | undefined>();\n\n/**\n * Signal containing the last emoji status access request error.\n */\nexport const setEmojiStatusError = signal<Error | undefined>();\n\n/**\n * Signal indicating if the emoji status set is currently being requested.\n */\nexport const isSettingEmojiStatus = computed(() => !!setEmojiStatusPromise());\n\n/**\n * Opens a dialog allowing the user to set the specified custom emoji as their status.\n * @returns Promise with boolean value indicating if the status was set.\n * @param options - additional options.\n * @since Mini Apps v8.0\n * @throws {TypedError} ERR_ALREADY_REQUESTING\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example\n * if (setEmojiStatus.isAvailable()) {\n *   const statusSet = await setEmojiStatus('5361800828313167608');\n * }\n */\nexport const setEmojiStatus = wrapSafe(\n  'setEmojiStatus',\n  signalifyAsyncFn(\n    async (customEmojiId: string, duration?: number): Promise<void> => {\n      const result = await request(METHOD, ['emoji_status_set', 'emoji_status_failed'], {\n        params: {\n          custom_emoji_id: customEmojiId,\n          duration,\n        },\n      });\n\n      if (result && 'error' in result) {\n        throw new TypedError(ERR_EMOJI_STATUS_SET_FAILED, 'Failed to set emoji status', result.error);\n      }\n    },\n    () => new TypedError(\n      ERR_ALREADY_REQUESTING,\n      'Emoji status set request is currently in progress',\n    ),\n    setEmojiStatusPromise,\n    setEmojiStatusError,\n    false,\n  ),\n  { isSupported: METHOD },\n);", "import { type OpenLinkBrowser, TypedError } from '@telegram-apps/bridge';\n\nimport { createWrapBasic } from '@/scopes/toolkit/createWrapBasic.js';\nimport { ERR_INVALID_URL } from '@/errors.js';\nimport { postEvent } from '@/scopes/globals.js';\n\nexport interface OpenLinkOptions {\n  /**\n   * Attempts to use the instant view mode.\n   */\n  tryInstantView?: boolean;\n  /**\n   * A preferred browser to open the link in.\n   */\n  tryBrowser?: OpenLinkBrowser;\n}\n\nconst wrapBasic = createWrapBasic();\n\n/**\n * Opens a link.\n *\n * The Mini App will not be closed.\n *\n * Note that this method can be called only in response to the user\n * interaction with the Mini App interface (e.g. click inside the Mini App or on the main button).\n * @param url - URL to be opened.\n * @param options - additional options.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_INVALID_URL\n * @example\n * if (openLink.isAvailable()) {\n *   openLink('https://google.com', {\n *     tryInstantView: true,\n *     tryBrowser: 'chrome',\n *   });\n * }\n */\nexport const openLink = wrapBasic(\n  'openLink',\n  (url: string | URL, options?: OpenLinkOptions): void => {\n    if (typeof url === 'string') {\n      try {\n        url = new URL(url);\n      } catch (e) {\n        throw new TypedError(ERR_INVALID_URL, `\"${url.toString()}\" is invalid URL`, e);\n      }\n    }\n    options ||= {};\n    postEvent('web_app_open_link', {\n      url: url.toString(),\n      try_browser: options.tryBrowser,\n      try_instant_view: options.tryInstantView,\n    });\n  },\n);", "import { supports, TypedError } from '@telegram-apps/bridge';\n\nimport { createWrapBasic } from '@/scopes/toolkit/createWrapBasic.js';\nimport { ERR_INVALID_URL } from '@/errors.js';\nimport { $version, postEvent } from '@/scopes/globals.js';\n\nconst OPEN_TG_LINK_METHOD = 'web_app_open_tg_link';\nconst wrapBasic = createWrapBasic();\n\n/**\n * Opens a Telegram link inside the Telegram app. The function expects passing a link in a full\n * format using the hostname \"t.me\".\n *\n * The Mini App will be closed.\n * @param url - URL to be opened.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_INVALID_URL\n * @example\n * if (openTelegramLink.isAvailable()) {\n *   openTelegramLink('https://t.me/heyqbnk');\n * }\n */\nexport const openTelegramLink = wrapBasic(\n  'openTelegramLink',\n  (url: string | URL): void => {\n    const urlString = url.toString();\n    if (!urlString.match(/^https:\\/\\/t.me\\/.+/)) {\n      throw new TypedError(ERR_INVALID_URL, `\"${urlString}\" is invalid URL`);\n    }\n\n    if (!supports(OPEN_TG_LINK_METHOD, $version())) {\n      window.location.href = urlString;\n      return;\n    }\n\n    url = new URL(url);\n    postEvent(OPEN_TG_LINK_METHOD, { path_full: url.pathname + url.search });\n  },\n);", "import { createWrapBasic } from '@/scopes/toolkit/createWrapBasic.js';\nimport { openTelegramLink } from '@/scopes/utilities/links/openTelegramLink.js';\n\nconst wrapBasic = createWrapBasic();\n\n/**\n * Shares the specified URL with the passed to the chats, selected by user.\n * After being called, it closes the mini application.\n *\n * This method uses Telegram's Share Links.\n * @param url - URL to share.\n * @param text - text to append after the URL.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @see https://core.telegram.org/api/links#share-links\n * @see https://core.telegram.org/widgets/share#custom-buttons\n */\nexport const shareURL = wrapBasic(\n  'shareURL',\n  (url: string, text?: string): void => {\n    openTelegramLink(\n      `https://t.me/share/url?` + new URLSearchParams({ url, text: text || '' })\n        .toString()\n        // By default, URL search params encode spaces with \"+\".\n        // We are replacing them with \"%20\", because plus symbols are working incorrectly\n        // in Telegram.\n        .replace(/\\+/g, '%20'),\n    );\n  },\n);\n", "import { signal } from '@telegram-apps/signals';\nimport { type AsyncOptions, type PhoneRequestedStatus, TypedError } from '@telegram-apps/bridge';\n\nimport { ERR_ALREADY_REQUESTING } from '@/errors.js';\nimport { request } from '@/scopes/globals.js';\nimport { wrapSafe } from '@/scopes/toolkit/wrapSafe.js';\n\nexport const REQUEST_PHONE_METHOD = 'web_app_request_phone';\n\n/**\n * Signal indicating if phone access is currently being requested.\n */\nexport const isRequestingPhoneAccess = signal(false);\n\n/**\n * Requests current user phone access. Method returns promise, which resolves\n * status of the request. In case, user accepted the request, Mini App bot will receive\n * the according notification.\n *\n * To obtain the retrieved information instead, utilize the `requestContact` method.\n * @param options - additional options.\n * @since Mini Apps v6.9\n * @see requestContact\n * @throws {TypedError} ERR_ALREADY_REQUESTING\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example\n * if (requestPhoneAccess.isAvailable()) {\n *   const status = await requestPhoneAccess();\n * }\n */\nexport const requestPhoneAccess = wrapSafe(\n  'requestPhoneAccess',\n  (options?: AsyncOptions): Promise<PhoneRequestedStatus> => {\n    if (isRequestingPhoneAccess()) {\n      throw new TypedError(ERR_ALREADY_REQUESTING, 'Phone access request is currently in progress');\n    }\n    isRequestingPhoneAccess.set(true);\n\n    return request(REQUEST_PHONE_METHOD, 'phone_requested', options)\n      .then(r => r.status)\n      .finally(() => {\n        isRequestingPhoneAccess.set(false);\n      });\n  },\n  {\n    isSupported: REQUEST_PHONE_METHOD,\n  },\n);", "import {\n  type AsyncOptions,\n  CancelablePromise,\n  sleep,\n  TypedError,\n} from '@telegram-apps/bridge';\nimport { date, number, object, searchParams, string } from '@telegram-apps/transformers';\n\nimport { wrapSafe } from '@/scopes/toolkit/wrapSafe.js';\nimport { invokeCustomMethod } from '@/scopes/globals.js';\nimport { ERR_ACCESS_DENIED } from '@/errors.js';\n\nimport { REQUEST_PHONE_METHOD, requestPhoneAccess } from './requestPhoneAccess.js';\n\n/**\n * Requested contact information.\n */\nexport interface RequestedContact {\n  contact: {\n    userId: number;\n    phoneNumber: string;\n    firstName: string;\n    lastName?: string;\n  };\n  authDate: Date;\n  hash: string;\n}\n\n/**\n * Attempts to get requested contact.\n * @param options - execution options.\n * @throws {TypedError} ERR_CUSTOM_METHOD_ERR_RESPONSE\n */\nfunction getRequestedContact(options?: AsyncOptions): CancelablePromise<RequestedContact> {\n  options ||= {};\n  return invokeCustomMethod('getRequestedContact', {}, {\n    ...options,\n    timeout: options.timeout || 5000,\n  })\n    .then(\n      searchParams({\n        contact: object({\n          userId: ['user_id', number()],\n          phoneNumber: ['phone_number', string()],\n          firstName: ['first_name', string()],\n          lastName: ['last_name', string(true)],\n        })(),\n        authDate: ['auth_date', date()],\n        hash: string(),\n      })(),\n    );\n}\n\n/**\n * Requests current user contact information. In contrary to requestPhoneAccess, this method\n * returns promise with contact information that rejects in case, user denied access, or request\n * failed.\n * @param options - additional options.\n * @since Mini Apps v6.9\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_ACCESS_DENIED\n * @throws {TypedError} ERR_CUSTOM_METHOD_ERR_RESPONSE\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example\n * if (requestContact.isAvailable()) {\n *   const contact = await requestContact();\n * }\n */\nexport const requestContact = wrapSafe(\n  'requestContact',\n  (options?: AsyncOptions): CancelablePromise<RequestedContact> => {\n    return CancelablePromise.withFn(\n      async (abortSignal) => {\n        const asyncOptions = { abortSignal };\n\n        // First of all, let's try to get the requested contact.\n        // Probably, we already requested it before.\n        try {\n          return await getRequestedContact(asyncOptions);\n        } catch {\n        }\n\n        // Then, request access to the user's phone.\n        const status = await requestPhoneAccess(asyncOptions);\n        if (status !== 'sent') {\n          throw new TypedError(ERR_ACCESS_DENIED, 'User denied access');\n        }\n\n        // Time to wait before executing the next request.\n        let sleepTime = 50;\n\n        // We are trying to retrieve the requested contact until the deadline was reached.\n        while (!abortSignal.aborted) {\n          try {\n            return await getRequestedContact(asyncOptions);\n          } catch {\n          }\n\n          // Sleep for some time.\n          await sleep(sleepTime);\n\n          // Increase the sleep time not to kill the backend service.\n          sleepTime += 50;\n        }\n\n        // Reachable code, but the promise will be rejected and this result will be\n        // ignored.\n        return null as any;\n      }, options,\n    );\n  },\n  {\n    isSupported: REQUEST_PHONE_METHOD,\n  },\n);", "import {\n  TypedError,\n  type WriteAccessRequestedStatus,\n  type AsyncOptions,\n} from '@telegram-apps/bridge';\nimport { signal } from '@telegram-apps/signals';\n\nimport { request } from '@/scopes/globals.js';\nimport { ERR_ALREADY_REQUESTING } from '@/errors.js';\nimport { wrapSafe } from '@/scopes/toolkit/wrapSafe.js';\n\nconst REQUEST_WRITE_ACCESS_METHOD = 'web_app_request_write_access';\n\n/**\n * Signal indicating if write access is currently being requested.\n */\nexport const isRequestingWriteAccess = signal(false);\n\n/**\n * Requests write message access to the current user.\n * @param options - additional options.\n * @since Mini Apps v6.9\n * @throws {TypedError} ERR_ALREADY_REQUESTING\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example\n * if (requestWriteAccess.isAvailable()) {\n *   const status = await requestWriteAccess();\n * }\n */\nexport const requestWriteAccess = wrapSafe(\n  'requestWriteAccess',\n  (options?: AsyncOptions): Promise<WriteAccessRequestedStatus> => {\n    if (isRequestingWriteAccess()) {\n      throw new TypedError(ERR_ALREADY_REQUESTING, 'Write access request is currently in progress');\n    }\n    isRequestingWriteAccess.set(true);\n\n    return request(REQUEST_WRITE_ACCESS_METHOD, 'write_access_requested', options)\n      .then(r => r.status)\n      .finally(() => {\n        isRequestingWriteAccess.set(false);\n      });\n  },\n  {\n    isSupported: REQUEST_WRITE_ACCESS_METHOD,\n  },\n);\n", "import type { AsyncOptions, CancelablePromise } from '@telegram-apps/bridge';\nimport { date } from '@telegram-apps/transformers';\n\nimport { invokeCustomMethod } from '@/scopes/globals.js';\nimport { wrapSafe } from '@/scopes/toolkit/wrapSafe.js';\n\n/**\n * @returns Current server time.\n * @param options - execution options.\n */\nexport const getCurrentTime = wrapSafe(\n  'getCurrentTime',\n  (options?: AsyncOptions): CancelablePromise<Date> => {\n    return invokeCustomMethod('getCurrentTime', {}, options).then(date());\n  },\n  {\n    isSupported: 'web_app_invoke_custom_method',\n  },\n);", "import { type AsyncOptions, type CancelablePromise, captureSameReq } from '@telegram-apps/bridge';\n\nimport { wrapSafe } from '@/scopes/toolkit/wrapSafe.js';\nimport { createRequestId, request } from '@/scopes/globals.js';\n\nconst READ_CLIPBOARD_METHOD = 'web_app_read_text_from_clipboard';\n\n/**\n * Reads a text from the clipboard and returns a `string` or `null`. `null` is returned\n * in cases:\n * - A value in the clipboard is not a text.\n * - Access to the clipboard is not granted.\n * @since Mini Apps v6.4\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @example\n * if (readTextFromClipboard.isAvailable()) {\n *   const value = await readTextFromClipboard();\n * }\n */\nexport const readTextFromClipboard = wrapSafe(\n  'readTextFromClipboard',\n  (options?: AsyncOptions): CancelablePromise<string | null> => {\n    const reqId = createRequestId();\n\n    return request(READ_CLIPBOARD_METHOD, 'clipboard_text_received', {\n      ...options,\n      params: { req_id: reqId },\n      capture: captureSameReq(reqId),\n    }).then(({ data = null }) => data);\n  },\n  {\n    isSupported: READ_CLIPBOARD_METHOD,\n  },\n);", "import { TypedError } from '@telegram-apps/bridge';\n\nimport { wrapSafe } from '@/scopes/toolkit/wrapSafe.js';\nimport { ERR_DATA_INVALID_SIZE } from '@/errors.js';\nimport { postEvent } from '@/scopes/globals.js';\n\n/**\n * Sends data to the bot.\n *\n * When this method called, a service message sent to the bot containing the data of the length\n * up to 4096 bytes, and the Mini App closed.\n *\n * See the field `web_app_data` in the class [Message](https://core.telegram.org/bots/api#message).\n *\n * This method is only available for Mini Apps launched via a Keyboard button.\n * @param data - data to send to bot.\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_DATA_INVALID_SIZE\n * @example\n * if (sendData.isAvailable()) {\n *   sendData('Here comes my data');\n * }\n */\nexport const sendData = wrapSafe(\n  'sendData',\n  (data: string): void => {\n    const { size } = new Blob([data]);\n    if (!size || size > 4096) {\n      throw new TypedError(ERR_DATA_INVALID_SIZE, size\n        ? 'Maximum size of data to send is 4096 bytes'\n        : 'Attempted to send empty data');\n    }\n    postEvent('web_app_data_send', { data });\n  },\n);", "import { wrapSafe } from '@/scopes/toolkit/wrapSafe.js';\nimport { postEvent } from '@/scopes/globals.js';\n\nconst SHARE_STORY_METHOD = 'web_app_share_to_story';\n\nexport interface ShareStoryOptions {\n  /**\n   * The caption to be added to the media.\n   * 0-200 characters for regular users and 0-2048 characters for premium subscribers.\n   * @see https://telegram.org/faq_premium#telegram-premium\n   */\n  text?: string;\n  /**\n   * An object that describes a widget link to be included in the story.\n   * Note that only premium subscribers can post stories with links.\n   * @see https://telegram.org/faq_premium#telegram-premium\n   */\n  widgetLink?: {\n    /**\n     * The URL to be included in the story.\n     */\n    url: string;\n    /**\n     * The name to be displayed for the widget link, 0-48 characters.\n     */\n    name?: string;\n  };\n}\n\n/**\n * Opens the native story editor.\n * @since Mini Apps v7.8\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @example\n * if (shareStory.isAvailable()) {\n *   shareStory('https://example.com/background.png', {\n *     text: 'Look at this cool group!',\n *     widgetLink: {\n *       url: 'https://t.me/heyqbnk',\n *       name: 'Vlad\\'s community',\n *     },\n *   });\n * }\n */\nexport const shareStory = wrapSafe(\n  'shareStory',\n  (mediaUrl: string, options?: ShareStoryOptions) => {\n    options ||= {};\n    postEvent(SHARE_STORY_METHOD, {\n      text: options.text,\n      media_url: mediaUrl,\n      widget_link: options.widgetLink,\n    });\n  },\n  { isSupported: SHARE_STORY_METHOD },\n);", "import { retrieveLaunchParams, type SwitchInlineQueryChatType } from '@telegram-apps/bridge';\n\nimport { postEvent } from '@/scopes/globals.js';\nimport { wrapSafe } from '@/scopes/toolkit/wrapSafe.js';\n\nconst SWITCH_INLINE_QUERY_METHOD = 'web_app_switch_inline_query';\n\n/**\n * Inserts the bot's username and the specified inline query in the current chat's input field.\n * Query may be empty, in which case only the bot's username will be inserted. The client prompts\n * the user to choose a specific chat, then opens that chat and inserts the bot's username and\n * the specified inline query in the input field.\n * @param query - text which should be inserted in the input after the current bot name. Max\n * length is 256 symbols.\n * @param chatTypes - List of chat types which could be chosen to send the message. Could be an\n * empty list.\n * @since Mini Apps v6.7\n * @throws {TypedError} ERR_NOT_SUPPORTED\n * @throws {TypedError} ERR_UNKNOWN_ENV\n * @throws {TypedError} ERR_NOT_INITIALIZED\n * @example\n * if (switchInlineQuery.isAvailable()) {\n *   switchInlineQuery('my query goes here', ['users']);\n * }\n */\nexport const switchInlineQuery = wrapSafe(\n  'switchInlineQuery',\n  (query: string, chatTypes?: SwitchInlineQueryChatType[]) => {\n    postEvent(SWITCH_INLINE_QUERY_METHOD, {\n      query: query,\n      chat_types: chatTypes || [],\n    });\n  },\n  {\n    isSupported: [SWITCH_INLINE_QUERY_METHOD, {\n      fn: () => !!retrieveLaunchParams().botInline,\n      error: 'Mini App should be ran in Bot inline mode',\n    }],\n  },\n);\n", "export type SafeCallResult<T, E> =\n  | { result: T }\n  | { error: E }\n\n/**\n * Calls the function and prevents it from throwing error. It returns an object\n * with one of two properties: `result` or `error`.\n *\n * You can use this function to safely execute any other function.\n * @param fn - function to call.\n */\nexport function safeCall<T, E = unknown>(fn: () => T): SafeCallResult<T, E> {\n  try {\n    return { result: fn() };\n  } catch (error) {\n    return { error: error as E };\n  }\n}\n", "import {\n  createCbCollector,\n  defineEventHandlers,\n  on,\n  removeEventHandlers,\n} from '@telegram-apps/bridge';\n\nimport { postEvent, configure, type ConfigureOptions } from '@/scopes/globals.js';\n\nexport interface InitOptions extends ConfigureOptions {\n  /**\n   * True if SDK should accept styles sent from the Telegram application.\n   * @default true\n   */\n  acceptCustomStyles?: boolean;\n}\n\n/**\n * Initializes the SDK allowing it to properly handle events, sent from the native Telegram\n * application.\n * @param options - function options.\n * @returns A function, to perform a cleanup.\n */\nexport function init(options?: InitOptions): VoidFunction {\n  // Configure the package global dependencies.\n  configure(options);\n\n  // Define event handlers, so we could receive the events from the Telegram application.\n  defineEventHandlers();\n\n  const [addCleanup, cleanup] = createCbCollector(\n    on('reload_iframe', () => {\n      postEvent('iframe_will_reload');\n      window.location.reload();\n    }),\n    removeEventHandlers,\n  );\n\n  const { acceptCustomStyles = true } = options || {};\n  if (acceptCustomStyles) {\n    const style = document.createElement('style');\n    style.id = 'telegram-custom-styles';\n    document.head.appendChild(style);\n\n    addCleanup(\n      on('set_custom_style', html => {\n        // It is safe to use innerHTML here as long as style tag has a special behavior related\n        // to the specified content.\n        // In case any script will be passed here, it will not be executed, so XSS is not possible.\n        style.innerHTML = html;\n      }),\n      () => {\n        document.head.removeChild(style);\n      },\n    );\n  }\n\n  // Notify Telegram that the application is ready.\n  //\n  // This will result in sending style tag html content from the Telegram web application.\n  // We should call this method also to start receiving \"reload_iframe\" events from the Telegram\n  // application.\n  //\n  // It really has no effect outside non-Telegram web environment.\n  postEvent('iframe_ready', { reload_supported: true });\n\n  return cleanup;\n}"],
  "mappings": "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",
  "names": ["u", "e", "r", "n", "h", "t", "S", "w", "D", "W", "d", "A", "o", "a", "c", "s", "P", "i", "m", "p", "E", "f", "g", "U", "R", "l", "N", "O", "_", "C", "T", "b", "y", "$", "L", "B", "classNames", "values", "value", "isRecord", "entry", "mergeClassNames", "partials", "acc", "partial", "key", "className", "G", "we", "he", "me", "de", "K", "V", "Z", "Ee", "z", "j", "ye", "ve", "Pe", "Re", "Te", "I", "Ae", "Se", "X", "Y", "$e", "Ce", "Q", "Ne", "De", "je", "ee", "te", "k", "Ue", "ne", "re", "oe", "M", "rt", "ot", "st", "F", "ge", "J", "at", "se", "We", "xe", "ct", "ke", "pt", "ft", "Le", "Oe", "ae", "qe", "Ie", "Me", "ce", "v", "ie", "Fe", "Je", "Be", "He", "Ge", "Ke", "ue", "pe", "fe", "q", "_e", "Ve", "Ze", "ze", "Xe", "le", "be", "Ye", "_t", "x", "Qe", "lt", "bt", "gt", "wt", "ht", "mt", "et", "tt", "H", "dt", "Et", "$createRequestId", "signal", "requestId", "$postEvent", "_postEvent", "$version", "configure", "options", "optionsPostEvent", "retrieveLaunchParams", "createPostEvent", "createRequestId", "invokeCustomMethod", "method", "params", "_invokeCustomMethod", "postEvent", "request", "eventOrEvents", "_request", "createIsSupported", "computed", "supports", "ERR_POPUP_INVALID_PARAMS", "ERR_INVALID_URL", "ERR_INVALID_SLUG", "ERR_DATA_INVALID_SIZE", "ERR_ACCESS_DENIED", "ERR_ALREADY_REQUESTING", "ERR_ALREADY_OPENED", "ERR_ALREADY_MOUNTING", "ERR_CSS_VARS_ALREADY_BOUND", "ERR_NOT_AVAILABLE", "ERR_NOT_INITIALIZED", "ERR_NOT_SUPPORTED", "ERR_NOT_MOUNTED", "ERR_FULLSCREEN_FAILED", "ERR_EMOJI_STATUS_SET_FAILED", "isSSR", "wrapSafe", "fn", "isSupported", "isMounted", "component", "supportsOption", "fullName", "isOptionSupported", "option", "tuple", "supportError", "defaultErr", "getError", "item", "err", "lastErr", "supportsOptionError", "args", "$isSupported", "$isInitialized", "$isMounted", "$isAvailable", "isTMA", "supportsMap", "errMessagePrefix", "TypedError", "ERR_UNKNOWN_ENV", "supportErr", "supportsOptionErr", "createWrapSafe", "overrideIsSupported", "createWrapComplete", "createWrapSupported", "SETUP_METHOD_NAME", "CLICK_EVENT_NAME", "COMPONENT_NAME", "isVisible", "wrapComplete", "wrapSupported", "hide", "setVisibility", "mount", "isPageReload", "getStorageValue", "setStorageValue", "onClick", "on", "offClick", "off", "show", "unmount", "signalifyAsyncFn", "createPendingError", "promise", "error", "cancelable", "PromiseConstructor", "CancelablePromise", "batch", "result", "createMountFn", "onMounted", "noConcurrent", "createWrapBasic", "state", "isAuthenticating", "isRequestingAccess", "isMounting", "mountPromise", "mountError", "isAvailable", "eventToState", "event", "GET_INFO_METHOD", "requestBiometry", "REQUEST_AUTH_METHOD", "REQUEST_ACCESS_METHOD", "OPEN_SETTINGS_METHOD", "UPDATE_TOKEN_METHOD", "INFO_RECEIVED_EVENT", "wrapBasic", "throwNotAvailable", "authenticate", "abortSignal", "response", "token", "setState", "openSettings", "requestAccess", "info", "onBiometryInfoReceived", "updateToken", "createWrapMounted", "isConfirmationEnabled", "wrapMounted", "disableConfirmation", "setClosingConfirmation", "enableConfirmation", "INVOKE_METHOD_NAME", "deleteItem", "keyOrKeys", "keys", "_getItem", "data", "object", "string", "getItem", "getKeys", "array", "setItem", "HAPTIC_METHOD_NAME", "impactOccurred", "style", "notificationOccurred", "type", "selectionChanged", "fromState", "authDate", "canSendAfter", "canSendAfterDate", "authDateValue", "canSendAfterValue", "chat", "chatType", "chatInstance", "hash", "queryId", "raw", "receiver", "restore", "lp", "startParam", "user", "parseInitData", "initData", "OPEN_METHOD", "isOpened", "_open", "urlOrSlug", "optionsOrType", "slug", "hostname", "pathname", "match", "open", "removeUndefined", "isColorDark", "color", "rgb", "toRGB", "modifier", "idx", "dec", "isCssVarsBound", "accentTextColor", "backgroundColor", "buttonColor", "buttonTextColor", "bottomBarBgColor", "destructiveTextColor", "headerBackgroundColor", "hintColor", "isDark", "bgColor", "linkColor", "secondaryBackgroundColor", "sectionBackgroundColor", "sectionHeaderTextColor", "sectionSeparatorColor", "subtitleTextColor", "textColor", "internalState", "hasShineEffect", "isEnabled", "isLoaderVisible", "text", "prev", "setParams", "updates", "throwCssVarsBound", "parseThemeParams", "themeParams", "THEME_CHANGED_EVENT", "bindCssVars", "getCSSVarName", "prop", "camelToKebab", "forEachEntry", "actualize", "setCssVar", "deleteCssVar", "onThemeChanged", "rgbBasedOn", "isRGB", "themeBgColor", "themeSecondaryBgColor", "backgroundColorRGB", "bottomBarColor", "bottomBarColorRGB", "themeBottomBarBgColor", "headerColor", "headerColorRGB", "SET_BG_COLOR_METHOD", "SET_BOTTOM_BAR_COLOR_METHOD", "SET_HEADER_COLOR_METHOD", "isSupportedSchema", "addCleanup", "cleanup", "createCbCollector", "bind", "cssVar", "update", "close", "returnBack", "tpMount", "setBackgroundColor", "setBottomBarColor", "setHeaderColor", "ready", "saveState", "prepareParams", "message", "title", "buttons", "id", "buttonId", "CLOSE_METHOD", "CLOSED_EVENT", "TEXT_RECEIVED_EVENT", "onCaptured", "capture", "EnhancedPromise", "position", "isVerticalEnabled", "disableVertical", "setVerticalEnabled", "enableVertical", "force", "REQUEST_FS_METHOD", "FS_FAILED_EVENT", "FS_CHANGED_EVENT", "SA_CHANGED_EVENT", "CSA_CHANGED_EVENT", "VIEWPORT_CHANGED_EVENT", "REQUEST_SAFE_AREA_METHOD", "REQUEST_CONTENT_SAFE_AREA_METHOD", "initialInsets", "nonNegative", "signalFromState", "height", "stableHeight", "width", "getStateFromStorage", "isFullscreen", "changeFullscreenPromise", "isChangingFullscreen", "changeFullscreenError", "createFullscreenFn", "requestMethod", "requestFullscreen", "exitFullscreen", "safeAreaInsets", "safeAreaInsetBottom", "safeAreaInsetLeft", "safeAreaInsetRight", "safeAreaInsetTop", "contentSafeAreaInsets", "contentSafeAreaInsetBottom", "contentSafeAreaInsetLeft", "contentSafeAreaInsetRight", "contentSafeAreaInsetTop", "requestContentSafeAreaInsets", "requestSafeAreaInsets", "requestViewport", "onViewportChanged", "onFullscreenChanged", "onSafeAreaChanged", "onContentSafeAreaChanged", "retrievedSafeAreaInsets", "retrievedContentSafeAreaInsets", "shared", "settings", "setting", "expand", "isExpanded", "isStable", "METHOD", "requestEmojiStatusAccessPromise", "requestEmojiStatusAccessError", "isRequestingEmojiStatusAccess", "requestEmojiStatusAccess", "setEmojiStatusPromise", "setEmojiStatusError", "isSettingEmojiStatus", "setEmojiStatus", "customEmojiId", "duration", "openLink", "url", "OPEN_TG_LINK_METHOD", "openTelegramLink", "urlString", "shareURL", "REQUEST_PHONE_METHOD", "isRequestingPhoneAccess", "requestPhoneAccess", "getRequestedContact", "searchParams", "number", "date", "requestContact", "asyncOptions", "sleepTime", "sleep", "REQUEST_WRITE_ACCESS_METHOD", "isRequestingWriteAccess", "requestWriteAccess", "getCurrentTime", "READ_CLIPBOARD_METHOD", "readTextFromClipboard", "reqId", "captureSameReq", "sendData", "size", "SHARE_STORY_METHOD", "shareStory", "mediaUrl", "SWITCH_INLINE_QUERY_METHOD", "switchInlineQuery", "query", "chatTypes", "safeCall", "init", "defineEventHandlers", "removeEventHandlers", "acceptCustomStyles", "html"]
}
